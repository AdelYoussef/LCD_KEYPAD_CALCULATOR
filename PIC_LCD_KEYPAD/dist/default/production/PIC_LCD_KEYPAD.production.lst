

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Jun 07 01:19:36 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2,group=3
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2,group=3
    45                           	psect	text28,local,class=CODE,merge=1,delta=2,group=3
    46                           	psect	text29,local,class=CODE,merge=1,delta=2,group=3
    47                           	psect	text30,local,class=CODE,merge=1,delta=2,group=3
    48                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    62                           	dabs	1,0x7E,2
    63  0000                     
    64                           ; Version 2.40
    65                           ; Generated 17/11/2021 GMT
    66                           ; 
    67                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution. Publication is not required when
    81                           ;        this file is used in an embedded application.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC16F877A Definitions
    97                           ; 
    98                           ; SFR Addresses
    99  0000                     	;# 
   100  0001                     	;# 
   101  0002                     	;# 
   102  0003                     	;# 
   103  0004                     	;# 
   104  0005                     	;# 
   105  0006                     	;# 
   106  0007                     	;# 
   107  0008                     	;# 
   108  0009                     	;# 
   109  000A                     	;# 
   110  000B                     	;# 
   111  000C                     	;# 
   112  000D                     	;# 
   113  000E                     	;# 
   114  000E                     	;# 
   115  000F                     	;# 
   116  0010                     	;# 
   117  0011                     	;# 
   118  0012                     	;# 
   119  0013                     	;# 
   120  0014                     	;# 
   121  0015                     	;# 
   122  0015                     	;# 
   123  0016                     	;# 
   124  0017                     	;# 
   125  0018                     	;# 
   126  0019                     	;# 
   127  001A                     	;# 
   128  001B                     	;# 
   129  001B                     	;# 
   130  001C                     	;# 
   131  001D                     	;# 
   132  001E                     	;# 
   133  001F                     	;# 
   134  0081                     	;# 
   135  0085                     	;# 
   136  0086                     	;# 
   137  0087                     	;# 
   138  0088                     	;# 
   139  0089                     	;# 
   140  008C                     	;# 
   141  008D                     	;# 
   142  008E                     	;# 
   143  0091                     	;# 
   144  0092                     	;# 
   145  0093                     	;# 
   146  0094                     	;# 
   147  0098                     	;# 
   148  0099                     	;# 
   149  009C                     	;# 
   150  009D                     	;# 
   151  009E                     	;# 
   152  009F                     	;# 
   153  010C                     	;# 
   154  010D                     	;# 
   155  010E                     	;# 
   156  010F                     	;# 
   157  018C                     	;# 
   158  018D                     	;# 
   159  0000                     	;# 
   160  0001                     	;# 
   161  0002                     	;# 
   162  0003                     	;# 
   163  0004                     	;# 
   164  0005                     	;# 
   165  0006                     	;# 
   166  0007                     	;# 
   167  0008                     	;# 
   168  0009                     	;# 
   169  000A                     	;# 
   170  000B                     	;# 
   171  000C                     	;# 
   172  000D                     	;# 
   173  000E                     	;# 
   174  000E                     	;# 
   175  000F                     	;# 
   176  0010                     	;# 
   177  0011                     	;# 
   178  0012                     	;# 
   179  0013                     	;# 
   180  0014                     	;# 
   181  0015                     	;# 
   182  0015                     	;# 
   183  0016                     	;# 
   184  0017                     	;# 
   185  0018                     	;# 
   186  0019                     	;# 
   187  001A                     	;# 
   188  001B                     	;# 
   189  001B                     	;# 
   190  001C                     	;# 
   191  001D                     	;# 
   192  001E                     	;# 
   193  001F                     	;# 
   194  0081                     	;# 
   195  0085                     	;# 
   196  0086                     	;# 
   197  0087                     	;# 
   198  0088                     	;# 
   199  0089                     	;# 
   200  008C                     	;# 
   201  008D                     	;# 
   202  008E                     	;# 
   203  0091                     	;# 
   204  0092                     	;# 
   205  0093                     	;# 
   206  0094                     	;# 
   207  0098                     	;# 
   208  0099                     	;# 
   209  009C                     	;# 
   210  009D                     	;# 
   211  009E                     	;# 
   212  009F                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  018C                     	;# 
   218  018D                     	;# 
   219                           
   220                           	psect	idataBANK1
   221  10C8                     __pidataBANK1:
   222                           
   223                           ;initializer for _operation
   224  10C8  3420               	retlw	32
   225                           
   226                           	psect	idataBANK3
   227  19F5                     __pidataBANK3:
   228                           
   229                           ;initializer for _key
   230  19F5  3437               	retlw	55
   231  19F6  3438               	retlw	56
   232  19F7  3439               	retlw	57
   233  19F8  342F               	retlw	47
   234  19F9  3434               	retlw	52
   235  19FA  3435               	retlw	53
   236  19FB  3436               	retlw	54
   237  19FC  342A               	retlw	42
   238  19FD  3431               	retlw	49
   239  19FE  3432               	retlw	50
   240  19FF  3433               	retlw	51
   241  1A00  342D               	retlw	45
   242  1A01  3463               	retlw	99
   243  1A02  3430               	retlw	48
   244  1A03  343D               	retlw	61
   245  1A04  342B               	retlw	43
   246                           
   247                           ;initializer for _in
   248  1A05  3410               	retlw	16
   249  1A06  3420               	retlw	32
   250  1A07  3440               	retlw	64
   251  1A08  3480               	retlw	128
   252                           
   253                           ;initializer for _out
   254  1A09  3401               	retlw	1
   255  1A0A  3402               	retlw	2
   256  1A0B  3404               	retlw	4
   257  1A0C  3408               	retlw	8
   258                           
   259                           	psect	strings
   260  1000                     __pstrings:
   261  1000                     stringtab:
   262  1000                     __stringtab:
   263                           
   264                           ;	String table - string pointers are 1 byte each
   265  1000  1BFF               	btfsc	btemp+1,7
   266  1001  280A               	ljmp	stringcode
   267  1002  1383               	bcf	3,7
   268  1003  187F               	btfsc	btemp+1,0
   269  1004  1783               	bsf	3,7
   270  1005  0800               	movf	0,w
   271  1006  0A84               	incf	4,f
   272  1007  1903               	skipnz
   273  1008  0AFF               	incf	btemp+1,f
   274  1009  0008               	return
   275  100A                     stringcode:
   276  100A                     stringdir:
   277  100A  3010               	movlw	high stringdir
   278  100B  008A               	movwf	10
   279  100C  0804               	movf	4,w
   280  100D  0A84               	incf	4,f
   281  100E  0782               	addwf	2,f
   282  100F                     __stringbase:
   283  100F  3400               	retlw	0
   284  1010                     __end_of__stringtab:
   285  1010                     __powers_:
   286  1010  3400               	retlw	0
   287  1011  3400               	retlw	0
   288  1012  3480               	retlw	128
   289  1013  343F               	retlw	63
   290  1014  3400               	retlw	0
   291  1015  3400               	retlw	0
   292  1016  3420               	retlw	32
   293  1017  3441               	retlw	65
   294  1018  3400               	retlw	0
   295  1019  3400               	retlw	0
   296  101A  34C8               	retlw	200
   297  101B  3442               	retlw	66
   298  101C  3400               	retlw	0
   299  101D  3400               	retlw	0
   300  101E  347A               	retlw	122
   301  101F  3444               	retlw	68
   302  1020  3400               	retlw	0
   303  1021  3440               	retlw	64
   304  1022  341C               	retlw	28
   305  1023  3446               	retlw	70
   306  1024  3400               	retlw	0
   307  1025  3450               	retlw	80
   308  1026  34C3               	retlw	195
   309  1027  3447               	retlw	71
   310  1028  3400               	retlw	0
   311  1029  3424               	retlw	36
   312  102A  3474               	retlw	116
   313  102B  3449               	retlw	73
   314  102C  3480               	retlw	128
   315  102D  3496               	retlw	150
   316  102E  3418               	retlw	24
   317  102F  344B               	retlw	75
   318  1030  3420               	retlw	32
   319  1031  34BC               	retlw	188
   320  1032  34BE               	retlw	190
   321  1033  344C               	retlw	76
   322  1034  3428               	retlw	40
   323  1035  346B               	retlw	107
   324  1036  346E               	retlw	110
   325  1037  344E               	retlw	78
   326  1038  34F9               	retlw	249
   327  1039  3402               	retlw	2
   328  103A  3415               	retlw	21
   329  103B  3450               	retlw	80
   330  103C  34EC               	retlw	236
   331  103D  3478               	retlw	120
   332  103E  34AD               	retlw	173
   333  103F  3460               	retlw	96
   334  1040  34CA               	retlw	202
   335  1041  34F2               	retlw	242
   336  1042  3449               	retlw	73
   337  1043  3471               	retlw	113
   338  1044                     __end_of__powers_:
   339  1044                     __npowers_:
   340  1044  3400               	retlw	0
   341  1045  3400               	retlw	0
   342  1046  3480               	retlw	128
   343  1047  343F               	retlw	63
   344  1048  34CD               	retlw	205
   345  1049  34CC               	retlw	204
   346  104A  34CC               	retlw	204
   347  104B  343D               	retlw	61
   348  104C  340A               	retlw	10
   349  104D  34D7               	retlw	215
   350  104E  3423               	retlw	35
   351  104F  343C               	retlw	60
   352  1050  346F               	retlw	111
   353  1051  3412               	retlw	18
   354  1052  3483               	retlw	131
   355  1053  343A               	retlw	58
   356  1054  3417               	retlw	23
   357  1055  34B7               	retlw	183
   358  1056  34D1               	retlw	209
   359  1057  3438               	retlw	56
   360  1058  34AC               	retlw	172
   361  1059  34C5               	retlw	197
   362  105A  3427               	retlw	39
   363  105B  3437               	retlw	55
   364  105C  34BD               	retlw	189
   365  105D  3437               	retlw	55
   366  105E  3486               	retlw	134
   367  105F  3435               	retlw	53
   368  1060  3495               	retlw	149
   369  1061  34BF               	retlw	191
   370  1062  34D6               	retlw	214
   371  1063  3433               	retlw	51
   372  1064  3477               	retlw	119
   373  1065  34CC               	retlw	204
   374  1066  342B               	retlw	43
   375  1067  3432               	retlw	50
   376  1068  345F               	retlw	95
   377  1069  3470               	retlw	112
   378  106A  3489               	retlw	137
   379  106B  3430               	retlw	48
   380  106C  34FF               	retlw	255
   381  106D  34E6               	retlw	230
   382  106E  34DB               	retlw	219
   383  106F  342E               	retlw	46
   384  1070  3408               	retlw	8
   385  1071  34E5               	retlw	229
   386  1072  343C               	retlw	60
   387  1073  341E               	retlw	30
   388  1074  3460               	retlw	96
   389  1075  3442               	retlw	66
   390  1076  34A2               	retlw	162
   391  1077  340D               	retlw	13
   392  1078                     __end_of__npowers_:
   393  1078                     _dpowers:
   394  1078  3401               	retlw	1
   395  1079  3400               	retlw	0
   396  107A  3400               	retlw	0
   397  107B  3400               	retlw	0
   398  107C  340A               	retlw	10
   399  107D  3400               	retlw	0
   400  107E  3400               	retlw	0
   401  107F  3400               	retlw	0
   402  1080  3464               	retlw	100
   403  1081  3400               	retlw	0
   404  1082  3400               	retlw	0
   405  1083  3400               	retlw	0
   406  1084  34E8               	retlw	232
   407  1085  3403               	retlw	3
   408  1086  3400               	retlw	0
   409  1087  3400               	retlw	0
   410  1088  3410               	retlw	16
   411  1089  3427               	retlw	39
   412  108A  3400               	retlw	0
   413  108B  3400               	retlw	0
   414  108C  34A0               	retlw	160
   415  108D  3486               	retlw	134
   416  108E  3401               	retlw	1
   417  108F  3400               	retlw	0
   418  1090  3440               	retlw	64
   419  1091  3442               	retlw	66
   420  1092  340F               	retlw	15
   421  1093  3400               	retlw	0
   422  1094  3480               	retlw	128
   423  1095  3496               	retlw	150
   424  1096  3498               	retlw	152
   425  1097  3400               	retlw	0
   426  1098  3400               	retlw	0
   427  1099  34E1               	retlw	225
   428  109A  34F5               	retlw	245
   429  109B  3405               	retlw	5
   430  109C  3400               	retlw	0
   431  109D  34CA               	retlw	202
   432  109E  349A               	retlw	154
   433  109F  343B               	retlw	59
   434  10A0                     __end_of_dpowers:
   435  0006                     _PORTB	set	6
   436  003D                     _RC5	set	61
   437  003C                     _RC4	set	60
   438  003B                     _RC3	set	59
   439  003A                     _RC2	set	58
   440  0039                     _RC1	set	57
   441  0038                     _RC0	set	56
   442  0086                     _TRISB	set	134
   443  0087                     _TRISC	set	135
   444  043D                     _TRISC5	set	1085
   445  043C                     _TRISC4	set	1084
   446  10A0                     STR_4:
   447  10A0  3461               	retlw	97	;'a'
   448  10A1  3464               	retlw	100	;'d'
   449  10A2  3465               	retlw	101	;'e'
   450  10A3  346C               	retlw	108	;'l'
   451  10A4  3420               	retlw	32	;' '
   452  10A5  3473               	retlw	115	;'s'
   453  10A6  3461               	retlw	97	;'a'
   454  10A7  3479               	retlw	121	;'y'
   455  10A8  3473               	retlw	115	;'s'
   456  10A9  3420               	retlw	32	;' '
   457  10AA  3468               	retlw	104	;'h'
   458  10AB  3465               	retlw	101	;'e'
   459  10AC  346C               	retlw	108	;'l'
   460  10AD  346C               	retlw	108	;'l'
   461  10AE  346F               	retlw	111	;'o'
   462  10AF  3420               	retlw	32	;' '
   463  10B0  3400               	retlw	0
   464  10B1  3400               	retlw	0
   465  10B2                     STR_2:
   466  10B2  3441               	retlw	65	;'A'
   467  10B3  344E               	retlw	78	;'N'
   468  10B4  3453               	retlw	83	;'S'
   469  10B5  3457               	retlw	87	;'W'
   470  10B6  3445               	retlw	69	;'E'
   471  10B7  3452               	retlw	82	;'R'
   472  10B8  3420               	retlw	32	;' '
   473  10B9  343D               	retlw	61	;'='
   474  10BA  3420               	retlw	32	;' '
   475  10BB  3400               	retlw	0
   476  10BC  3400               	retlw	0
   477  10BD                     STR_3:
   478  10BD  3463               	retlw	99	;'c'
   479  10BE  346C               	retlw	108	;'l'
   480  10BF  3465               	retlw	101	;'e'
   481  10C0  3461               	retlw	97	;'a'
   482  10C1  3472               	retlw	114	;'r'
   483  10C2  3420               	retlw	32	;' '
   484  10C3  3400               	retlw	0
   485  10C4  3400               	retlw	0
   486  10C5                     STR_1:
   487  10C5  3425               	retlw	37	;'%'
   488  10C6  3466               	retlw	102	;'f'
   489  10C7  3400               	retlw	0
   490                           
   491                           	psect	cinit
   492  07D8                     start_initialization:	
   493                           ; #config settings
   494                           
   495  07D8                     __initialization:
   496                           
   497                           ; Initialize objects allocated to BANK3
   498  07D8  1783               	bsf	3,7	;select IRP bank2
   499  07D9  30CA               	movlw	low (__pdataBANK3+24)
   500  07DA  00FD               	movwf	btemp+-1
   501  07DB  3019               	movlw	high __pidataBANK3
   502  07DC  00FE               	movwf	btemp
   503  07DD  30F5               	movlw	low __pidataBANK3
   504  07DE  00FF               	movwf	btemp+1
   505  07DF  30B2               	movlw	low __pdataBANK3
   506  07E0  0084               	movwf	4
   507  07E1  160A  158A  21C2  120A  118A  	fcall	init_ram0
   508                           
   509                           ; Initialize objects allocated to BANK1
   510  07E6  1683               	bsf	3,5	;RP0=1, select bank1
   511  07E7  160A  118A  20C8  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   512  07EC  00ED               	movwf	__pdataBANK1& (0+127)
   513                           
   514                           ; Clear objects allocated to BANK3
   515  07ED  3090               	movlw	low __pbssBANK3
   516  07EE  0084               	movwf	4
   517  07EF  30B2               	movlw	low (__pbssBANK3+34)
   518  07F0  160A  158A  218B  120A  118A  	fcall	clear_ram0
   519                           
   520                           ; Clear objects allocated to BANK1
   521  07F5  1383               	bcf	3,7	;select IRP bank0
   522  07F6  30E5               	movlw	low __pbssBANK1
   523  07F7  0084               	movwf	4
   524  07F8  30ED               	movlw	low (__pbssBANK1+8)
   525  07F9  160A  158A  218B   	fcall	clear_ram0
   526  07FC                     end_of_initialization:	
   527                           ;End of C runtime variable initialization code
   528                           
   529  07FC                     __end_of__initialization:
   530  07FC  0183               	clrf	3
   531  07FD  160A  158A  2EC7   	ljmp	_main	;jump to C main() function
   532                           
   533                           	psect	bssBANK1
   534  00E5                     __pbssBANK1:
   535  00E5                     _val_1:
   536  00E5                     	ds	4
   537  00E9                     _c:
   538  00E9                     	ds	2
   539  00EB                     _level:
   540  00EB                     	ds	2
   541                           
   542                           	psect	dataBANK1
   543  00ED                     __pdataBANK1:
   544  00ED                     _operation:
   545  00ED                     	ds	1
   546                           
   547                           	psect	bssBANK3
   548  0190                     __pbssBANK3:
   549  0190                     calc@F1256:
   550  0190                     	ds	10
   551  019A                     _val_2:
   552  019A                     	ds	4
   553  019E                     _val_two:
   554  019E                     	ds	10
   555  01A8                     _val_one:
   556  01A8                     	ds	10
   557                           
   558                           	psect	dataBANK3
   559  01B2                     __pdataBANK3:
   560  01B2                     _key:
   561  01B2                     	ds	16
   562  01C2                     _in:
   563  01C2                     	ds	4
   564  01C6                     _out:
   565  01C6                     	ds	4
   566                           
   567                           	psect	inittext
   568  19BE                     init_fetch0:	
   569                           ;	Called with low address in FSR and high address in W
   570                           
   571  19BE  087E               	movf	126,w
   572  19BF  008A               	movwf	10
   573  19C0  087F               	movf	127,w
   574  19C1  0082               	movwf	2
   575  19C2                     init_ram0:	
   576                           ;Called with:
   577                           ;	high address of idata address in btemp 
   578                           ;	low address of idata address in btemp+1 
   579                           ;	low address of data in FSR
   580                           ;	high address + 1 of data in btemp-1
   581                           
   582  19C2  21BE  160A  158A   	fcall	init_fetch0
   583  19C5  0080               	movwf	0
   584  19C6  0A84               	incf	4,f
   585  19C7  0804               	movf	4,w
   586  19C8  067D               	xorwf	125,w
   587  19C9  1903               	btfsc	3,2
   588  19CA  3400               	retlw	0
   589  19CB  0AFF               	incf	127,f
   590  19CC  1903               	btfsc	3,2
   591  19CD  0AFE               	incf	126,f
   592  19CE  29C2               	goto	init_ram0
   593                           
   594                           	psect	clrtext
   595  198B                     clear_ram0:	
   596                           ;	Called with FSR containing the base address, and
   597                           ;	W with the last address+1
   598                           
   599  198B  0064               	clrwdt	;clear the watchdog before getting into this loop
   600  198C                     clrloop0:
   601  198C  0180               	clrf	0	;clear RAM location pointed to by FSR
   602  198D  0A84               	incf	4,f	;increment pointer
   603  198E  0604               	xorwf	4,w	;XOR with final address
   604  198F  1903               	btfsc	3,2	;have we reached the end yet?
   605  1990  3400               	retlw	0	;all done for this memory range, return
   606  1991  0604               	xorwf	4,w	;XOR again to restore value
   607  1992  298C               	goto	clrloop0	;do the next byte
   608                           
   609                           	psect	cstackBANK1
   610  00A0                     __pcstackBANK1:
   611  00A0                     ?_sprintf:
   612  00A0                     sprintf@f:	
   613                           ; 2 bytes @ 0x0
   614                           
   615                           
   616                           ; 1 bytes @ 0x0
   617  00A0                     	ds	5
   618  00A5                     ??_sprintf:
   619                           
   620                           ; 1 bytes @ 0x5
   621  00A5                     	ds	5
   622  00AA                     _sprintf$882:
   623                           
   624                           ; 4 bytes @ 0xA
   625  00AA                     	ds	4
   626  00AE                     sprintf@ap:
   627                           
   628                           ; 1 bytes @ 0xE
   629  00AE                     	ds	1
   630  00AF                     sprintf@flag:
   631                           
   632                           ; 2 bytes @ 0xF
   633  00AF                     	ds	2
   634  00B1                     sprintf@prec:
   635                           
   636                           ; 2 bytes @ 0x11
   637  00B1                     	ds	2
   638  00B3                     sprintf@val:
   639                           
   640                           ; 4 bytes @ 0x13
   641  00B3                     	ds	4
   642  00B7                     sprintf@eexp:
   643                           
   644                           ; 2 bytes @ 0x17
   645  00B7                     	ds	2
   646  00B9                     sprintf@tmpval:
   647                           
   648                           ; 4 bytes @ 0x19
   649  00B9                     	ds	4
   650  00BD                     sprintf@sp:
   651                           
   652                           ; 1 bytes @ 0x1D
   653  00BD                     	ds	1
   654  00BE                     sprintf@fval:
   655                           
   656                           ; 4 bytes @ 0x1E
   657  00BE                     	ds	4
   658  00C2                     sprintf@c:
   659                           
   660                           ; 1 bytes @ 0x22
   661  00C2                     	ds	1
   662  00C3                     ?_calc:
   663  00C3                     calc@num_1:	
   664                           ; 1 bytes @ 0x23
   665                           
   666                           
   667                           ; 4 bytes @ 0x23
   668  00C3                     	ds	4
   669  00C7                     calc@num_2:
   670                           
   671                           ; 4 bytes @ 0x27
   672  00C7                     	ds	4
   673  00CB                     calc@operation:
   674                           
   675                           ; 1 bytes @ 0x2B
   676  00CB                     	ds	1
   677  00CC                     calc@res:
   678                           
   679                           ; 10 bytes @ 0x2C
   680  00CC                     	ds	10
   681  00D6                     calc@result:
   682                           
   683                           ; 4 bytes @ 0x36
   684  00D6                     	ds	4
   685  00DA                     ??_append:
   686                           
   687                           ; 1 bytes @ 0x3A
   688  00DA                     	ds	3
   689  00DD                     append@key:
   690                           
   691                           ; 1 bytes @ 0x3D
   692  00DD                     	ds	1
   693  00DE                     ??_main:
   694                           
   695                           ; 1 bytes @ 0x3E
   696  00DE                     	ds	3
   697  00E1                     main@i:
   698                           
   699                           ; 2 bytes @ 0x41
   700  00E1                     	ds	2
   701  00E3                     main@j:
   702                           
   703                           ; 2 bytes @ 0x43
   704  00E3                     	ds	2
   705                           
   706                           	psect	cstackCOMMON
   707  0070                     __pcstackCOMMON:
   708  0070                     ?_isspace:
   709  0070                     ?_isdigit:	
   710                           ; 1 bit 
   711                           
   712  0070                     ?___fleq:	
   713                           ; 1 bit 
   714                           
   715  0070                     ?___flge:	
   716                           ; 1 bit 
   717                           
   718  0070                     ?_memset:	
   719                           ; 1 bit 
   720                           
   721  0070                     ?_strcpy:	
   722                           ; 1 bytes @ 0x0
   723                           
   724  0070                     ?_strncat:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0070                     ??_isspace:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0070                     ??_isdigit:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0070                     ?_LCD_DATA:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0070                     ??_LCD_DATA:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0070                     ?_LCD_CMD:	
   740                           ; 1 bytes @ 0x0
   741                           
   742  0070                     ?_LCD_Init:	
   743                           ; 1 bytes @ 0x0
   744                           
   745  0070                     ?_LCD_Write_Char:	
   746                           ; 1 bytes @ 0x0
   747                           
   748  0070                     ?_LCD_Clear:	
   749                           ; 1 bytes @ 0x0
   750                           
   751  0070                     ?_clr:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0070                     ?_show:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0070                     ?_append:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0070                     ?_main:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0070                     ?___bmul:	
   764                           ; 1 bytes @ 0x0
   765                           
   766  0070                     ?___lbmod:	
   767                           ; 1 bytes @ 0x0
   768                           
   769  0070                     ?__Umul8_16:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0070                     ?___wmul:	
   773                           ; 2 bytes @ 0x0
   774                           
   775  0070                     ?___awmod:	
   776                           ; 2 bytes @ 0x0
   777                           
   778  0070                     ?__tdiv_to_l_:	
   779                           ; 2 bytes @ 0x0
   780                           
   781  0070                     ?__div_to_l_:	
   782                           ; 4 bytes @ 0x0
   783                           
   784  0070                     ?___lmul:	
   785                           ; 4 bytes @ 0x0
   786                           
   787  0070                     ?___lldiv:	
   788                           ; 4 bytes @ 0x0
   789                           
   790  0070                     ?___flneg:	
   791                           ; 4 bytes @ 0x0
   792                           
   793  0070                     ?___llmod:	
   794                           ; 4 bytes @ 0x0
   795                           
   796  0070                     ?___fldiv:	
   797                           ; 4 bytes @ 0x0
   798                           
   799  0070                     ?___xxtofl:	
   800                           ; 4 bytes @ 0x0
   801                           
   802  0070                     LCD_DATA@Data:	
   803                           ; 4 bytes @ 0x0
   804                           
   805  0070                     ___bmul@multiplicand:	
   806                           ; 1 bytes @ 0x0
   807                           
   808  0070                     ___lbmod@divisor:	
   809                           ; 1 bytes @ 0x0
   810                           
   811  0070                     __Umul8_16@multiplicand:	
   812                           ; 1 bytes @ 0x0
   813                           
   814  0070                     _isdigit$666:	
   815                           ; 1 bytes @ 0x0
   816                           
   817  0070                     _isspace$669:	
   818                           ; 1 bytes @ 0x0
   819                           
   820  0070                     strcpy@from:	
   821                           ; 1 bytes @ 0x0
   822                           
   823  0070                     strncat@from:	
   824                           ; 1 bytes @ 0x0
   825                           
   826  0070                     ___wmul@multiplier:	
   827                           ; 1 bytes @ 0x0
   828                           
   829  0070                     ___awmod@divisor:	
   830                           ; 2 bytes @ 0x0
   831                           
   832  0070                     memset@c:	
   833                           ; 2 bytes @ 0x0
   834                           
   835  0070                     ___lmul@multiplier:	
   836                           ; 2 bytes @ 0x0
   837                           
   838  0070                     ___lldiv@divisor:	
   839                           ; 4 bytes @ 0x0
   840                           
   841  0070                     __div_to_l_@f1:	
   842                           ; 4 bytes @ 0x0
   843                           
   844  0070                     ___fleq@ff1:	
   845                           ; 4 bytes @ 0x0
   846                           
   847  0070                     ___flge@ff1:	
   848                           ; 4 bytes @ 0x0
   849                           
   850  0070                     ___flneg@f1:	
   851                           ; 4 bytes @ 0x0
   852                           
   853  0070                     __tdiv_to_l_@f1:	
   854                           ; 4 bytes @ 0x0
   855                           
   856  0070                     ___llmod@divisor:	
   857                           ; 4 bytes @ 0x0
   858                           
   859  0070                     ___fldiv@a:	
   860                           ; 4 bytes @ 0x0
   861                           
   862  0070                     ___xxtofl@val:	
   863                           ; 4 bytes @ 0x0
   864                           
   865                           
   866                           ; 4 bytes @ 0x0
   867  0070                     	ds	1
   868  0071                     ??_strcpy:
   869  0071                     ??_LCD_CMD:	
   870                           ; 1 bytes @ 0x1
   871                           
   872  0071                     ??_LCD_Write_Char:	
   873                           ; 1 bytes @ 0x1
   874                           
   875  0071                     ??___bmul:	
   876                           ; 1 bytes @ 0x1
   877                           
   878  0071                     ??___lbmod:	
   879                           ; 1 bytes @ 0x1
   880                           
   881  0071                     isdigit@c:	
   882                           ; 1 bytes @ 0x1
   883                           
   884  0071                     isspace@c:	
   885                           ; 1 bytes @ 0x1
   886                           
   887  0071                     strncat@size:	
   888                           ; 1 bytes @ 0x1
   889                           
   890                           
   891                           ; 2 bytes @ 0x1
   892  0071                     	ds	1
   893  0072                     ??__Umul8_16:
   894  0072                     LCD_CMD@CMD:	
   895                           ; 1 bytes @ 0x2
   896                           
   897  0072                     LCD_Write_Char@Low4:	
   898                           ; 1 bytes @ 0x2
   899                           
   900  0072                     ___bmul@product:	
   901                           ; 1 bytes @ 0x2
   902                           
   903  0072                     strcpy@to:	
   904                           ; 1 bytes @ 0x2
   905                           
   906  0072                     ___wmul@multiplicand:	
   907                           ; 1 bytes @ 0x2
   908                           
   909  0072                     ___awmod@dividend:	
   910                           ; 2 bytes @ 0x2
   911                           
   912  0072                     memset@n:	
   913                           ; 2 bytes @ 0x2
   914                           
   915                           
   916                           ; 2 bytes @ 0x2
   917  0072                     	ds	1
   918  0073                     ??_strncat:
   919  0073                     ??_LCD_Init:	
   920                           ; 1 bytes @ 0x3
   921                           
   922  0073                     ??_LCD_Clear:	
   923                           ; 1 bytes @ 0x3
   924                           
   925  0073                     ?_LCD_Set_Cursor:	
   926                           ; 1 bytes @ 0x3
   927                           
   928  0073                     LCD_Write_Char@High4:	
   929                           ; 1 bytes @ 0x3
   930                           
   931  0073                     LCD_Set_Cursor@c:	
   932                           ; 1 bytes @ 0x3
   933                           
   934  0073                     ___bmul@multiplier:	
   935                           ; 1 bytes @ 0x3
   936                           
   937  0073                     strcpy@cp:	
   938                           ; 1 bytes @ 0x3
   939                           
   940                           
   941                           ; 1 bytes @ 0x3
   942  0073                     	ds	1
   943  0074                     ??_memset:
   944  0074                     ??_LCD_Set_Cursor:	
   945                           ; 1 bytes @ 0x4
   946                           
   947  0074                     ??___wmul:	
   948                           ; 1 bytes @ 0x4
   949                           
   950  0074                     ??___awmod:	
   951                           ; 1 bytes @ 0x4
   952                           
   953  0074                     ??___flneg:	
   954                           ; 1 bytes @ 0x4
   955                           
   956  0074                     ??___xxtofl:	
   957                           ; 1 bytes @ 0x4
   958                           
   959  0074                     LCD_Write_Char@Data:	
   960                           ; 1 bytes @ 0x4
   961                           
   962  0074                     ___lbmod@dividend:	
   963                           ; 1 bytes @ 0x4
   964                           
   965  0074                     strncat@to:	
   966                           ; 1 bytes @ 0x4
   967                           
   968  0074                     ___wmul@product:	
   969                           ; 1 bytes @ 0x4
   970                           
   971  0074                     __Umul8_16@product:	
   972                           ; 2 bytes @ 0x4
   973                           
   974  0074                     ___lmul@multiplicand:	
   975                           ; 2 bytes @ 0x4
   976                           
   977  0074                     ___lldiv@dividend:	
   978                           ; 4 bytes @ 0x4
   979                           
   980  0074                     __div_to_l_@f2:	
   981                           ; 4 bytes @ 0x4
   982                           
   983  0074                     ___fleq@ff2:	
   984                           ; 4 bytes @ 0x4
   985                           
   986  0074                     ___flge@ff2:	
   987                           ; 4 bytes @ 0x4
   988                           
   989  0074                     __tdiv_to_l_@f2:	
   990                           ; 4 bytes @ 0x4
   991                           
   992  0074                     ___llmod@dividend:	
   993                           ; 4 bytes @ 0x4
   994                           
   995  0074                     ___fldiv@b:	
   996                           ; 4 bytes @ 0x4
   997                           
   998                           
   999                           ; 4 bytes @ 0x4
  1000  0074                     	ds	1
  1001  0075                     ?_LCD_Write_String:
  1002  0075                     ___awmod@counter:	
  1003                           ; 1 bytes @ 0x5
  1004                           
  1005  0075                     ___lbmod@counter:	
  1006                           ; 1 bytes @ 0x5
  1007                           
  1008  0075                     memset@p:	
  1009                           ; 1 bytes @ 0x5
  1010                           
  1011  0075                     strncat@cp:	
  1012                           ; 1 bytes @ 0x5
  1013                           
  1014  0075                     LCD_Write_String@str:	
  1015                           ; 1 bytes @ 0x5
  1016                           
  1017                           
  1018                           ; 2 bytes @ 0x5
  1019  0075                     	ds	1
  1020  0076                     LCD_Set_Cursor@r:
  1021  0076                     ___awmod@sign:	
  1022                           ; 1 bytes @ 0x6
  1023                           
  1024  0076                     ___lbmod@rem:	
  1025                           ; 1 bytes @ 0x6
  1026                           
  1027  0076                     memset@p1:	
  1028                           ; 1 bytes @ 0x6
  1029                           
  1030  0076                     __Umul8_16@word_mpld:	
  1031                           ; 1 bytes @ 0x6
  1032                           
  1033                           
  1034                           ; 2 bytes @ 0x6
  1035  0076                     	ds	1
  1036  0077                     ??_LCD_Write_String:
  1037  0077                     ??_clr:	
  1038                           ; 1 bytes @ 0x7
  1039                           
  1040  0077                     ?___lbdiv:	
  1041                           ; 1 bytes @ 0x7
  1042                           
  1043  0077                     ?___awdiv:	
  1044                           ; 1 bytes @ 0x7
  1045                           
  1046  0077                     LCD_Set_Cursor@Low4:	
  1047                           ; 2 bytes @ 0x7
  1048                           
  1049  0077                     ___lbdiv@divisor:	
  1050                           ; 1 bytes @ 0x7
  1051                           
  1052  0077                     ___awdiv@divisor:	
  1053                           ; 1 bytes @ 0x7
  1054                           
  1055                           
  1056                           ; 2 bytes @ 0x7
  1057  0077                     	ds	1
  1058  0078                     ??__tdiv_to_l_:
  1059  0078                     ??__div_to_l_:	
  1060                           ; 1 bytes @ 0x8
  1061                           
  1062  0078                     ??___lmul:	
  1063                           ; 1 bytes @ 0x8
  1064                           
  1065  0078                     ??___lldiv:	
  1066                           ; 1 bytes @ 0x8
  1067                           
  1068  0078                     ??___fleq:	
  1069                           ; 1 bytes @ 0x8
  1070                           
  1071  0078                     ??___flge:	
  1072                           ; 1 bytes @ 0x8
  1073                           
  1074  0078                     ??___lbdiv:	
  1075                           ; 1 bytes @ 0x8
  1076                           
  1077  0078                     ??___llmod:	
  1078                           ; 1 bytes @ 0x8
  1079                           
  1080  0078                     ??___fldiv:	
  1081                           ; 1 bytes @ 0x8
  1082                           
  1083  0078                     LCD_Set_Cursor@High4:	
  1084                           ; 1 bytes @ 0x8
  1085                           
  1086  0078                     __Umul8_16@multiplier:	
  1087                           ; 1 bytes @ 0x8
  1088                           
  1089  0078                     ___xxtofl@sign:	
  1090                           ; 1 bytes @ 0x8
  1091                           
  1092                           
  1093                           ; 1 bytes @ 0x8
  1094  0078                     	ds	1
  1095  0079                     LCD_Set_Cursor@Temp:
  1096  0079                     ___lbdiv@dividend:	
  1097                           ; 1 bytes @ 0x9
  1098                           
  1099  0079                     ___llmod@counter:	
  1100                           ; 1 bytes @ 0x9
  1101                           
  1102  0079                     ___xxtofl@exp:	
  1103                           ; 1 bytes @ 0x9
  1104                           
  1105  0079                     ___awdiv@dividend:	
  1106                           ; 1 bytes @ 0x9
  1107                           
  1108  0079                     ___lmul@product:	
  1109                           ; 2 bytes @ 0x9
  1110                           
  1111  0079                     ___lldiv@quotient:	
  1112                           ; 4 bytes @ 0x9
  1113                           
  1114                           
  1115                           ; 4 bytes @ 0x9
  1116  0079                     	ds	1
  1117  007A                     ___lbdiv@counter:
  1118  007A                     LCD_Write_String@i:	
  1119                           ; 1 bytes @ 0xA
  1120                           
  1121  007A                     ___xxtofl@arg:	
  1122                           ; 2 bytes @ 0xA
  1123                           
  1124                           
  1125                           ; 4 bytes @ 0xA
  1126  007A                     	ds	1
  1127  007B                     ??___awdiv:
  1128  007B                     ___lbdiv@quotient:	
  1129                           ; 1 bytes @ 0xB
  1130                           
  1131                           
  1132                           ; 1 bytes @ 0xB
  1133  007B                     	ds	1
  1134  007C                     ??_show:
  1135  007C                     ___fltol@sign1:	
  1136                           ; 1 bytes @ 0xC
  1137                           
  1138                           
  1139                           ; 1 bytes @ 0xC
  1140  007C                     	ds	1
  1141  007D                     ___lldiv@counter:
  1142  007D                     ___fltol@exp1:	
  1143                           ; 1 bytes @ 0xD
  1144                           
  1145                           
  1146                           ; 1 bytes @ 0xD
  1147  007D                     	ds	1
  1148  007E                     ??_atof:
  1149  007E                     ??___flsub:	
  1150                           ; 1 bytes @ 0xE
  1151                           
  1152                           
  1153                           	psect	cstackBANK0
  1154  0020                     __pcstackBANK0:	
  1155                           ; 1 bytes @ 0xE
  1156                           
  1157  0020                     ___awdiv@counter:
  1158  0020                     __div_to_l_@quot:	
  1159                           ; 1 bytes @ 0x0
  1160                           
  1161  0020                     __tdiv_to_l_@quot:	
  1162                           ; 4 bytes @ 0x0
  1163                           
  1164  0020                     ___fldiv@rem:	
  1165                           ; 4 bytes @ 0x0
  1166                           
  1167                           
  1168                           ; 4 bytes @ 0x0
  1169  0020                     	ds	1
  1170  0021                     ___awdiv@sign:
  1171                           
  1172                           ; 1 bytes @ 0x1
  1173  0021                     	ds	1
  1174  0022                     ___awdiv@quotient:
  1175                           
  1176                           ; 2 bytes @ 0x2
  1177  0022                     	ds	2
  1178  0024                     ?___flmul:
  1179  0024                     __div_to_l_@cntr:	
  1180                           ; 4 bytes @ 0x4
  1181                           
  1182  0024                     __tdiv_to_l_@cntr:	
  1183                           ; 1 bytes @ 0x4
  1184                           
  1185  0024                     ___fldiv@sign:	
  1186                           ; 1 bytes @ 0x4
  1187                           
  1188  0024                     ___flmul@b:	
  1189                           ; 1 bytes @ 0x4
  1190                           
  1191                           
  1192                           ; 4 bytes @ 0x4
  1193  0024                     	ds	1
  1194  0025                     __div_to_l_@exp1:
  1195  0025                     __tdiv_to_l_@exp1:	
  1196                           ; 1 bytes @ 0x5
  1197                           
  1198  0025                     ___fldiv@new_exp:	
  1199                           ; 1 bytes @ 0x5
  1200                           
  1201                           
  1202                           ; 2 bytes @ 0x5
  1203  0025                     	ds	2
  1204  0027                     ___fldiv@grs:
  1205                           
  1206                           ; 4 bytes @ 0x7
  1207  0027                     	ds	1
  1208  0028                     ___flmul@a:
  1209                           
  1210                           ; 4 bytes @ 0x8
  1211  0028                     	ds	3
  1212  002B                     ___fldiv@bexp:
  1213                           
  1214                           ; 1 bytes @ 0xB
  1215  002B                     	ds	1
  1216  002C                     ??___flmul:
  1217  002C                     ___fldiv@aexp:	
  1218                           ; 1 bytes @ 0xC
  1219                           
  1220                           
  1221                           ; 1 bytes @ 0xC
  1222  002C                     	ds	5
  1223  0031                     ___flmul@sign:
  1224                           
  1225                           ; 1 bytes @ 0x11
  1226  0031                     	ds	1
  1227  0032                     ___flmul@aexp:
  1228                           
  1229                           ; 1 bytes @ 0x12
  1230  0032                     	ds	1
  1231  0033                     ___flmul@grs:
  1232                           
  1233                           ; 4 bytes @ 0x13
  1234  0033                     	ds	4
  1235  0037                     ___flmul@bexp:
  1236                           
  1237                           ; 1 bytes @ 0x17
  1238  0037                     	ds	1
  1239  0038                     ___flmul@prod:
  1240                           
  1241                           ; 4 bytes @ 0x18
  1242  0038                     	ds	4
  1243  003C                     ___flmul@temp:
  1244                           
  1245                           ; 2 bytes @ 0x1C
  1246  003C                     	ds	2
  1247  003E                     ?_fround:
  1248  003E                     ?_scale:	
  1249                           ; 4 bytes @ 0x1E
  1250                           
  1251  003E                     ?_strtod:	
  1252                           ; 4 bytes @ 0x1E
  1253                           
  1254  003E                     strtod@res:	
  1255                           ; 4 bytes @ 0x1E
  1256                           
  1257                           
  1258                           ; 1 bytes @ 0x1E
  1259  003E                     	ds	4
  1260  0042                     ??_fround:
  1261  0042                     ??_scale:	
  1262                           ; 1 bytes @ 0x22
  1263                           
  1264  0042                     ??_strtod:	
  1265                           ; 1 bytes @ 0x22
  1266                           
  1267                           
  1268                           ; 1 bytes @ 0x22
  1269  0042                     	ds	4
  1270  0046                     strtod@eexp:
  1271                           
  1272                           ; 1 bytes @ 0x26
  1273  0046                     	ds	1
  1274  0047                     strtod@flags:
  1275                           
  1276                           ; 1 bytes @ 0x27
  1277  0047                     	ds	1
  1278  0048                     strtod@expon:
  1279                           
  1280                           ; 1 bytes @ 0x28
  1281  0048                     	ds	1
  1282  0049                     strtod@_u:
  1283  0049                     _fround$880:	
  1284                           ; 4 bytes @ 0x29
  1285                           
  1286                           
  1287                           ; 4 bytes @ 0x29
  1288  0049                     	ds	3
  1289  004C                     _scale$881:
  1290                           
  1291                           ; 4 bytes @ 0x2C
  1292  004C                     	ds	1
  1293  004D                     strtod@s:
  1294  004D                     _fround$879:	
  1295                           ; 1 bytes @ 0x2D
  1296                           
  1297                           
  1298                           ; 4 bytes @ 0x2D
  1299  004D                     	ds	1
  1300  004E                     ?_atof:
  1301                           
  1302                           ; 4 bytes @ 0x2E
  1303  004E                     	ds	2
  1304  0050                     scale@scl:
  1305                           
  1306                           ; 1 bytes @ 0x30
  1307  0050                     	ds	1
  1308  0051                     ?___fltol:
  1309  0051                     fround@prec:	
  1310                           ; 4 bytes @ 0x31
  1311                           
  1312  0051                     ___fltol@f1:	
  1313                           ; 1 bytes @ 0x31
  1314                           
  1315                           
  1316                           ; 4 bytes @ 0x31
  1317  0051                     	ds	1
  1318  0052                     ?___fladd:
  1319  0052                     atof@s:	
  1320                           ; 4 bytes @ 0x32
  1321                           
  1322  0052                     ___fladd@b:	
  1323                           ; 1 bytes @ 0x32
  1324                           
  1325                           
  1326                           ; 4 bytes @ 0x32
  1327  0052                     	ds	3
  1328  0055                     ??___fltol:
  1329                           
  1330                           ; 1 bytes @ 0x35
  1331  0055                     	ds	1
  1332  0056                     ___fladd@a:
  1333                           
  1334                           ; 4 bytes @ 0x36
  1335  0056                     	ds	4
  1336  005A                     ??___fladd:
  1337                           
  1338                           ; 1 bytes @ 0x3A
  1339  005A                     	ds	8
  1340  0062                     ___fladd@signs:
  1341                           
  1342                           ; 1 bytes @ 0x42
  1343  0062                     	ds	1
  1344  0063                     ___fladd@aexp:
  1345                           
  1346                           ; 1 bytes @ 0x43
  1347  0063                     	ds	1
  1348  0064                     ___fladd@bexp:
  1349                           
  1350                           ; 1 bytes @ 0x44
  1351  0064                     	ds	1
  1352  0065                     ___fladd@grs:
  1353                           
  1354                           ; 1 bytes @ 0x45
  1355  0065                     	ds	1
  1356  0066                     ?___flsub:
  1357  0066                     ___flsub@a:	
  1358                           ; 4 bytes @ 0x46
  1359                           
  1360                           
  1361                           ; 4 bytes @ 0x46
  1362  0066                     	ds	4
  1363  006A                     ___flsub@b:
  1364                           
  1365                           ; 4 bytes @ 0x4A
  1366  006A                     	ds	4
  1367  006E                     ??_calc:
  1368                           
  1369                           ; 1 bytes @ 0x4E
  1370  006E                     	ds	2
  1371                           
  1372                           	psect	maintext
  1373  1EC7                     __pmaintext:	
  1374 ;;
  1375 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1376 ;;
  1377 ;; *************** function _main *****************
  1378 ;; Defined at:
  1379 ;;		line 265 in file "main.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;		None
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;  j               2   67[BANK1 ] int 
  1384 ;;  i               2   65[BANK1 ] int 
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  1    wreg      void 
  1387 ;; Registers used:
  1388 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1389 ;; Tracked objects:
  1390 ;;		On entry : B00/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1394 ;;      Params:         0       0       0       0       0
  1395 ;;      Locals:         0       0       4       0       0
  1396 ;;      Temps:          0       0       3       0       0
  1397 ;;      Totals:         0       0       7       0       0
  1398 ;;Total ram usage:        7 bytes
  1399 ;; Hardware stack levels required when called: 6
  1400 ;; This function calls:
  1401 ;;		_LCD_Clear
  1402 ;;		_LCD_Init
  1403 ;;		_LCD_Set_Cursor
  1404 ;;		_LCD_Write_String
  1405 ;;		_append
  1406 ;; This function is called by:
  1407 ;;		Startup code after reset
  1408 ;; This function uses a non-reentrant model
  1409 ;;
  1410                           
  1411  1EC7                     _main:	
  1412                           ;psect for function _main
  1413                           
  1414                           
  1415                           ;main.c: 267: TRISB = 0xf0;
  1416                           
  1417                           ;incstack = 0
  1418                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1419  1EC7  30F0               	movlw	240
  1420  1EC8  1683               	bsf	3,5	;RP0=1, select bank1
  1421  1EC9  0086               	movwf	6	;volatile
  1422                           
  1423                           ;main.c: 268: PORTB = 0x00;
  1424  1ECA  1283               	bcf	3,5	;RP0=0, select bank0
  1425  1ECB  0186               	clrf	6	;volatile
  1426                           
  1427                           ;main.c: 271: LCD_Init();
  1428  1ECC  160A  158A  25D5  160A  158A  	fcall	_LCD_Init
  1429                           
  1430                           ;main.c: 272: LCD_Clear();
  1431  1ED1  160A  118A  20C9  160A  158A  	fcall	_LCD_Clear
  1432                           
  1433                           ;main.c: 273: LCD_Set_Cursor(1,1);
  1434  1ED6  01F3               	clrf	LCD_Set_Cursor@c
  1435  1ED7  0AF3               	incf	LCD_Set_Cursor@c,f
  1436  1ED8  3001               	movlw	1
  1437  1ED9  160A  158A  243B  160A  158A  	fcall	_LCD_Set_Cursor
  1438                           
  1439                           ;main.c: 274: LCD_Write_String("adel says hello \0");
  1440  1EDE  3091               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1441  1EDF  00F5               	movwf	LCD_Write_String@str
  1442  1EE0  3080               	movlw	128
  1443  1EE1  00F6               	movwf	LCD_Write_String@str+1
  1444  1EE2  160A  158A  2339  160A  158A  	fcall	_LCD_Write_String
  1445                           
  1446                           ;main.c: 275: _delay((unsigned long)((1000)*(4000000/4000.0)));
  1447  1EE7  3006               	movlw	6
  1448  1EE8  1683               	bsf	3,5	;RP0=1, select bank1
  1449  1EE9  1303               	bcf	3,6	;RP1=0, select bank1
  1450  1EEA  00E0               	movwf	(??_main^(0+128)+2)
  1451  1EEB  3013               	movlw	19
  1452  1EEC  00DF               	movwf	(??_main^(0+128)+1)
  1453  1EED  30AD               	movlw	173
  1454  1EEE  00DE               	movwf	??_main^(0+128)
  1455  1EEF                     u6977:
  1456  1EEF  0BDE               	decfsz	??_main^(0+128),f
  1457  1EF0  2EEF               	goto	u6977
  1458  1EF1  0BDF               	decfsz	(??_main^(0+128)+1),f
  1459  1EF2  2EEF               	goto	u6977
  1460  1EF3  0BE0               	decfsz	(??_main^(0+128)+2),f
  1461  1EF4  2EEF               	goto	u6977
  1462                           
  1463                           ;main.c: 276: LCD_Clear();
  1464  1EF5  160A  118A  20C9  160A  158A  	fcall	_LCD_Clear
  1465  1EFA                     l4300:
  1466                           
  1467                           ;main.c: 278:   {;main.c: 280:   for (int i=0 ; i<4 ; i++)
  1468  1EFA  1683               	bsf	3,5	;RP0=1, select bank1
  1469  1EFB  1303               	bcf	3,6	;RP1=0, select bank1
  1470  1EFC  01E1               	clrf	main@i^(0+128)
  1471  1EFD  01E2               	clrf	(main@i+1)^(0+128)
  1472  1EFE                     l4306:
  1473                           
  1474                           ;main.c: 281:         {;main.c: 284:             for (int j=0 ; j<4 ; j++)
  1475  1EFE  1683               	bsf	3,5	;RP0=1, select bank1
  1476  1EFF  1303               	bcf	3,6	;RP1=0, select bank1
  1477  1F00  01E3               	clrf	main@j^(0+128)
  1478  1F01  01E4               	clrf	(main@j+1)^(0+128)
  1479  1F02                     l4312:
  1480                           
  1481                           ;main.c: 285:             {;main.c: 286:                PORTB = out [i];
  1482  1F02  1683               	bsf	3,5	;RP0=1, select bank1
  1483  1F03  1303               	bcf	3,6	;RP1=0, select bank1
  1484  1F04  0861               	movf	main@i^(0+128),w
  1485  1F05  3EC6               	addlw	(low (_out| (0+256)))& (0+255)
  1486  1F06  0084               	movwf	4
  1487  1F07  1783               	bsf	3,7	;select IRP bank3
  1488  1F08  0800               	movf	0,w
  1489  1F09  1283               	bcf	3,5	;RP0=0, select bank0
  1490  1F0A  0086               	movwf	6	;volatile
  1491                           
  1492                           ;main.c: 287:                _delay((unsigned long)((15)*(4000000/4000.0)));
  1493  1F0B  3014               	movlw	20
  1494  1F0C  1683               	bsf	3,5	;RP0=1, select bank1
  1495  1F0D  1303               	bcf	3,6	;RP1=0, select bank1
  1496  1F0E  00DF               	movwf	(??_main^(0+128)+1)
  1497  1F0F  3079               	movlw	121
  1498  1F10  00DE               	movwf	??_main^(0+128)
  1499  1F11                     u6987:
  1500  1F11  0BDE               	decfsz	??_main^(0+128),f
  1501  1F12  2F11               	goto	u6987
  1502  1F13  0BDF               	decfsz	(??_main^(0+128)+1),f
  1503  1F14  2F11               	goto	u6987
  1504                           
  1505                           ;main.c: 288:                if(PORTB & in[j])
  1506  1F15  1683               	bsf	3,5	;RP0=1, select bank1
  1507  1F16  1303               	bcf	3,6	;RP1=0, select bank1
  1508  1F17  0863               	movf	main@j^(0+128),w
  1509  1F18  3EC2               	addlw	(low (_in| (0+256)))& (0+255)
  1510  1F19  0084               	movwf	4
  1511  1F1A  1783               	bsf	3,7	;select IRP bank3
  1512  1F1B  0800               	movf	0,w
  1513  1F1C  1283               	bcf	3,5	;RP0=0, select bank0
  1514  1F1D  0506               	andwf	6,w	;volatile
  1515  1F1E  1903               	btfsc	3,2
  1516  1F1F  2F37               	goto	l4320
  1517                           
  1518                           ;main.c: 289:                {;main.c: 290:                    append(key[i][j]);
  1519  1F20  1683               	bsf	3,5	;RP0=1, select bank1
  1520  1F21  0861               	movf	main@i^(0+128),w
  1521  1F22  00DE               	movwf	??_main^(0+128)
  1522  1F23  3002               	movlw	2
  1523  1F24                     u6945:
  1524  1F24  1003               	clrc
  1525  1F25  0DDE               	rlf	??_main^(0+128),f
  1526  1F26  3EFF               	addlw	-1
  1527  1F27  1D03               	skipz
  1528  1F28  2F24               	goto	u6945
  1529  1F29  30B2               	movlw	(low (_key| (0+256)))& (0+255)
  1530  1F2A  075E               	addwf	??_main^(0+128),w
  1531  1F2B  00DF               	movwf	(??_main+1)^(0+128)
  1532  1F2C  0863               	movf	main@j^(0+128),w
  1533  1F2D  075F               	addwf	(??_main+1)^(0+128),w
  1534  1F2E  00E0               	movwf	(??_main+2)^(0+128)
  1535  1F2F  0860               	movf	(??_main+2)^(0+128),w
  1536  1F30  0084               	movwf	4
  1537  1F31  0800               	movf	0,w
  1538  1F32  160A  118A  2291  160A  158A  	fcall	_append
  1539  1F37                     l4320:
  1540                           
  1541                           ;main.c: 292:             }
  1542  1F37  3001               	movlw	1
  1543  1F38  1683               	bsf	3,5	;RP0=1, select bank1
  1544  1F39  07E3               	addwf	main@j^(0+128),f
  1545  1F3A  1803               	skipnc
  1546  1F3B  0AE4               	incf	(main@j+1)^(0+128),f
  1547  1F3C  3000               	movlw	0
  1548  1F3D  07E4               	addwf	(main@j+1)^(0+128),f
  1549  1F3E  0864               	movf	(main@j+1)^(0+128),w
  1550  1F3F  3A80               	xorlw	128
  1551  1F40  00FF               	movwf	127
  1552  1F41  3080               	movlw	128
  1553  1F42  027F               	subwf	127,w
  1554  1F43  1D03               	skipz
  1555  1F44  2F47               	goto	u6955
  1556  1F45  3004               	movlw	4
  1557  1F46  0263               	subwf	main@j^(0+128),w
  1558  1F47                     u6955:
  1559  1F47  1C03               	skipc
  1560  1F48  2F02               	goto	l4312
  1561                           
  1562                           ;main.c: 294:         }
  1563  1F49  3001               	movlw	1
  1564  1F4A  1683               	bsf	3,5	;RP0=1, select bank1
  1565  1F4B  1303               	bcf	3,6	;RP1=0, select bank1
  1566  1F4C  07E1               	addwf	main@i^(0+128),f
  1567  1F4D  1803               	skipnc
  1568  1F4E  0AE2               	incf	(main@i+1)^(0+128),f
  1569  1F4F  3000               	movlw	0
  1570  1F50  07E2               	addwf	(main@i+1)^(0+128),f
  1571  1F51  0862               	movf	(main@i+1)^(0+128),w
  1572  1F52  3A80               	xorlw	128
  1573  1F53  00FF               	movwf	127
  1574  1F54  3080               	movlw	128
  1575  1F55  027F               	subwf	127,w
  1576  1F56  1D03               	skipz
  1577  1F57  2F5A               	goto	u6965
  1578  1F58  3004               	movlw	4
  1579  1F59  0261               	subwf	main@i^(0+128),w
  1580  1F5A                     u6965:
  1581  1F5A  1803               	btfsc	3,0
  1582  1F5B  2EFA               	goto	l4300
  1583  1F5C  2EFE               	goto	l4306
  1584  1F5D                     __end_of_main:
  1585                           
  1586                           	psect	text1
  1587  1291                     __ptext1:	
  1588 ;; *************** function _append *****************
  1589 ;; Defined at:
  1590 ;;		line 186 in file "main.c"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;  key             1    wreg     unsigned char 
  1593 ;; Auto vars:     Size  Location     Type
  1594 ;;  key             1   61[BANK1 ] unsigned char 
  1595 ;; Return value:  Size  Location     Type
  1596 ;;                  1    wreg      void 
  1597 ;; Registers used:
  1598 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1599 ;; Tracked objects:
  1600 ;;		On entry : B00/900
  1601 ;;		On exit  : 300/0
  1602 ;;		Unchanged: 0/0
  1603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1604 ;;      Params:         0       0       0       0       0
  1605 ;;      Locals:         0       0       1       0       0
  1606 ;;      Temps:          0       0       3       0       0
  1607 ;;      Totals:         0       0       4       0       0
  1608 ;;Total ram usage:        4 bytes
  1609 ;; Hardware stack levels used: 1
  1610 ;; Hardware stack levels required when called: 5
  1611 ;; This function calls:
  1612 ;;		_LCD_Clear
  1613 ;;		_LCD_Set_Cursor
  1614 ;;		_LCD_Write_Char
  1615 ;;		_LCD_Write_String
  1616 ;;		_atof
  1617 ;;		_calc
  1618 ;;		_clr
  1619 ;;		_show
  1620 ;;		_strncat
  1621 ;; This function is called by:
  1622 ;;		_main
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626  1291                     _append:	
  1627                           ;psect for function _append
  1628                           
  1629                           
  1630                           ;incstack = 0
  1631                           ; Regs used in _append: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1632                           ;append@key stored from wreg
  1633  1291  00DD               	movwf	append@key^(0+128)
  1634                           
  1635                           ;main.c: 186: void append(char key);main.c: 187: {;main.c: 191:         if (key == '+')
  1636  1292  302B               	movlw	43
  1637  1293  065D               	xorwf	append@key^(0+128),w
  1638  1294  1D03               	btfss	3,2
  1639  1295  2AA1               	goto	l4240
  1640  1296                     l4238:
  1641                           
  1642                           ;main.c: 192:         {;main.c: 193:             operation = key ;
  1643  1296  085D               	movf	append@key^(0+128),w
  1644  1297  00DA               	movwf	??_append^(0+128)
  1645  1298  085A               	movf	??_append^(0+128),w
  1646  1299  00ED               	movwf	_operation^(0+128)
  1647                           
  1648                           ;main.c: 194:             c++;
  1649  129A  3001               	movlw	1
  1650  129B  07E9               	addwf	_c^(0+128),f
  1651  129C  1803               	skipnc
  1652  129D  0AEA               	incf	(_c+1)^(0+128),f
  1653  129E  3000               	movlw	0
  1654  129F  07EA               	addwf	(_c+1)^(0+128),f
  1655                           
  1656                           ;main.c: 196:         }
  1657  12A0  2B67               	goto	l4282
  1658  12A1                     l4240:
  1659  12A1  302D               	movlw	45
  1660  12A2  065D               	xorwf	append@key^(0+128),w
  1661  12A3  1903               	btfsc	3,2
  1662  12A4  2A96               	goto	l4238
  1663  12A5  302A               	movlw	42
  1664  12A6  065D               	xorwf	append@key^(0+128),w
  1665  12A7  1903               	btfsc	3,2
  1666  12A8  2A96               	goto	l4238
  1667  12A9  302F               	movlw	47
  1668  12AA  065D               	xorwf	append@key^(0+128),w
  1669  12AB  1903               	btfsc	3,2
  1670  12AC  2A96               	goto	l4238
  1671  12AD  303D               	movlw	61
  1672  12AE  065D               	xorwf	append@key^(0+128),w
  1673  12AF  1D03               	btfss	3,2
  1674  12B0  2B0B               	goto	l4262
  1675                           
  1676                           ;main.c: 216:         {;main.c: 217:             LCD_Write_Char('=');
  1677  12B1  303D               	movlw	61
  1678  12B2  160A  158A  2376  160A  118A  	fcall	_LCD_Write_Char
  1679                           
  1680                           ;main.c: 218:             val_1 = atof(val_one);
  1681  12B7  30A8               	movlw	(low (_val_one| (0+256)))& (0+255)
  1682  12B8  160A  158A  21AD  160A  118A  	fcall	_atof
  1683  12BD  0851               	movf	?_atof+3,w
  1684  12BE  1683               	bsf	3,5	;RP0=1, select bank1
  1685  12BF  00E8               	movwf	(_val_1+3)^(0+128)
  1686  12C0  1283               	bcf	3,5	;RP0=0, select bank0
  1687  12C1  0850               	movf	?_atof+2,w
  1688  12C2  1683               	bsf	3,5	;RP0=1, select bank1
  1689  12C3  00E7               	movwf	(_val_1+2)^(0+128)
  1690  12C4  1283               	bcf	3,5	;RP0=0, select bank0
  1691  12C5  084F               	movf	?_atof+1,w
  1692  12C6  1683               	bsf	3,5	;RP0=1, select bank1
  1693  12C7  00E6               	movwf	(_val_1+1)^(0+128)
  1694  12C8  1283               	bcf	3,5	;RP0=0, select bank0
  1695  12C9  084E               	movf	?_atof,w
  1696  12CA  1683               	bsf	3,5	;RP0=1, select bank1
  1697  12CB  00E5               	movwf	_val_1^(0+128)
  1698                           
  1699                           ;main.c: 219:             val_2 = atof(val_two);
  1700  12CC  309E               	movlw	(low (_val_two| (0+256)))& (0+255)
  1701  12CD  160A  158A  21AD  160A  118A  	fcall	_atof
  1702  12D2  0851               	movf	?_atof+3,w
  1703  12D3  1683               	bsf	3,5	;RP0=1, select bank3
  1704  12D4  1703               	bsf	3,6	;RP1=1, select bank3
  1705  12D5  009D               	movwf	(_val_2+3)^(0+384)
  1706  12D6  1283               	bcf	3,5	;RP0=0, select bank0
  1707  12D7  1303               	bcf	3,6	;RP1=0, select bank0
  1708  12D8  0850               	movf	?_atof+2,w
  1709  12D9  1683               	bsf	3,5	;RP0=1, select bank3
  1710  12DA  1703               	bsf	3,6	;RP1=1, select bank3
  1711  12DB  009C               	movwf	(_val_2+2)^(0+384)
  1712  12DC  1283               	bcf	3,5	;RP0=0, select bank0
  1713  12DD  1303               	bcf	3,6	;RP1=0, select bank0
  1714  12DE  084F               	movf	?_atof+1,w
  1715  12DF  1683               	bsf	3,5	;RP0=1, select bank3
  1716  12E0  1703               	bsf	3,6	;RP1=1, select bank3
  1717  12E1  009B               	movwf	(_val_2+1)^(0+384)
  1718  12E2  1283               	bcf	3,5	;RP0=0, select bank0
  1719  12E3  1303               	bcf	3,6	;RP1=0, select bank0
  1720  12E4  084E               	movf	?_atof,w
  1721  12E5  1683               	bsf	3,5	;RP0=1, select bank3
  1722  12E6  1703               	bsf	3,6	;RP1=1, select bank3
  1723  12E7  009A               	movwf	_val_2^(0+384)
  1724                           
  1725                           ;main.c: 220:             calc(val_1 , val_2 , operation);
  1726  12E8  1303               	bcf	3,6	;RP1=0, select bank1
  1727  12E9  0868               	movf	(_val_1+3)^(0+128),w
  1728  12EA  00C6               	movwf	(calc@num_1+3)^(0+128)
  1729  12EB  0867               	movf	(_val_1+2)^(0+128),w
  1730  12EC  00C5               	movwf	(calc@num_1+2)^(0+128)
  1731  12ED  0866               	movf	(_val_1+1)^(0+128),w
  1732  12EE  00C4               	movwf	(calc@num_1+1)^(0+128)
  1733  12EF  0865               	movf	_val_1^(0+128),w
  1734  12F0  00C3               	movwf	calc@num_1^(0+128)
  1735  12F1  1703               	bsf	3,6	;RP1=1, select bank3
  1736  12F2  081D               	movf	(_val_2+3)^(0+384),w
  1737  12F3  1303               	bcf	3,6	;RP1=0, select bank1
  1738  12F4  00CA               	movwf	(calc@num_2+3)^(0+128)
  1739  12F5  1703               	bsf	3,6	;RP1=1, select bank3
  1740  12F6  081C               	movf	(_val_2+2)^(0+384),w
  1741  12F7  1303               	bcf	3,6	;RP1=0, select bank1
  1742  12F8  00C9               	movwf	(calc@num_2+2)^(0+128)
  1743  12F9  1703               	bsf	3,6	;RP1=1, select bank3
  1744  12FA  081B               	movf	(_val_2+1)^(0+384),w
  1745  12FB  1303               	bcf	3,6	;RP1=0, select bank1
  1746  12FC  00C8               	movwf	(calc@num_2+1)^(0+128)
  1747  12FD  1703               	bsf	3,6	;RP1=1, select bank3
  1748  12FE  081A               	movf	_val_2^(0+384),w
  1749  12FF  1303               	bcf	3,6	;RP1=0, select bank1
  1750  1300  00C7               	movwf	calc@num_2^(0+128)
  1751  1301  086D               	movf	_operation^(0+128),w
  1752  1302  00DA               	movwf	??_append^(0+128)
  1753  1303  085A               	movf	??_append^(0+128),w
  1754  1304  00CB               	movwf	calc@operation^(0+128)
  1755  1305  160A  118A  236B  160A  118A  	fcall	_calc
  1756                           
  1757                           ;main.c: 223:         }
  1758  130A  2B67               	goto	l4282
  1759  130B                     l4262:
  1760  130B  3063               	movlw	99
  1761  130C  065D               	xorwf	append@key^(0+128),w
  1762  130D  1D03               	btfss	3,2
  1763  130E  2B3E               	goto	l4274
  1764                           
  1765                           ;main.c: 225:         {;main.c: 227:             LCD_Clear();
  1766  130F  160A  118A  20C9  160A  118A  	fcall	_LCD_Clear
  1767                           
  1768                           ;main.c: 228:             LCD_Set_Cursor(1,1);
  1769  1314  01F3               	clrf	LCD_Set_Cursor@c
  1770  1315  0AF3               	incf	LCD_Set_Cursor@c,f
  1771  1316  3001               	movlw	1
  1772  1317  160A  158A  243B  160A  118A  	fcall	_LCD_Set_Cursor
  1773                           
  1774                           ;main.c: 229:             LCD_Write_String("clear \0");
  1775  131C  30AE               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1776  131D  00F5               	movwf	LCD_Write_String@str
  1777  131E  3080               	movlw	128
  1778  131F  00F6               	movwf	LCD_Write_String@str+1
  1779  1320  160A  158A  2339  160A  118A  	fcall	_LCD_Write_String
  1780                           
  1781                           ;main.c: 230:             _delay((unsigned long)((500)*(4000000/4000.0)));
  1782  1325  3003               	movlw	3
  1783  1326  1683               	bsf	3,5	;RP0=1, select bank1
  1784  1327  1303               	bcf	3,6	;RP1=0, select bank1
  1785  1328  00DC               	movwf	(??_append^(0+128)+2)
  1786  1329  308A               	movlw	138
  1787  132A  00DB               	movwf	(??_append^(0+128)+1)
  1788  132B  3055               	movlw	85
  1789  132C  00DA               	movwf	??_append^(0+128)
  1790  132D                     u6997:
  1791  132D  0BDA               	decfsz	??_append^(0+128),f
  1792  132E  2B2D               	goto	u6997
  1793  132F  0BDB               	decfsz	(??_append^(0+128)+1),f
  1794  1330  2B2D               	goto	u6997
  1795  1331  0BDC               	decfsz	(??_append^(0+128)+2),f
  1796  1332  2B2D               	goto	u6997
  1797                           
  1798                           ;main.c: 231:             LCD_Clear();
  1799  1333  160A  118A  20C9  160A  118A  	fcall	_LCD_Clear
  1800                           
  1801                           ;main.c: 232:             clr();
  1802  1338  160A  158A  227C  160A  118A  	fcall	_clr
  1803                           
  1804                           ;main.c: 233:         }
  1805  133D  2B67               	goto	l4282
  1806  133E                     l4274:
  1807                           
  1808                           ;main.c: 236:     {;main.c: 237:         if(c==0)
  1809  133E  0869               	movf	_c^(0+128),w
  1810  133F  046A               	iorwf	(_c+1)^(0+128),w
  1811  1340  1D03               	btfss	3,2
  1812  1341  2B4C               	goto	l4278
  1813                           
  1814                           ;main.c: 238:         {;main.c: 239:         strncat(val_one , &key , 1);
  1815  1342  30DD               	movlw	(low (append@key| 0))& (0+255)
  1816  1343  00DA               	movwf	??_append^(0+128)
  1817  1344  085A               	movf	??_append^(0+128),w
  1818  1345  00F0               	movwf	strncat@from
  1819  1346  3001               	movlw	1
  1820  1347  00F1               	movwf	strncat@size
  1821  1348  3000               	movlw	0
  1822  1349  00F2               	movwf	strncat@size+1
  1823  134A  30A8               	movlw	(low (_val_one| (0+256)))& (0+255)
  1824  134B  2B62               	goto	L1
  1825  134C                     l4278:	
  1826                           ;main.c: 242:         }
  1827                           
  1828  134C  086A               	movf	(_c+1)^(0+128),w
  1829  134D  3A80               	xorlw	128
  1830  134E  00FF               	movwf	127
  1831  134F  3080               	movlw	128
  1832  1350  027F               	subwf	127,w
  1833  1351  1D03               	skipz
  1834  1352  2B55               	goto	u6925
  1835  1353  3001               	movlw	1
  1836  1354  0269               	subwf	_c^(0+128),w
  1837  1355                     u6925:
  1838  1355  1C03               	skipc
  1839  1356  2B67               	goto	l4282
  1840                           
  1841                           ;main.c: 244:         {;main.c: 245:         strncat(val_two , &key , 1);
  1842  1357  30DD               	movlw	(low (append@key| 0))& (0+255)
  1843  1358  1683               	bsf	3,5	;RP0=1, select bank1
  1844  1359  1303               	bcf	3,6	;RP1=0, select bank1
  1845  135A  00DA               	movwf	??_append^(0+128)
  1846  135B  085A               	movf	??_append^(0+128),w
  1847  135C  00F0               	movwf	strncat@from
  1848  135D  3001               	movlw	1
  1849  135E  00F1               	movwf	strncat@size
  1850  135F  3000               	movlw	0
  1851  1360  00F2               	movwf	strncat@size+1
  1852  1361  309E               	movlw	(low (_val_two| (0+256)))& (0+255)
  1853  1362                     L1:
  1854  1362  160A  158A  2302  160A  118A  	fcall	_strncat
  1855  1367                     l4282:
  1856                           
  1857                           ;main.c: 256:     show();
  1858  1367  120A  118A  2003   	fcall	_show
  1859  136A  0008               	return
  1860  136B                     __end_of_append:
  1861                           
  1862                           	psect	text2
  1863  1B02                     __ptext2:	
  1864 ;; *************** function _strncat *****************
  1865 ;; Defined at:
  1866 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\strncat.c"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;  to              1    wreg     PTR unsigned char 
  1869 ;;		 -> val_two(10), val_one(10), 
  1870 ;;  from            1    0[COMMON] PTR const unsigned char 
  1871 ;;		 -> append@key(1), 
  1872 ;;  size            2    1[COMMON] unsigned int 
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;  to              1    4[COMMON] PTR unsigned char 
  1875 ;;		 -> val_two(10), val_one(10), 
  1876 ;;  cp              1    5[COMMON] PTR unsigned char 
  1877 ;;		 -> val_two(10), val_one(10), 
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  1    wreg      PTR unsigned char 
  1880 ;; Registers used:
  1881 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1882 ;; Tracked objects:
  1883 ;;		On entry : 300/900
  1884 ;;		On exit  : B00/900
  1885 ;;		Unchanged: 300/0
  1886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1887 ;;      Params:         3       0       0       0       0
  1888 ;;      Locals:         2       0       0       0       0
  1889 ;;      Temps:          1       0       0       0       0
  1890 ;;      Totals:         6       0       0       0       0
  1891 ;;Total ram usage:        6 bytes
  1892 ;; Hardware stack levels used: 1
  1893 ;; This function calls:
  1894 ;;		Nothing
  1895 ;; This function is called by:
  1896 ;;		_append
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900  1B02                     _strncat:	
  1901                           ;psect for function _strncat
  1902                           
  1903                           
  1904                           ;incstack = 0
  1905                           ; Regs used in _strncat: [wreg-fsr0h+status,2+status,0]
  1906                           ;strncat@to stored from wreg
  1907  1B02  00F4               	movwf	strncat@to
  1908  1B03  0874               	movf	strncat@to,w
  1909  1B04  00F3               	movwf	??_strncat
  1910  1B05  0873               	movf	??_strncat,w
  1911  1B06  00F5               	movwf	strncat@cp
  1912  1B07                     l4182:
  1913  1B07  0875               	movf	strncat@cp,w
  1914  1B08  0084               	movwf	4
  1915  1B09  1783               	bsf	3,7	;select IRP bank2
  1916  1B0A  0800               	movf	0,w
  1917  1B0B  1903               	btfsc	3,2
  1918  1B0C  2B2D               	goto	l4190
  1919  1B0D  3001               	movlw	1
  1920  1B0E  00F3               	movwf	??_strncat
  1921  1B0F  0873               	movf	??_strncat,w
  1922  1B10  07F5               	addwf	strncat@cp,f
  1923  1B11  2B07               	goto	l4182
  1924  1B12                     l4192:
  1925  1B12  0870               	movf	strncat@from,w
  1926  1B13  0084               	movwf	4
  1927  1B14  1383               	bcf	3,7	;select IRP bank0
  1928  1B15  0800               	movf	0,w
  1929  1B16  00F3               	movwf	??_strncat
  1930  1B17  0875               	movf	strncat@cp,w
  1931  1B18  0084               	movwf	4
  1932  1B19  0873               	movf	??_strncat,w
  1933  1B1A  1783               	bsf	3,7	;select IRP bank2
  1934  1B1B  0080               	movwf	0
  1935  1B1C  0800               	movf	0,w
  1936  1B1D  1903               	btfsc	3,2
  1937  1B1E  2B31               	goto	l4194
  1938  1B1F  3001               	movlw	1
  1939  1B20  02F1               	subwf	strncat@size,f
  1940  1B21  3000               	movlw	0
  1941  1B22  1C03               	skipc
  1942  1B23  03F2               	decf	strncat@size+1,f
  1943  1B24  02F2               	subwf	strncat@size+1,f
  1944  1B25  3001               	movlw	1
  1945  1B26  00F3               	movwf	??_strncat
  1946  1B27  0873               	movf	??_strncat,w
  1947  1B28  07F5               	addwf	strncat@cp,f
  1948  1B29  3001               	movlw	1
  1949  1B2A  00F3               	movwf	??_strncat
  1950  1B2B  0873               	movf	??_strncat,w
  1951  1B2C  07F0               	addwf	strncat@from,f
  1952  1B2D                     l4190:
  1953  1B2D  0871               	movf	strncat@size,w
  1954  1B2E  0472               	iorwf	strncat@size+1,w
  1955  1B2F  1D03               	btfss	3,2
  1956  1B30  2B12               	goto	l4192
  1957  1B31                     l4194:
  1958  1B31  0871               	movf	strncat@size,w
  1959  1B32  0472               	iorwf	strncat@size+1,w
  1960  1B33  1D03               	btfss	3,2
  1961  1B34  0008               	return
  1962  1B35  0875               	movf	strncat@cp,w
  1963  1B36  0084               	movwf	4
  1964  1B37  0180               	clrf	0
  1965  1B38  0008               	return
  1966  1B39                     __end_of_strncat:
  1967                           
  1968                           	psect	text3
  1969  0003                     __ptext3:	
  1970 ;; *************** function _show *****************
  1971 ;; Defined at:
  1972 ;;		line 177 in file "main.c"
  1973 ;; Parameters:    Size  Location     Type
  1974 ;;		None
  1975 ;; Auto vars:     Size  Location     Type
  1976 ;;		None
  1977 ;; Return value:  Size  Location     Type
  1978 ;;                  1    wreg      void 
  1979 ;; Registers used:
  1980 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1981 ;; Tracked objects:
  1982 ;;		On entry : 0/900
  1983 ;;		On exit  : 300/0
  1984 ;;		Unchanged: 0/0
  1985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1986 ;;      Params:         0       0       0       0       0
  1987 ;;      Locals:         0       0       0       0       0
  1988 ;;      Temps:          0       0       0       0       0
  1989 ;;      Totals:         0       0       0       0       0
  1990 ;;Total ram usage:        0 bytes
  1991 ;; Hardware stack levels used: 1
  1992 ;; Hardware stack levels required when called: 3
  1993 ;; This function calls:
  1994 ;;		_LCD_Clear
  1995 ;;		_LCD_Set_Cursor
  1996 ;;		_LCD_Write_Char
  1997 ;;		_LCD_Write_String
  1998 ;; This function is called by:
  1999 ;;		_append
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003  0003                     _show:	
  2004                           ;psect for function _show
  2005                           
  2006                           
  2007                           ;main.c: 179:     LCD_Clear();
  2008                           
  2009                           ;incstack = 0
  2010                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2011  0003  160A  118A  20C9  120A  118A  	fcall	_LCD_Clear
  2012                           
  2013                           ;main.c: 180:     LCD_Set_Cursor(1,1);
  2014  0008  01F3               	clrf	LCD_Set_Cursor@c
  2015  0009  0AF3               	incf	LCD_Set_Cursor@c,f
  2016  000A  3001               	movlw	1
  2017  000B  160A  158A  243B  120A  118A  	fcall	_LCD_Set_Cursor
  2018                           
  2019                           ;main.c: 181:     LCD_Write_String(val_one);
  2020  0010  30A8               	movlw	(low (_val_one| (0+256)))& (0+255)
  2021  0011  00F5               	movwf	LCD_Write_String@str
  2022  0012  3001               	movlw	1
  2023  0013  00F6               	movwf	LCD_Write_String@str+1
  2024  0014  160A  158A  2339  120A  118A  	fcall	_LCD_Write_String
  2025                           
  2026                           ;main.c: 182:     LCD_Write_Char(operation);
  2027  0019  1683               	bsf	3,5	;RP0=1, select bank1
  2028  001A  086D               	movf	_operation^(0+128),w
  2029  001B  160A  158A  2376  120A  118A  	fcall	_LCD_Write_Char
  2030                           
  2031                           ;main.c: 183:     LCD_Write_String(val_two);
  2032  0020  309E               	movlw	(low (_val_two| (0+256)))& (0+255)
  2033  0021  00F5               	movwf	LCD_Write_String@str
  2034  0022  3001               	movlw	1
  2035  0023  00F6               	movwf	LCD_Write_String@str+1
  2036  0024  160A  158A  2339   	fcall	_LCD_Write_String
  2037  0027  0008               	return
  2038  0028                     __end_of_show:
  2039                           
  2040                           	psect	text4
  2041  10C9                     __ptext4:	
  2042 ;; *************** function _LCD_Clear *****************
  2043 ;; Defined at:
  2044 ;;		line 101 in file "main.c"
  2045 ;; Parameters:    Size  Location     Type
  2046 ;;		None
  2047 ;; Auto vars:     Size  Location     Type
  2048 ;;		None
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  1    wreg      void 
  2051 ;; Registers used:
  2052 ;;		wreg, status,2, status,0, pclath, cstack
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 300/0
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2058 ;;      Params:         0       0       0       0       0
  2059 ;;      Locals:         0       0       0       0       0
  2060 ;;      Temps:          0       0       0       0       0
  2061 ;;      Totals:         0       0       0       0       0
  2062 ;;Total ram usage:        0 bytes
  2063 ;; Hardware stack levels used: 1
  2064 ;; Hardware stack levels required when called: 2
  2065 ;; This function calls:
  2066 ;;		_LCD_CMD
  2067 ;; This function is called by:
  2068 ;;		_show
  2069 ;;		_append
  2070 ;;		_main
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           
  2074  10C9                     _LCD_Clear:	
  2075                           ;psect for function _LCD_Clear
  2076                           
  2077                           
  2078                           ;main.c: 103:   LCD_CMD(0);
  2079                           
  2080                           ;incstack = 0
  2081                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  2082  10C9  3000               	movlw	0
  2083  10CA  160A  158A  21E1  160A  118A  	fcall	_LCD_CMD
  2084                           
  2085                           ;main.c: 104:   LCD_CMD(1);
  2086  10CF  3001               	movlw	1
  2087  10D0  160A  158A  21E1   	fcall	_LCD_CMD
  2088  10D3  0008               	return
  2089  10D4                     __end_of_LCD_Clear:
  2090                           
  2091                           	psect	text5
  2092  136B                     __ptext5:	
  2093 ;; *************** function _calc *****************
  2094 ;; Defined at:
  2095 ;;		line 144 in file "main.c"
  2096 ;; Parameters:    Size  Location     Type
  2097 ;;  num_1           4   35[BANK1 ] float 
  2098 ;;  num_2           4   39[BANK1 ] float 
  2099 ;;  operation       1   43[BANK1 ] unsigned char 
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;  res            10   44[BANK1 ] unsigned char [10]
  2102 ;;  result          4   54[BANK1 ] float 
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  1    wreg      void 
  2105 ;; Registers used:
  2106 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2107 ;; Tracked objects:
  2108 ;;		On entry : 300/900
  2109 ;;		On exit  : 300/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2112 ;;      Params:         0       0       9       0       0
  2113 ;;      Locals:         0       0      14       0       0
  2114 ;;      Temps:          0       2       0       0       0
  2115 ;;      Totals:         0       2      23       0       0
  2116 ;;Total ram usage:       25 bytes
  2117 ;; Hardware stack levels used: 1
  2118 ;; Hardware stack levels required when called: 4
  2119 ;; This function calls:
  2120 ;;		_LCD_Set_Cursor
  2121 ;;		_LCD_Write_String
  2122 ;;		___fladd
  2123 ;;		___fldiv
  2124 ;;		___flmul
  2125 ;;		___flsub
  2126 ;;		_clr
  2127 ;;		_sprintf
  2128 ;;		_strcpy
  2129 ;; This function is called by:
  2130 ;;		_append
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134  136B                     _calc:	
  2135                           ;psect for function _calc
  2136                           
  2137                           
  2138                           ;main.c: 144: void calc(float num_1 , float num_2 , char operation);main.c: 145: {;main.
      +                          c: 146:     float result = 0;
  2139                           
  2140                           ;incstack = 0
  2141                           ; Regs used in _calc: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2142  136B  3000               	movlw	0
  2143  136C  00D9               	movwf	(calc@result+3)^(0+128)
  2144  136D  3000               	movlw	0
  2145  136E  00D8               	movwf	(calc@result+2)^(0+128)
  2146  136F  3000               	movlw	0
  2147  1370  00D7               	movwf	(calc@result+1)^(0+128)
  2148  1371  3000               	movlw	0
  2149  1372  00D6               	movwf	calc@result^(0+128)
  2150                           
  2151                           ;main.c: 148:     char res [10] = {'\0'};
  2152  1373  30CC               	movlw	calc@res& (0+255)
  2153  1374  0084               	movwf	4
  2154  1375  300A               	movlw	10
  2155  1376  00FF               	movwf	127
  2156  1377                     u6800:
  2157  1377  1383               	bcf	3,7	;select IRP bank1
  2158  1378  0180               	clrf	0
  2159  1379  0A84               	incf	4,f
  2160  137A  0BFF               	decfsz	127,f
  2161  137B  2B77               	goto	u6800
  2162                           
  2163                           ;main.c: 149:     switch (operation)
  2164  137C  2C37               	goto	l4150
  2165  137D                     l4140:
  2166                           
  2167                           ;main.c: 152:             result = num_1 + num_2;
  2168  137D  1683               	bsf	3,5	;RP0=1, select bank1
  2169  137E  084A               	movf	(calc@num_2+3)^(0+128),w
  2170  137F  1283               	bcf	3,5	;RP0=0, select bank0
  2171  1380  00D5               	movwf	___fladd@b+3
  2172  1381  1683               	bsf	3,5	;RP0=1, select bank1
  2173  1382  0849               	movf	(calc@num_2+2)^(0+128),w
  2174  1383  1283               	bcf	3,5	;RP0=0, select bank0
  2175  1384  00D4               	movwf	___fladd@b+2
  2176  1385  1683               	bsf	3,5	;RP0=1, select bank1
  2177  1386  0848               	movf	(calc@num_2+1)^(0+128),w
  2178  1387  1283               	bcf	3,5	;RP0=0, select bank0
  2179  1388  00D3               	movwf	___fladd@b+1
  2180  1389  1683               	bsf	3,5	;RP0=1, select bank1
  2181  138A  0847               	movf	calc@num_2^(0+128),w
  2182  138B  1283               	bcf	3,5	;RP0=0, select bank0
  2183  138C  00D2               	movwf	___fladd@b
  2184  138D  1683               	bsf	3,5	;RP0=1, select bank1
  2185  138E  0846               	movf	(calc@num_1+3)^(0+128),w
  2186  138F  1283               	bcf	3,5	;RP0=0, select bank0
  2187  1390  00D9               	movwf	___fladd@a+3
  2188  1391  1683               	bsf	3,5	;RP0=1, select bank1
  2189  1392  0845               	movf	(calc@num_1+2)^(0+128),w
  2190  1393  1283               	bcf	3,5	;RP0=0, select bank0
  2191  1394  00D8               	movwf	___fladd@a+2
  2192  1395  1683               	bsf	3,5	;RP0=1, select bank1
  2193  1396  0844               	movf	(calc@num_1+1)^(0+128),w
  2194  1397  1283               	bcf	3,5	;RP0=0, select bank0
  2195  1398  00D7               	movwf	___fladd@a+1
  2196  1399  1683               	bsf	3,5	;RP0=1, select bank1
  2197  139A  0843               	movf	calc@num_1^(0+128),w
  2198  139B  1283               	bcf	3,5	;RP0=0, select bank0
  2199  139C  00D6               	movwf	___fladd@a
  2200  139D  120A  158A  2031  160A  118A  	fcall	___fladd
  2201  13A2  0855               	movf	?___fladd+3,w
  2202  13A3  1683               	bsf	3,5	;RP0=1, select bank1
  2203  13A4  00D9               	movwf	(calc@result+3)^(0+128)
  2204  13A5  1283               	bcf	3,5	;RP0=0, select bank0
  2205  13A6  0854               	movf	?___fladd+2,w
  2206  13A7  1683               	bsf	3,5	;RP0=1, select bank1
  2207  13A8  00D8               	movwf	(calc@result+2)^(0+128)
  2208  13A9  1283               	bcf	3,5	;RP0=0, select bank0
  2209  13AA  0853               	movf	?___fladd+1,w
  2210  13AB  1683               	bsf	3,5	;RP0=1, select bank1
  2211  13AC  00D7               	movwf	(calc@result+1)^(0+128)
  2212  13AD  1283               	bcf	3,5	;RP0=0, select bank0
  2213  13AE  0852               	movf	?___fladd,w
  2214  13AF  2C15               	goto	L3
  2215  13B0                     l4142:	
  2216                           ;main.c: 153:             break;
  2217                           
  2218                           
  2219                           ;main.c: 155:             result = num_1 - num_2;
  2220  13B0  1683               	bsf	3,5	;RP0=1, select bank1
  2221  13B1  084A               	movf	(calc@num_2+3)^(0+128),w
  2222  13B2  1283               	bcf	3,5	;RP0=0, select bank0
  2223  13B3  00E9               	movwf	___flsub@a+3
  2224  13B4  1683               	bsf	3,5	;RP0=1, select bank1
  2225  13B5  0849               	movf	(calc@num_2+2)^(0+128),w
  2226  13B6  1283               	bcf	3,5	;RP0=0, select bank0
  2227  13B7  00E8               	movwf	___flsub@a+2
  2228  13B8  1683               	bsf	3,5	;RP0=1, select bank1
  2229  13B9  0848               	movf	(calc@num_2+1)^(0+128),w
  2230  13BA  1283               	bcf	3,5	;RP0=0, select bank0
  2231  13BB  00E7               	movwf	___flsub@a+1
  2232  13BC  1683               	bsf	3,5	;RP0=1, select bank1
  2233  13BD  0847               	movf	calc@num_2^(0+128),w
  2234  13BE  1283               	bcf	3,5	;RP0=0, select bank0
  2235  13BF  00E6               	movwf	___flsub@a
  2236  13C0  1683               	bsf	3,5	;RP0=1, select bank1
  2237  13C1  0846               	movf	(calc@num_1+3)^(0+128),w
  2238  13C2  1283               	bcf	3,5	;RP0=0, select bank0
  2239  13C3  00ED               	movwf	___flsub@b+3
  2240  13C4  1683               	bsf	3,5	;RP0=1, select bank1
  2241  13C5  0845               	movf	(calc@num_1+2)^(0+128),w
  2242  13C6  1283               	bcf	3,5	;RP0=0, select bank0
  2243  13C7  00EC               	movwf	___flsub@b+2
  2244  13C8  1683               	bsf	3,5	;RP0=1, select bank1
  2245  13C9  0844               	movf	(calc@num_1+1)^(0+128),w
  2246  13CA  1283               	bcf	3,5	;RP0=0, select bank0
  2247  13CB  00EB               	movwf	___flsub@b+1
  2248  13CC  1683               	bsf	3,5	;RP0=1, select bank1
  2249  13CD  0843               	movf	calc@num_1^(0+128),w
  2250  13CE  1283               	bcf	3,5	;RP0=0, select bank0
  2251  13CF  00EA               	movwf	___flsub@b
  2252  13D0  160A  158A  225E  160A  118A  	fcall	___flsub
  2253  13D5  0869               	movf	?___flsub+3,w
  2254  13D6  1683               	bsf	3,5	;RP0=1, select bank1
  2255  13D7  00D9               	movwf	(calc@result+3)^(0+128)
  2256  13D8  1283               	bcf	3,5	;RP0=0, select bank0
  2257  13D9  0868               	movf	?___flsub+2,w
  2258  13DA  1683               	bsf	3,5	;RP0=1, select bank1
  2259  13DB  00D8               	movwf	(calc@result+2)^(0+128)
  2260  13DC  1283               	bcf	3,5	;RP0=0, select bank0
  2261  13DD  0867               	movf	?___flsub+1,w
  2262  13DE  1683               	bsf	3,5	;RP0=1, select bank1
  2263  13DF  00D7               	movwf	(calc@result+1)^(0+128)
  2264  13E0  1283               	bcf	3,5	;RP0=0, select bank0
  2265  13E1  0866               	movf	?___flsub,w
  2266  13E2  2C15               	goto	L3
  2267  13E3                     l4144:	
  2268                           ;main.c: 156:             break;
  2269                           
  2270                           
  2271                           ;main.c: 158:             result = num_1 * num_2;
  2272  13E3  1683               	bsf	3,5	;RP0=1, select bank1
  2273  13E4  084A               	movf	(calc@num_2+3)^(0+128),w
  2274  13E5  1283               	bcf	3,5	;RP0=0, select bank0
  2275  13E6  00A7               	movwf	___flmul@b+3
  2276  13E7  1683               	bsf	3,5	;RP0=1, select bank1
  2277  13E8  0849               	movf	(calc@num_2+2)^(0+128),w
  2278  13E9  1283               	bcf	3,5	;RP0=0, select bank0
  2279  13EA  00A6               	movwf	___flmul@b+2
  2280  13EB  1683               	bsf	3,5	;RP0=1, select bank1
  2281  13EC  0848               	movf	(calc@num_2+1)^(0+128),w
  2282  13ED  1283               	bcf	3,5	;RP0=0, select bank0
  2283  13EE  00A5               	movwf	___flmul@b+1
  2284  13EF  1683               	bsf	3,5	;RP0=1, select bank1
  2285  13F0  0847               	movf	calc@num_2^(0+128),w
  2286  13F1  1283               	bcf	3,5	;RP0=0, select bank0
  2287  13F2  00A4               	movwf	___flmul@b
  2288  13F3  1683               	bsf	3,5	;RP0=1, select bank1
  2289  13F4  0846               	movf	(calc@num_1+3)^(0+128),w
  2290  13F5  1283               	bcf	3,5	;RP0=0, select bank0
  2291  13F6  00AB               	movwf	___flmul@a+3
  2292  13F7  1683               	bsf	3,5	;RP0=1, select bank1
  2293  13F8  0845               	movf	(calc@num_1+2)^(0+128),w
  2294  13F9  1283               	bcf	3,5	;RP0=0, select bank0
  2295  13FA  00AA               	movwf	___flmul@a+2
  2296  13FB  1683               	bsf	3,5	;RP0=1, select bank1
  2297  13FC  0844               	movf	(calc@num_1+1)^(0+128),w
  2298  13FD  1283               	bcf	3,5	;RP0=0, select bank0
  2299  13FE  00A9               	movwf	___flmul@a+1
  2300  13FF  1683               	bsf	3,5	;RP0=1, select bank1
  2301  1400  0843               	movf	calc@num_1^(0+128),w
  2302  1401  1283               	bcf	3,5	;RP0=0, select bank0
  2303  1402  00A8               	movwf	___flmul@a
  2304  1403  120A  118A  2028  160A  118A  	fcall	___flmul
  2305  1408  0827               	movf	?___flmul+3,w
  2306  1409  1683               	bsf	3,5	;RP0=1, select bank1
  2307  140A  00D9               	movwf	(calc@result+3)^(0+128)
  2308  140B  1283               	bcf	3,5	;RP0=0, select bank0
  2309  140C  0826               	movf	?___flmul+2,w
  2310  140D  1683               	bsf	3,5	;RP0=1, select bank1
  2311  140E  00D8               	movwf	(calc@result+2)^(0+128)
  2312  140F  1283               	bcf	3,5	;RP0=0, select bank0
  2313  1410  0825               	movf	?___flmul+1,w
  2314  1411  1683               	bsf	3,5	;RP0=1, select bank1
  2315  1412  00D7               	movwf	(calc@result+1)^(0+128)
  2316  1413  1283               	bcf	3,5	;RP0=0, select bank0
  2317  1414  0824               	movf	?___flmul,w
  2318  1415                     L3:
  2319  1415  1683               	bsf	3,5	;RP0=1, select bank1
  2320  1416  2C35               	goto	L4
  2321  1417                     l4146:	
  2322                           ;main.c: 159:             break;
  2323                           
  2324                           
  2325                           ;main.c: 161:             result = num_1 / num_2;
  2326  1417  1683               	bsf	3,5	;RP0=1, select bank1
  2327  1418  084A               	movf	(calc@num_2+3)^(0+128),w
  2328  1419  00F3               	movwf	___fldiv@a+3
  2329  141A  0849               	movf	(calc@num_2+2)^(0+128),w
  2330  141B  00F2               	movwf	___fldiv@a+2
  2331  141C  0848               	movf	(calc@num_2+1)^(0+128),w
  2332  141D  00F1               	movwf	___fldiv@a+1
  2333  141E  0847               	movf	calc@num_2^(0+128),w
  2334  141F  00F0               	movwf	___fldiv@a
  2335  1420  0846               	movf	(calc@num_1+3)^(0+128),w
  2336  1421  00F7               	movwf	___fldiv@b+3
  2337  1422  0845               	movf	(calc@num_1+2)^(0+128),w
  2338  1423  00F6               	movwf	___fldiv@b+2
  2339  1424  0844               	movf	(calc@num_1+1)^(0+128),w
  2340  1425  00F5               	movwf	___fldiv@b+1
  2341  1426  0843               	movf	calc@num_1^(0+128),w
  2342  1427  00F4               	movwf	___fldiv@b
  2343  1428  160A  118A  2495  160A  118A  	fcall	___fldiv
  2344  142D  0873               	movf	?___fldiv+3,w
  2345  142E  1683               	bsf	3,5	;RP0=1, select bank1
  2346  142F  00D9               	movwf	(calc@result+3)^(0+128)
  2347  1430  0872               	movf	?___fldiv+2,w
  2348  1431  00D8               	movwf	(calc@result+2)^(0+128)
  2349  1432  0871               	movf	?___fldiv+1,w
  2350  1433  00D7               	movwf	(calc@result+1)^(0+128)
  2351  1434  0870               	movf	?___fldiv,w
  2352  1435                     L4:
  2353  1435  00D6               	movwf	calc@result^(0+128)
  2354                           
  2355                           ;main.c: 162:             break;
  2356  1436  2C4E               	goto	l4152
  2357  1437                     l4150:
  2358  1437  084B               	movf	calc@operation^(0+128),w
  2359  1438  1283               	bcf	3,5	;RP0=0, select bank0
  2360  1439  00EE               	movwf	??_calc
  2361  143A  01EF               	clrf	??_calc+1
  2362                           
  2363                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2364                           ; Switch size 1, requested type "simple"
  2365                           ; Number of cases is 1, Range of values is 0 to 0
  2366                           ; switch strategies available:
  2367                           ; Name         Instructions Cycles
  2368                           ; simple_byte            4     3 (average)
  2369                           ; direct_byte           11     8 (fixed)
  2370                           ; jumptable            260     6 (fixed)
  2371                           ;	Chosen strategy is simple_byte
  2372  143B  086F               	movf	??_calc+1,w
  2373  143C  3A00               	xorlw	0	; case 0
  2374  143D  1903               	skipnz
  2375  143E  2C40               	goto	l4386
  2376  143F  2C4E               	goto	l4152
  2377  1440                     l4386:
  2378                           
  2379                           ; Switch size 1, requested type "simple"
  2380                           ; Number of cases is 4, Range of values is 42 to 47
  2381                           ; switch strategies available:
  2382                           ; Name         Instructions Cycles
  2383                           ; simple_byte           13     7 (average)
  2384                           ; direct_byte           29    11 (fixed)
  2385                           ; jumptable            263     9 (fixed)
  2386                           ;	Chosen strategy is simple_byte
  2387  1440  086E               	movf	??_calc,w
  2388  1441  3A2A               	xorlw	42	; case 42
  2389  1442  1903               	skipnz
  2390  1443  2BE3               	goto	l4144
  2391  1444  3A01               	xorlw	1	; case 43
  2392  1445  1903               	skipnz
  2393  1446  2B7D               	goto	l4140
  2394  1447  3A06               	xorlw	6	; case 45
  2395  1448  1903               	skipnz
  2396  1449  2BB0               	goto	l4142
  2397  144A  3A02               	xorlw	2	; case 47
  2398  144B  1903               	skipnz
  2399  144C  2C17               	goto	l4146
  2400  144D  2C4E               	goto	l4152
  2401  144E                     l4152:
  2402                           
  2403                           ;main.c: 166:     clr();
  2404  144E  160A  158A  227C  160A  118A  	fcall	_clr
  2405                           
  2406                           ;main.c: 167:     sprintf(res, "%f", result);
  2407  1453  30B6               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2408  1454  1283               	bcf	3,5	;RP0=0, select bank0
  2409  1455  00EE               	movwf	??_calc
  2410  1456  086E               	movf	??_calc,w
  2411  1457  1683               	bsf	3,5	;RP0=1, select bank1
  2412  1458  00A0               	movwf	sprintf@f^(0+128)
  2413  1459  0859               	movf	(calc@result+3)^(0+128),w
  2414  145A  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  2415  145B  0858               	movf	(calc@result+2)^(0+128),w
  2416  145C  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  2417  145D  0857               	movf	(calc@result+1)^(0+128),w
  2418  145E  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  2419  145F  0856               	movf	calc@result^(0+128),w
  2420  1460  00A1               	movwf	(?_sprintf^(0+128)+1)
  2421  1461  30CC               	movlw	(low (calc@res| 0))& (0+255)
  2422  1462  120A  118A  231D  160A  118A  	fcall	_sprintf
  2423                           
  2424                           ;main.c: 168:     strcpy(val_one , res);
  2425  1467  30CC               	movlw	(low (calc@res| 0))& (0+255)
  2426  1468  1283               	bcf	3,5	;RP0=0, select bank0
  2427  1469  00EE               	movwf	??_calc
  2428  146A  086E               	movf	??_calc,w
  2429  146B  00F0               	movwf	strcpy@from
  2430  146C  30A8               	movlw	(low (_val_one| (0+256)))& (0+255)
  2431  146D  160A  158A  2227  160A  118A  	fcall	_strcpy
  2432                           
  2433                           ;main.c: 170:     LCD_Set_Cursor(1,1);
  2434  1472  01F3               	clrf	LCD_Set_Cursor@c
  2435  1473  0AF3               	incf	LCD_Set_Cursor@c,f
  2436  1474  3001               	movlw	1
  2437  1475  160A  158A  243B  160A  118A  	fcall	_LCD_Set_Cursor
  2438                           
  2439                           ;main.c: 171:     LCD_Write_String("ANSWER = \0");
  2440  147A  30A3               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2441  147B  00F5               	movwf	LCD_Write_String@str
  2442  147C  3080               	movlw	128
  2443  147D  00F6               	movwf	LCD_Write_String@str+1
  2444  147E  160A  158A  2339  160A  118A  	fcall	_LCD_Write_String
  2445                           
  2446                           ;main.c: 173:     LCD_Set_Cursor(1,2);
  2447  1483  3002               	movlw	2
  2448  1484  00EE               	movwf	??_calc
  2449  1485  086E               	movf	??_calc,w
  2450  1486  00F3               	movwf	LCD_Set_Cursor@c
  2451  1487  3001               	movlw	1
  2452  1488  160A  158A  243B  160A  118A  	fcall	_LCD_Set_Cursor
  2453                           
  2454                           ;main.c: 174:     LCD_Write_String(res);
  2455  148D  30CC               	movlw	(low (calc@res| 0))& (0+255)
  2456  148E  00F5               	movwf	LCD_Write_String@str
  2457  148F  3000               	movlw	0
  2458  1490  00F6               	movwf	LCD_Write_String@str+1
  2459  1491  160A  158A  2339   	fcall	_LCD_Write_String
  2460  1494  0008               	return
  2461  1495                     __end_of_calc:
  2462                           
  2463                           	psect	text6
  2464  1A27                     __ptext6:	
  2465 ;; *************** function _strcpy *****************
  2466 ;; Defined at:
  2467 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\strcpy.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;  to              1    wreg     PTR unsigned char 
  2470 ;;		 -> val_one(10), 
  2471 ;;  from            1    0[COMMON] PTR const unsigned char 
  2472 ;;		 -> calc@res(10), 
  2473 ;; Auto vars:     Size  Location     Type
  2474 ;;  to              1    2[COMMON] PTR unsigned char 
  2475 ;;		 -> val_one(10), 
  2476 ;;  cp              1    3[COMMON] PTR unsigned char 
  2477 ;;		 -> val_one(10), 
  2478 ;; Return value:  Size  Location     Type
  2479 ;;                  1    wreg      PTR unsigned char 
  2480 ;; Registers used:
  2481 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2482 ;; Tracked objects:
  2483 ;;		On entry : B00/0
  2484 ;;		On exit  : B00/800
  2485 ;;		Unchanged: 300/0
  2486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2487 ;;      Params:         1       0       0       0       0
  2488 ;;      Locals:         2       0       0       0       0
  2489 ;;      Temps:          1       0       0       0       0
  2490 ;;      Totals:         4       0       0       0       0
  2491 ;;Total ram usage:        4 bytes
  2492 ;; Hardware stack levels used: 1
  2493 ;; This function calls:
  2494 ;;		Nothing
  2495 ;; This function is called by:
  2496 ;;		_calc
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499                           
  2500  1A27                     _strcpy:	
  2501                           ;psect for function _strcpy
  2502                           
  2503                           
  2504                           ;incstack = 0
  2505                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0]
  2506                           ;strcpy@to stored from wreg
  2507  1A27  00F2               	movwf	strcpy@to
  2508  1A28  0872               	movf	strcpy@to,w
  2509  1A29  00F1               	movwf	??_strcpy
  2510  1A2A  0871               	movf	??_strcpy,w
  2511  1A2B  00F3               	movwf	strcpy@cp
  2512  1A2C                     l3968:
  2513  1A2C  0870               	movf	strcpy@from,w
  2514  1A2D  0084               	movwf	4
  2515  1A2E  1383               	bcf	3,7	;select IRP bank0
  2516  1A2F  0800               	movf	0,w
  2517  1A30  00F1               	movwf	??_strcpy
  2518  1A31  0873               	movf	strcpy@cp,w
  2519  1A32  0084               	movwf	4
  2520  1A33  0871               	movf	??_strcpy,w
  2521  1A34  1783               	bsf	3,7	;select IRP bank2
  2522  1A35  0080               	movwf	0
  2523  1A36  0800               	movf	0,w
  2524  1A37  1903               	btfsc	3,2
  2525  1A38  0008               	return
  2526  1A39  3001               	movlw	1
  2527  1A3A  00F1               	movwf	??_strcpy
  2528  1A3B  0871               	movf	??_strcpy,w
  2529  1A3C  07F3               	addwf	strcpy@cp,f
  2530  1A3D  3001               	movlw	1
  2531  1A3E  00F1               	movwf	??_strcpy
  2532  1A3F  0871               	movf	??_strcpy,w
  2533  1A40  07F0               	addwf	strcpy@from,f
  2534  1A41  2A2C               	goto	l3968
  2535  1A42                     __end_of_strcpy:
  2536                           
  2537                           	psect	text7
  2538  031D                     __ptext7:	
  2539 ;; *************** function _sprintf *****************
  2540 ;; Defined at:
  2541 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;  sp              1    wreg     PTR unsigned char 
  2544 ;;		 -> calc@res(10), 
  2545 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  2546 ;;		 -> STR_1(3), 
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;  sp              1   29[BANK1 ] PTR unsigned char 
  2549 ;;		 -> calc@res(10), 
  2550 ;;  fval            4   30[BANK1 ] PTR unsigned char 
  2551 ;;  tmpval          4   25[BANK1 ] struct .
  2552 ;;  val             4   19[BANK1 ] unsigned long 
  2553 ;;  eexp            2   23[BANK1 ] int 
  2554 ;;  prec            2   17[BANK1 ] int 
  2555 ;;  flag            2   15[BANK1 ] unsigned short 
  2556 ;;  cp              2    0        PTR const unsigned char 
  2557 ;;  len             2    0        unsigned int 
  2558 ;;  width           2    0        int 
  2559 ;;  c               1   34[BANK1 ] unsigned char 
  2560 ;;  ap              1   14[BANK1 ] PTR void [1]
  2561 ;;		 -> ?_sprintf(2), 
  2562 ;;  d               1    0        unsigned char 
  2563 ;; Return value:  Size  Location     Type
  2564 ;;                  2    0[BANK1 ] int 
  2565 ;; Registers used:
  2566 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2567 ;; Tracked objects:
  2568 ;;		On entry : 300/100
  2569 ;;		On exit  : B00/100
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2572 ;;      Params:         0       0       5       0       0
  2573 ;;      Locals:         0       0      25       0       0
  2574 ;;      Temps:          0       0       5       0       0
  2575 ;;      Totals:         0       0      35       0       0
  2576 ;;Total ram usage:       35 bytes
  2577 ;; Hardware stack levels used: 1
  2578 ;; Hardware stack levels required when called: 3
  2579 ;; This function calls:
  2580 ;;		___awdiv
  2581 ;;		___fladd
  2582 ;;		___fleq
  2583 ;;		___flge
  2584 ;;		___flmul
  2585 ;;		___flneg
  2586 ;;		___flsub
  2587 ;;		___fltol
  2588 ;;		___lldiv
  2589 ;;		___llmod
  2590 ;;		___wmul
  2591 ;;		___xxtofl
  2592 ;;		__div_to_l_
  2593 ;;		__tdiv_to_l_
  2594 ;;		_fround
  2595 ;;		_scale
  2596 ;; This function is called by:
  2597 ;;		_calc
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601  031D                     _sprintf:	
  2602                           ;psect for function _sprintf
  2603                           
  2604                           
  2605                           ;incstack = 0
  2606                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2607                           ;sprintf@sp stored from wreg
  2608  031D  00BD               	movwf	sprintf@sp^(0+128)
  2609                           
  2610                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2611  031E  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2612  031F  00A5               	movwf	??_sprintf^(0+128)
  2613  0320  0825               	movf	??_sprintf^(0+128),w
  2614  0321  00AE               	movwf	sprintf@ap^(0+128)
  2615  0322                     l3952:	
  2616                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2617                           
  2618                           
  2619                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2620  0322  3001               	movlw	1
  2621  0323  07A0               	addwf	sprintf@f^(0+128),f
  2622  0324  30FF               	movlw	-1
  2623  0325  0720               	addwf	sprintf@f^(0+128),w
  2624  0326  0084               	movwf	4
  2625  0327  160A  118A  200A  120A  118A  	fcall	stringdir
  2626  032C  00A5               	movwf	??_sprintf^(0+128)
  2627  032D  0825               	movf	??_sprintf^(0+128),w
  2628  032E  00C2               	movwf	sprintf@c^(0+128)
  2629  032F  0842               	movf	sprintf@c^(0+128),w
  2630  0330  1903               	btfsc	3,2
  2631  0331  2FD3               	goto	l3954
  2632                           
  2633                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2634  0332  3025               	movlw	37
  2635  0333  0642               	xorwf	sprintf@c^(0+128),w
  2636  0334  1903               	btfsc	3,2
  2637  0335  2B38               	goto	l3800
  2638                           
  2639                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2640  0336  0842               	movf	sprintf@c^(0+128),w
  2641  0337  2FC8               	goto	L9
  2642  0338                     l3800:	
  2643                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 559:    continue;
  2644                           
  2645                           
  2646                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2647  0338  01AF               	clrf	sprintf@flag^(0+128)
  2648  0339  01B0               	clrf	(sprintf@flag+1)^(0+128)
  2649                           
  2650                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2651  033A  2B3D               	goto	l3804
  2652  033B                     l263:	
  2653                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2654                           
  2655                           
  2656                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2657  033B  1530               	bsf	(sprintf@flag^(0+128)+1),2
  2658                           
  2659                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 690:    break;
  2660  033C  2B57               	goto	l3806
  2661  033D                     l3804:
  2662  033D  3001               	movlw	1
  2663  033E  07A0               	addwf	sprintf@f^(0+128),f
  2664  033F  30FF               	movlw	-1
  2665  0340  0720               	addwf	sprintf@f^(0+128),w
  2666  0341  0084               	movwf	4
  2667  0342  160A  118A  200A  120A  118A  	fcall	stringdir
  2668  0347  00C2               	movwf	sprintf@c^(0+128)
  2669  0348  00A5               	movwf	??_sprintf^(0+128)
  2670  0349  01A6               	clrf	(??_sprintf^(0+128)+1)
  2671                           
  2672                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2673                           ; Switch size 1, requested type "simple"
  2674                           ; Number of cases is 1, Range of values is 0 to 0
  2675                           ; switch strategies available:
  2676                           ; Name         Instructions Cycles
  2677                           ; simple_byte            4     3 (average)
  2678                           ; direct_byte           11     8 (fixed)
  2679                           ; jumptable            260     6 (fixed)
  2680                           ;	Chosen strategy is simple_byte
  2681  034A  0826               	movf	(??_sprintf+1)^(0+128),w
  2682  034B  3A00               	xorlw	0	; case 0
  2683  034C  1903               	skipnz
  2684  034D  2B4F               	goto	l4388
  2685  034E  2B22               	goto	l3952
  2686  034F                     l4388:
  2687                           
  2688                           ; Switch size 1, requested type "simple"
  2689                           ; Number of cases is 2, Range of values is 0 to 102
  2690                           ; switch strategies available:
  2691                           ; Name         Instructions Cycles
  2692                           ; simple_byte            7     4 (average)
  2693                           ; jumptable            260     6 (fixed)
  2694                           ;	Chosen strategy is simple_byte
  2695  034F  0825               	movf	??_sprintf^(0+128),w
  2696  0350  3A00               	xorlw	0	; case 0
  2697  0351  1903               	skipnz
  2698  0352  2FD3               	goto	l3954
  2699  0353  3A66               	xorlw	102	; case 102
  2700  0354  1903               	skipnz
  2701  0355  2B3B               	goto	l263
  2702  0356  2B22               	goto	l3952
  2703  0357                     l3806:
  2704                           
  2705                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2706  0357  3000               	movlw	0
  2707  0358  052F               	andwf	sprintf@flag^(0+128),w
  2708  0359  00A5               	movwf	??_sprintf^(0+128)
  2709  035A  3007               	movlw	7
  2710  035B  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2711  035C  00A6               	movwf	(??_sprintf+1)^(0+128)
  2712  035D  0825               	movf	??_sprintf^(0+128),w
  2713  035E  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2714  035F  1903               	btfsc	3,2
  2715  0360  2FC3               	goto	l3946
  2716                           
  2717                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2718  0361  3006               	movlw	6
  2719  0362  00B1               	movwf	sprintf@prec^(0+128)
  2720  0363  3000               	movlw	0
  2721  0364  00B2               	movwf	(sprintf@prec^(0+128)+1)
  2722                           
  2723                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2724  0365  082E               	movf	sprintf@ap^(0+128),w
  2725  0366  0084               	movwf	4
  2726  0367  1383               	bcf	3,7	;select IRP bank0
  2727  0368  0800               	movf	0,w
  2728  0369  00BE               	movwf	sprintf@fval^(0+128)
  2729  036A  0A84               	incf	4,f
  2730  036B  0800               	movf	0,w
  2731  036C  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2732  036D  0A84               	incf	4,f
  2733  036E  0800               	movf	0,w
  2734  036F  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2735  0370  0A84               	incf	4,f
  2736  0371  0800               	movf	0,w
  2737  0372  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2738  0373  3004               	movlw	4
  2739  0374  00A5               	movwf	??_sprintf^(0+128)
  2740  0375  0825               	movf	??_sprintf^(0+128),w
  2741  0376  07AE               	addwf	sprintf@ap^(0+128),f
  2742                           
  2743                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2744  0377  0841               	movf	(sprintf@fval+3)^(0+128),w
  2745  0378  00F3               	movwf	___flge@ff1+3
  2746  0379  0840               	movf	(sprintf@fval+2)^(0+128),w
  2747  037A  00F2               	movwf	___flge@ff1+2
  2748  037B  083F               	movf	(sprintf@fval+1)^(0+128),w
  2749  037C  00F1               	movwf	___flge@ff1+1
  2750  037D  083E               	movf	sprintf@fval^(0+128),w
  2751  037E  00F0               	movwf	___flge@ff1
  2752  037F  3000               	movlw	0
  2753  0380  00F7               	movwf	___flge@ff2+3
  2754  0381  3000               	movlw	0
  2755  0382  00F6               	movwf	___flge@ff2+2
  2756  0383  3000               	movlw	0
  2757  0384  00F5               	movwf	___flge@ff2+1
  2758  0385  3000               	movlw	0
  2759  0386  00F4               	movwf	___flge@ff2
  2760  0387  160A  158A  2634  120A  118A  	fcall	___flge
  2761  038C  1803               	btfsc	3,0
  2762  038D  2BA9               	goto	l3820
  2763                           
  2764                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2765  038E  1683               	bsf	3,5	;RP0=1, select bank1
  2766  038F  0841               	movf	(sprintf@fval+3)^(0+128),w
  2767  0390  00F3               	movwf	___flneg@f1+3
  2768  0391  0840               	movf	(sprintf@fval+2)^(0+128),w
  2769  0392  00F2               	movwf	___flneg@f1+2
  2770  0393  083F               	movf	(sprintf@fval+1)^(0+128),w
  2771  0394  00F1               	movwf	___flneg@f1+1
  2772  0395  083E               	movf	sprintf@fval^(0+128),w
  2773  0396  00F0               	movwf	___flneg@f1
  2774  0397  160A  158A  2193  120A  118A  	fcall	___flneg
  2775  039C  0873               	movf	?___flneg+3,w
  2776  039D  1683               	bsf	3,5	;RP0=1, select bank1
  2777  039E  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2778  039F  0872               	movf	?___flneg+2,w
  2779  03A0  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2780  03A1  0871               	movf	?___flneg+1,w
  2781  03A2  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2782  03A3  0870               	movf	?___flneg,w
  2783  03A4  00BE               	movwf	sprintf@fval^(0+128)
  2784                           
  2785                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2786  03A5  3003               	movlw	3
  2787  03A6  04AF               	iorwf	sprintf@flag^(0+128),f
  2788  03A7  3000               	movlw	0
  2789  03A8  04B0               	iorwf	(sprintf@flag+1)^(0+128),f
  2790  03A9                     l3820:
  2791                           
  2792                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2793  03A9  1683               	bsf	3,5	;RP0=1, select bank1
  2794  03AA  01B7               	clrf	sprintf@eexp^(0+128)
  2795  03AB  01B8               	clrf	(sprintf@eexp+1)^(0+128)
  2796                           
  2797                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2798  03AC  0841               	movf	(sprintf@fval+3)^(0+128),w
  2799  03AD  00F3               	movwf	___fleq@ff1+3
  2800  03AE  0840               	movf	(sprintf@fval+2)^(0+128),w
  2801  03AF  00F2               	movwf	___fleq@ff1+2
  2802  03B0  083F               	movf	(sprintf@fval+1)^(0+128),w
  2803  03B1  00F1               	movwf	___fleq@ff1+1
  2804  03B2  083E               	movf	sprintf@fval^(0+128),w
  2805  03B3  00F0               	movwf	___fleq@ff1
  2806  03B4  3000               	movlw	0
  2807  03B5  00F7               	movwf	___fleq@ff2+3
  2808  03B6  3000               	movlw	0
  2809  03B7  00F6               	movwf	___fleq@ff2+2
  2810  03B8  3000               	movlw	0
  2811  03B9  00F5               	movwf	___fleq@ff2+1
  2812  03BA  3000               	movlw	0
  2813  03BB  00F4               	movwf	___fleq@ff2
  2814  03BC  160A  158A  23F3  120A  118A  	fcall	___fleq
  2815  03C1  1803               	btfsc	3,0
  2816  03C2  2C84               	goto	l3850
  2817                           
  2818                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2819  03C3  1003               	clrc
  2820  03C4  1683               	bsf	3,5	;RP0=1, select bank1
  2821  03C5  0D40               	rlf	(sprintf@fval+2)^(0+128),w
  2822  03C6  0D41               	rlf	(sprintf@fval+3)^(0+128),w
  2823  03C7  3E82               	addlw	130
  2824  03C8  00B7               	movwf	sprintf@eexp^(0+128)
  2825  03C9  30FF               	movlw	255
  2826  03CA  1803               	skipnc
  2827  03CB  3000               	movlw	0
  2828  03CC  00B8               	movwf	(sprintf@eexp^(0+128)+1)
  2829                           
  2830                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2831  03CD  30FF               	movlw	255
  2832  03CE  07B7               	addwf	sprintf@eexp^(0+128),f
  2833  03CF  1803               	skipnc
  2834  03D0  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2835  03D1  30FF               	movlw	255
  2836  03D2  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2837                           
  2838                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2839  03D3  3003               	movlw	3
  2840  03D4  00F0               	movwf	___wmul@multiplier
  2841  03D5  3000               	movlw	0
  2842  03D6  00F1               	movwf	___wmul@multiplier+1
  2843  03D7  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2844  03D8  00F3               	movwf	___wmul@multiplicand+1
  2845  03D9  0837               	movf	sprintf@eexp^(0+128),w
  2846  03DA  00F2               	movwf	___wmul@multiplicand
  2847  03DB  160A  158A  229D  120A  118A  	fcall	___wmul
  2848  03E0  0871               	movf	?___wmul+1,w
  2849  03E1  00B8               	movwf	(sprintf@eexp+1)^(0+128)
  2850  03E2  0870               	movf	?___wmul,w
  2851  03E3  00B7               	movwf	sprintf@eexp^(0+128)
  2852                           
  2853                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2854  03E4  300A               	movlw	10
  2855  03E5  00F7               	movwf	___awdiv@divisor
  2856  03E6  3000               	movlw	0
  2857  03E7  00F8               	movwf	___awdiv@divisor+1
  2858  03E8  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2859  03E9  00FA               	movwf	___awdiv@dividend+1
  2860  03EA  0837               	movf	sprintf@eexp^(0+128),w
  2861  03EB  00F9               	movwf	___awdiv@dividend
  2862  03EC  160A  158A  251D  120A  118A  	fcall	___awdiv
  2863  03F1  0878               	movf	?___awdiv+1,w
  2864  03F2  1683               	bsf	3,5	;RP0=1, select bank1
  2865  03F3  00B8               	movwf	(sprintf@eexp+1)^(0+128)
  2866  03F4  0877               	movf	?___awdiv,w
  2867  03F5  00B7               	movwf	sprintf@eexp^(0+128)
  2868                           
  2869                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2870  03F6  1FB8               	btfss	(sprintf@eexp+1)^(0+128),7
  2871  03F7  2BFE               	goto	l3836
  2872                           
  2873                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2874  03F8  30FF               	movlw	255
  2875  03F9  07B7               	addwf	sprintf@eexp^(0+128),f
  2876  03FA  1803               	skipnc
  2877  03FB  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2878  03FC  30FF               	movlw	255
  2879  03FD  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2880  03FE                     l3836:
  2881                           
  2882                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2883  03FE  0337               	decf	sprintf@eexp^(0+128),w
  2884  03FF  3AFF               	xorlw	255
  2885  0400  120A  158A  24D8  120A  118A  	fcall	_scale
  2886  0405  0841               	movf	?_scale+3,w
  2887  0406  1683               	bsf	3,5	;RP0=1, select bank1
  2888  0407  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2889  0408  1283               	bcf	3,5	;RP0=0, select bank0
  2890  0409  0840               	movf	?_scale+2,w
  2891  040A  1683               	bsf	3,5	;RP0=1, select bank1
  2892  040B  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2893  040C  1283               	bcf	3,5	;RP0=0, select bank0
  2894  040D  083F               	movf	?_scale+1,w
  2895  040E  1683               	bsf	3,5	;RP0=1, select bank1
  2896  040F  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2897  0410  1283               	bcf	3,5	;RP0=0, select bank0
  2898  0411  083E               	movf	?_scale,w
  2899  0412  1683               	bsf	3,5	;RP0=1, select bank1
  2900  0413  00B9               	movwf	sprintf@tmpval^(0+128)
  2901                           
  2902                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2903  0414  0841               	movf	(sprintf@fval+3)^(0+128),w
  2904  0415  1283               	bcf	3,5	;RP0=0, select bank0
  2905  0416  00A7               	movwf	___flmul@b+3
  2906  0417  1683               	bsf	3,5	;RP0=1, select bank1
  2907  0418  0840               	movf	(sprintf@fval+2)^(0+128),w
  2908  0419  1283               	bcf	3,5	;RP0=0, select bank0
  2909  041A  00A6               	movwf	___flmul@b+2
  2910  041B  1683               	bsf	3,5	;RP0=1, select bank1
  2911  041C  083F               	movf	(sprintf@fval+1)^(0+128),w
  2912  041D  1283               	bcf	3,5	;RP0=0, select bank0
  2913  041E  00A5               	movwf	___flmul@b+1
  2914  041F  1683               	bsf	3,5	;RP0=1, select bank1
  2915  0420  083E               	movf	sprintf@fval^(0+128),w
  2916  0421  1283               	bcf	3,5	;RP0=0, select bank0
  2917  0422  00A4               	movwf	___flmul@b
  2918  0423  1683               	bsf	3,5	;RP0=1, select bank1
  2919  0424  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2920  0425  1283               	bcf	3,5	;RP0=0, select bank0
  2921  0426  00AB               	movwf	___flmul@a+3
  2922  0427  1683               	bsf	3,5	;RP0=1, select bank1
  2923  0428  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2924  0429  1283               	bcf	3,5	;RP0=0, select bank0
  2925  042A  00AA               	movwf	___flmul@a+2
  2926  042B  1683               	bsf	3,5	;RP0=1, select bank1
  2927  042C  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2928  042D  1283               	bcf	3,5	;RP0=0, select bank0
  2929  042E  00A9               	movwf	___flmul@a+1
  2930  042F  1683               	bsf	3,5	;RP0=1, select bank1
  2931  0430  0839               	movf	sprintf@tmpval^(0+128),w
  2932  0431  1283               	bcf	3,5	;RP0=0, select bank0
  2933  0432  00A8               	movwf	___flmul@a
  2934  0433  120A  118A  2028  120A  118A  	fcall	___flmul
  2935  0438  0827               	movf	?___flmul+3,w
  2936  0439  1683               	bsf	3,5	;RP0=1, select bank1
  2937  043A  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2938  043B  1283               	bcf	3,5	;RP0=0, select bank0
  2939  043C  0826               	movf	?___flmul+2,w
  2940  043D  1683               	bsf	3,5	;RP0=1, select bank1
  2941  043E  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2942  043F  1283               	bcf	3,5	;RP0=0, select bank0
  2943  0440  0825               	movf	?___flmul+1,w
  2944  0441  1683               	bsf	3,5	;RP0=1, select bank1
  2945  0442  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2946  0443  1283               	bcf	3,5	;RP0=0, select bank0
  2947  0444  0824               	movf	?___flmul,w
  2948  0445  1683               	bsf	3,5	;RP0=1, select bank1
  2949  0446  00B9               	movwf	sprintf@tmpval^(0+128)
  2950                           
  2951                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2952  0447  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2953  0448  00F3               	movwf	___flge@ff1+3
  2954  0449  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2955  044A  00F2               	movwf	___flge@ff1+2
  2956  044B  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2957  044C  00F1               	movwf	___flge@ff1+1
  2958  044D  0839               	movf	sprintf@tmpval^(0+128),w
  2959  044E  00F0               	movwf	___flge@ff1
  2960  044F  303F               	movlw	63
  2961  0450  00F7               	movwf	___flge@ff2+3
  2962  0451  3080               	movlw	128
  2963  0452  00F6               	movwf	___flge@ff2+2
  2964  0453  3000               	movlw	0
  2965  0454  00F5               	movwf	___flge@ff2+1
  2966  0455  3000               	movlw	0
  2967  0456  00F4               	movwf	___flge@ff2
  2968  0457  160A  158A  2634  120A  118A  	fcall	___flge
  2969  045C  1803               	btfsc	3,0
  2970  045D  2C65               	goto	l3844
  2971                           
  2972                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2973  045E  30FF               	movlw	255
  2974  045F  1683               	bsf	3,5	;RP0=1, select bank1
  2975  0460  07B7               	addwf	sprintf@eexp^(0+128),f
  2976  0461  1803               	skipnc
  2977  0462  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2978  0463  30FF               	movlw	255
  2979  0464  2C83               	goto	L10
  2980  0465                     l3844:
  2981  0465  1683               	bsf	3,5	;RP0=1, select bank1
  2982  0466  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2983  0467  00F3               	movwf	___flge@ff1+3
  2984  0468  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2985  0469  00F2               	movwf	___flge@ff1+2
  2986  046A  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2987  046B  00F1               	movwf	___flge@ff1+1
  2988  046C  0839               	movf	sprintf@tmpval^(0+128),w
  2989  046D  00F0               	movwf	___flge@ff1
  2990  046E  3041               	movlw	65
  2991  046F  00F7               	movwf	___flge@ff2+3
  2992  0470  3020               	movlw	32
  2993  0471  00F6               	movwf	___flge@ff2+2
  2994  0472  3000               	movlw	0
  2995  0473  00F5               	movwf	___flge@ff2+1
  2996  0474  3000               	movlw	0
  2997  0475  00F4               	movwf	___flge@ff2
  2998  0476  160A  158A  2634  120A  118A  	fcall	___flge
  2999  047B  1C03               	btfss	3,0
  3000  047C  2C84               	goto	l3850
  3001                           
  3002                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  3003  047D  3001               	movlw	1
  3004  047E  1683               	bsf	3,5	;RP0=1, select bank1
  3005  047F  07B7               	addwf	sprintf@eexp^(0+128),f
  3006  0480  1803               	skipnc
  3007  0481  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  3008  0482  3000               	movlw	0
  3009  0483                     L10:
  3010  0483  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  3011  0484                     l3850:	
  3012                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  3013                           
  3014                           
  3015                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  3016  0484  3006               	movlw	6
  3017  0485  160A  118A  263D  120A  118A  	fcall	_fround
  3018  048A  0841               	movf	?_fround+3,w
  3019  048B  00D5               	movwf	___fladd@b+3
  3020  048C  0840               	movf	?_fround+2,w
  3021  048D  00D4               	movwf	___fladd@b+2
  3022  048E  083F               	movf	?_fround+1,w
  3023  048F  00D3               	movwf	___fladd@b+1
  3024  0490  083E               	movf	?_fround,w
  3025  0491  00D2               	movwf	___fladd@b
  3026  0492  1683               	bsf	3,5	;RP0=1, select bank1
  3027  0493  0841               	movf	(sprintf@fval+3)^(0+128),w
  3028  0494  1283               	bcf	3,5	;RP0=0, select bank0
  3029  0495  00D9               	movwf	___fladd@a+3
  3030  0496  1683               	bsf	3,5	;RP0=1, select bank1
  3031  0497  0840               	movf	(sprintf@fval+2)^(0+128),w
  3032  0498  1283               	bcf	3,5	;RP0=0, select bank0
  3033  0499  00D8               	movwf	___fladd@a+2
  3034  049A  1683               	bsf	3,5	;RP0=1, select bank1
  3035  049B  083F               	movf	(sprintf@fval+1)^(0+128),w
  3036  049C  1283               	bcf	3,5	;RP0=0, select bank0
  3037  049D  00D7               	movwf	___fladd@a+1
  3038  049E  1683               	bsf	3,5	;RP0=1, select bank1
  3039  049F  083E               	movf	sprintf@fval^(0+128),w
  3040  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  3041  04A1  00D6               	movwf	___fladd@a
  3042  04A2  120A  158A  2031  120A  118A  	fcall	___fladd
  3043  04A7  0855               	movf	?___fladd+3,w
  3044  04A8  1683               	bsf	3,5	;RP0=1, select bank1
  3045  04A9  00C1               	movwf	(sprintf@fval+3)^(0+128)
  3046  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  3047  04AB  0854               	movf	?___fladd+2,w
  3048  04AC  1683               	bsf	3,5	;RP0=1, select bank1
  3049  04AD  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3050  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  3051  04AF  0853               	movf	?___fladd+1,w
  3052  04B0  1683               	bsf	3,5	;RP0=1, select bank1
  3053  04B1  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3054  04B2  1283               	bcf	3,5	;RP0=0, select bank0
  3055  04B3  0852               	movf	?___fladd,w
  3056  04B4  1683               	bsf	3,5	;RP0=1, select bank1
  3057  04B5  00BE               	movwf	sprintf@fval^(0+128)
  3058                           
  3059                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  3060  04B6  0838               	movf	(sprintf@eexp+1)^(0+128),w
  3061  04B7  3A80               	xorlw	128
  3062  04B8  00FF               	movwf	127
  3063  04B9  3080               	movlw	128
  3064  04BA  027F               	subwf	127,w
  3065  04BB  1D03               	skipz
  3066  04BC  2CBF               	goto	u6255
  3067  04BD  300A               	movlw	10
  3068  04BE  0237               	subwf	sprintf@eexp^(0+128),w
  3069  04BF                     u6255:
  3070  04BF  1803               	skipnc
  3071  04C0  2D01               	goto	l3860
  3072  04C1  1683               	bsf	3,5	;RP0=1, select bank1
  3073  04C2  1303               	bcf	3,6	;RP1=0, select bank1
  3074  04C3  0841               	movf	(sprintf@fval+3)^(0+128),w
  3075  04C4  00F3               	movwf	___fleq@ff1+3
  3076  04C5  0840               	movf	(sprintf@fval+2)^(0+128),w
  3077  04C6  00F2               	movwf	___fleq@ff1+2
  3078  04C7  083F               	movf	(sprintf@fval+1)^(0+128),w
  3079  04C8  00F1               	movwf	___fleq@ff1+1
  3080  04C9  083E               	movf	sprintf@fval^(0+128),w
  3081  04CA  00F0               	movwf	___fleq@ff1
  3082  04CB  3000               	movlw	0
  3083  04CC  00F7               	movwf	___fleq@ff2+3
  3084  04CD  3000               	movlw	0
  3085  04CE  00F6               	movwf	___fleq@ff2+2
  3086  04CF  3000               	movlw	0
  3087  04D0  00F5               	movwf	___fleq@ff2+1
  3088  04D1  3000               	movlw	0
  3089  04D2  00F4               	movwf	___fleq@ff2
  3090  04D3  160A  158A  23F3  120A  118A  	fcall	___fleq
  3091  04D8  1803               	btfsc	3,0
  3092  04D9  2D5F               	goto	l3874
  3093  04DA  1683               	bsf	3,5	;RP0=1, select bank1
  3094  04DB  0841               	movf	(sprintf@fval+3)^(0+128),w
  3095  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  3096  04DD  00D4               	movwf	___fltol@f1+3
  3097  04DE  1683               	bsf	3,5	;RP0=1, select bank1
  3098  04DF  0840               	movf	(sprintf@fval+2)^(0+128),w
  3099  04E0  1283               	bcf	3,5	;RP0=0, select bank0
  3100  04E1  00D3               	movwf	___fltol@f1+2
  3101  04E2  1683               	bsf	3,5	;RP0=1, select bank1
  3102  04E3  083F               	movf	(sprintf@fval+1)^(0+128),w
  3103  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  3104  04E5  00D2               	movwf	___fltol@f1+1
  3105  04E6  1683               	bsf	3,5	;RP0=1, select bank1
  3106  04E7  083E               	movf	sprintf@fval^(0+128),w
  3107  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  3108  04E9  00D1               	movwf	___fltol@f1
  3109  04EA  160A  118A  20D4  120A  118A  	fcall	___fltol
  3110  04EF  0854               	movf	?___fltol+3,w
  3111  04F0  0453               	iorwf	?___fltol+2,w
  3112  04F1  0452               	iorwf	?___fltol+1,w
  3113  04F2  0451               	iorwf	?___fltol,w
  3114  04F3  1D03               	skipz
  3115  04F4  2D5F               	goto	l3874
  3116  04F5  1683               	bsf	3,5	;RP0=1, select bank1
  3117  04F6  0838               	movf	(sprintf@eexp+1)^(0+128),w
  3118  04F7  3A80               	xorlw	128
  3119  04F8  00FF               	movwf	127
  3120  04F9  3080               	movlw	128
  3121  04FA  027F               	subwf	127,w
  3122  04FB  1D03               	skipz
  3123  04FC  2CFF               	goto	u6285
  3124  04FD  3002               	movlw	2
  3125  04FE  0237               	subwf	sprintf@eexp^(0+128),w
  3126  04FF                     u6285:
  3127  04FF  1C03               	skipc
  3128  0500  2D5F               	goto	l3874
  3129  0501                     l3860:
  3130                           
  3131                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  3132  0501  1683               	bsf	3,5	;RP0=1, select bank1
  3133  0502  1303               	bcf	3,6	;RP1=0, select bank1
  3134  0503  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  3135  0504  00F3               	movwf	___flge@ff1+3
  3136  0505  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  3137  0506  00F2               	movwf	___flge@ff1+2
  3138  0507  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  3139  0508  00F1               	movwf	___flge@ff1+1
  3140  0509  0839               	movf	sprintf@tmpval^(0+128),w
  3141  050A  00F0               	movwf	___flge@ff1
  3142  050B  3040               	movlw	64
  3143  050C  00F7               	movwf	___flge@ff2+3
  3144  050D  3089               	movlw	137
  3145  050E  00F6               	movwf	___flge@ff2+2
  3146  050F  3070               	movlw	112
  3147  0510  00F5               	movwf	___flge@ff2+1
  3148  0511  305F               	movlw	95
  3149  0512  00F4               	movwf	___flge@ff2
  3150  0513  160A  158A  2634  120A  118A  	fcall	___flge
  3151  0518  1803               	btfsc	3,0
  3152  0519  2D1C               	goto	l3864
  3153                           
  3154                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  3155  051A  30F7               	movlw	247
  3156  051B  2D1D               	goto	L5
  3157  051C                     l3864:	
  3158                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1148:      }else{
  3159                           
  3160                           
  3161                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  3162  051C  30F8               	movlw	248
  3163  051D                     L5:
  3164  051D  1683               	bsf	3,5	;RP0=1, select bank1
  3165  051E  07B7               	addwf	sprintf@eexp^(0+128),f
  3166  051F  1803               	skipnc
  3167  0520  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  3168  0521  30FF               	movlw	255
  3169  0522  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  3170                           
  3171                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  3172  0523  0837               	movf	sprintf@eexp^(0+128),w
  3173  0524  120A  158A  24D8  120A  118A  	fcall	_scale
  3174  0529  0841               	movf	?_scale+3,w
  3175  052A  1683               	bsf	3,5	;RP0=1, select bank1
  3176  052B  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  3177  052C  1283               	bcf	3,5	;RP0=0, select bank0
  3178  052D  0840               	movf	?_scale+2,w
  3179  052E  1683               	bsf	3,5	;RP0=1, select bank1
  3180  052F  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  3181  0530  1283               	bcf	3,5	;RP0=0, select bank0
  3182  0531  083F               	movf	?_scale+1,w
  3183  0532  1683               	bsf	3,5	;RP0=1, select bank1
  3184  0533  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  3185  0534  1283               	bcf	3,5	;RP0=0, select bank0
  3186  0535  083E               	movf	?_scale,w
  3187  0536  1683               	bsf	3,5	;RP0=1, select bank1
  3188  0537  00B9               	movwf	sprintf@tmpval^(0+128)
  3189  0538  0841               	movf	(sprintf@fval+3)^(0+128),w
  3190  0539  00F3               	movwf	__div_to_l_@f1+3
  3191  053A  0840               	movf	(sprintf@fval+2)^(0+128),w
  3192  053B  00F2               	movwf	__div_to_l_@f1+2
  3193  053C  083F               	movf	(sprintf@fval+1)^(0+128),w
  3194  053D  00F1               	movwf	__div_to_l_@f1+1
  3195  053E  083E               	movf	sprintf@fval^(0+128),w
  3196  053F  00F0               	movwf	__div_to_l_@f1
  3197  0540  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  3198  0541  00F7               	movwf	__div_to_l_@f2+3
  3199  0542  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  3200  0543  00F6               	movwf	__div_to_l_@f2+2
  3201  0544  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  3202  0545  00F5               	movwf	__div_to_l_@f2+1
  3203  0546  0839               	movf	sprintf@tmpval^(0+128),w
  3204  0547  00F4               	movwf	__div_to_l_@f2
  3205  0548  160A  118A  213F  120A  118A  	fcall	__div_to_l_
  3206  054D  0873               	movf	?__div_to_l_+3,w
  3207  054E  1683               	bsf	3,5	;RP0=1, select bank1
  3208  054F  00B6               	movwf	(sprintf@val+3)^(0+128)
  3209  0550  0872               	movf	?__div_to_l_+2,w
  3210  0551  00B5               	movwf	(sprintf@val+2)^(0+128)
  3211  0552  0871               	movf	?__div_to_l_+1,w
  3212  0553  00B4               	movwf	(sprintf@val+1)^(0+128)
  3213  0554  0870               	movf	?__div_to_l_,w
  3214  0555  00B3               	movwf	sprintf@val^(0+128)
  3215                           
  3216                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  3217  0556  3000               	movlw	0
  3218  0557  00C1               	movwf	(sprintf@fval+3)^(0+128)
  3219  0558  3000               	movlw	0
  3220  0559  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3221  055A  3000               	movlw	0
  3222  055B  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3223  055C  3000               	movlw	0
  3224  055D  00BE               	movwf	sprintf@fval^(0+128)
  3225                           
  3226                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  3227  055E  2DC1               	goto	l3880
  3228  055F                     l3874:
  3229                           
  3230                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  3231  055F  1683               	bsf	3,5	;RP0=1, select bank1
  3232  0560  1303               	bcf	3,6	;RP1=0, select bank1
  3233  0561  0841               	movf	(sprintf@fval+3)^(0+128),w
  3234  0562  1283               	bcf	3,5	;RP0=0, select bank0
  3235  0563  00D4               	movwf	___fltol@f1+3
  3236  0564  1683               	bsf	3,5	;RP0=1, select bank1
  3237  0565  0840               	movf	(sprintf@fval+2)^(0+128),w
  3238  0566  1283               	bcf	3,5	;RP0=0, select bank0
  3239  0567  00D3               	movwf	___fltol@f1+2
  3240  0568  1683               	bsf	3,5	;RP0=1, select bank1
  3241  0569  083F               	movf	(sprintf@fval+1)^(0+128),w
  3242  056A  1283               	bcf	3,5	;RP0=0, select bank0
  3243  056B  00D2               	movwf	___fltol@f1+1
  3244  056C  1683               	bsf	3,5	;RP0=1, select bank1
  3245  056D  083E               	movf	sprintf@fval^(0+128),w
  3246  056E  1283               	bcf	3,5	;RP0=0, select bank0
  3247  056F  00D1               	movwf	___fltol@f1
  3248  0570  160A  118A  20D4  120A  118A  	fcall	___fltol
  3249  0575  0854               	movf	?___fltol+3,w
  3250  0576  1683               	bsf	3,5	;RP0=1, select bank1
  3251  0577  00B6               	movwf	(sprintf@val+3)^(0+128)
  3252  0578  1283               	bcf	3,5	;RP0=0, select bank0
  3253  0579  0853               	movf	?___fltol+2,w
  3254  057A  1683               	bsf	3,5	;RP0=1, select bank1
  3255  057B  00B5               	movwf	(sprintf@val+2)^(0+128)
  3256  057C  1283               	bcf	3,5	;RP0=0, select bank0
  3257  057D  0852               	movf	?___fltol+1,w
  3258  057E  1683               	bsf	3,5	;RP0=1, select bank1
  3259  057F  00B4               	movwf	(sprintf@val+1)^(0+128)
  3260  0580  1283               	bcf	3,5	;RP0=0, select bank0
  3261  0581  0851               	movf	?___fltol,w
  3262  0582  1683               	bsf	3,5	;RP0=1, select bank1
  3263  0583  00B3               	movwf	sprintf@val^(0+128)
  3264                           
  3265                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  3266  0584  0836               	movf	(sprintf@val+3)^(0+128),w
  3267  0585  00F3               	movwf	___xxtofl@val+3
  3268  0586  0835               	movf	(sprintf@val+2)^(0+128),w
  3269  0587  00F2               	movwf	___xxtofl@val+2
  3270  0588  0834               	movf	(sprintf@val+1)^(0+128),w
  3271  0589  00F1               	movwf	___xxtofl@val+1
  3272  058A  0833               	movf	sprintf@val^(0+128),w
  3273  058B  00F0               	movwf	___xxtofl@val
  3274  058C  3000               	movlw	0
  3275  058D  160A  158A  275D  120A  118A  	fcall	___xxtofl
  3276  0592  0873               	movf	?___xxtofl+3,w
  3277  0593  1283               	bcf	3,5	;RP0=0, select bank0
  3278  0594  00E9               	movwf	___flsub@a+3
  3279  0595  0872               	movf	?___xxtofl+2,w
  3280  0596  00E8               	movwf	___flsub@a+2
  3281  0597  0871               	movf	?___xxtofl+1,w
  3282  0598  00E7               	movwf	___flsub@a+1
  3283  0599  0870               	movf	?___xxtofl,w
  3284  059A  00E6               	movwf	___flsub@a
  3285  059B  1683               	bsf	3,5	;RP0=1, select bank1
  3286  059C  0841               	movf	(sprintf@fval+3)^(0+128),w
  3287  059D  1283               	bcf	3,5	;RP0=0, select bank0
  3288  059E  00ED               	movwf	___flsub@b+3
  3289  059F  1683               	bsf	3,5	;RP0=1, select bank1
  3290  05A0  0840               	movf	(sprintf@fval+2)^(0+128),w
  3291  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  3292  05A2  00EC               	movwf	___flsub@b+2
  3293  05A3  1683               	bsf	3,5	;RP0=1, select bank1
  3294  05A4  083F               	movf	(sprintf@fval+1)^(0+128),w
  3295  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  3296  05A6  00EB               	movwf	___flsub@b+1
  3297  05A7  1683               	bsf	3,5	;RP0=1, select bank1
  3298  05A8  083E               	movf	sprintf@fval^(0+128),w
  3299  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  3300  05AA  00EA               	movwf	___flsub@b
  3301  05AB  160A  158A  225E  120A  118A  	fcall	___flsub
  3302  05B0  0869               	movf	?___flsub+3,w
  3303  05B1  1683               	bsf	3,5	;RP0=1, select bank1
  3304  05B2  00C1               	movwf	(sprintf@fval+3)^(0+128)
  3305  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  3306  05B4  0868               	movf	?___flsub+2,w
  3307  05B5  1683               	bsf	3,5	;RP0=1, select bank1
  3308  05B6  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3309  05B7  1283               	bcf	3,5	;RP0=0, select bank0
  3310  05B8  0867               	movf	?___flsub+1,w
  3311  05B9  1683               	bsf	3,5	;RP0=1, select bank1
  3312  05BA  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3313  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  3314  05BC  0866               	movf	?___flsub,w
  3315  05BD  1683               	bsf	3,5	;RP0=1, select bank1
  3316  05BE  00BE               	movwf	sprintf@fval^(0+128)
  3317                           
  3318                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  3319  05BF  01B7               	clrf	sprintf@eexp^(0+128)
  3320  05C0  01B8               	clrf	(sprintf@eexp+1)^(0+128)
  3321  05C1                     l3880:
  3322                           
  3323                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3324  05C1  01C2               	clrf	sprintf@c^(0+128)
  3325  05C2  0AC2               	incf	sprintf@c^(0+128),f
  3326  05C3                     l3886:
  3327                           
  3328                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  3329  05C3  0842               	movf	sprintf@c^(0+128),w
  3330  05C4  00A5               	movwf	??_sprintf^(0+128)
  3331  05C5  3001               	movlw	1
  3332  05C6                     u6305:
  3333  05C6  1003               	clrc
  3334  05C7  0DA5               	rlf	??_sprintf^(0+128),f
  3335  05C8  3EFF               	addlw	-1
  3336  05C9  1D03               	skipz
  3337  05CA  2DC6               	goto	u6305
  3338  05CB  1003               	clrc
  3339  05CC  0D25               	rlf	??_sprintf^(0+128),w
  3340  05CD  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3341  05CE  0084               	movwf	4
  3342  05CF  160A  118A  200A  120A  118A  	fcall	stringdir
  3343  05D4  00A6               	movwf	(??_sprintf+1)^(0+128)
  3344  05D5  160A  118A  200A  120A  118A  	fcall	stringdir
  3345  05DA  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  3346  05DB  160A  118A  200A  120A  118A  	fcall	stringdir
  3347  05E0  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  3348  05E1  160A  118A  200A  120A  118A  	fcall	stringdir
  3349  05E6  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  3350  05E7  0829               	movf	(??_sprintf+4)^(0+128),w
  3351  05E8  0236               	subwf	(sprintf@val+3)^(0+128),w
  3352  05E9  1D03               	skipz
  3353  05EA  2DF5               	goto	u6315
  3354  05EB  0828               	movf	(??_sprintf+3)^(0+128),w
  3355  05EC  0235               	subwf	(sprintf@val+2)^(0+128),w
  3356  05ED  1D03               	skipz
  3357  05EE  2DF5               	goto	u6315
  3358  05EF  0827               	movf	(??_sprintf+2)^(0+128),w
  3359  05F0  0234               	subwf	(sprintf@val+1)^(0+128),w
  3360  05F1  1D03               	skipz
  3361  05F2  2DF5               	goto	u6315
  3362  05F3  0826               	movf	(??_sprintf+1)^(0+128),w
  3363  05F4  0233               	subwf	sprintf@val^(0+128),w
  3364  05F5                     u6315:
  3365  05F5  1C03               	btfss	3,0
  3366  05F6  2DFF               	goto	l3892
  3367  05F7  3001               	movlw	1
  3368  05F8  00A5               	movwf	??_sprintf^(0+128)
  3369  05F9  0825               	movf	??_sprintf^(0+128),w
  3370  05FA  07C2               	addwf	sprintf@c^(0+128),f
  3371  05FB  300A               	movlw	10
  3372  05FC  0642               	xorwf	sprintf@c^(0+128),w
  3373  05FD  1D03               	btfss	3,2
  3374  05FE  2DC3               	goto	l3886
  3375  05FF                     l3892:
  3376                           
  3377                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  3378  05FF  082F               	movf	sprintf@flag^(0+128),w
  3379  0600  3903               	andlw	3
  3380  0601  1903               	btfsc	3,2
  3381  0602  2E0E               	goto	l288
  3382                           
  3383                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  3384  0603  302D               	movlw	45
  3385  0604                     L6:
  3386  0604  00A5               	movwf	??_sprintf^(0+128)
  3387  0605  083D               	movf	sprintf@sp^(0+128),w
  3388  0606  0084               	movwf	4
  3389  0607  0825               	movf	??_sprintf^(0+128),w
  3390  0608  1383               	bcf	3,7	;select IRP bank0
  3391  0609  0080               	movwf	0
  3392  060A  3001               	movlw	1
  3393  060B  00A5               	movwf	??_sprintf^(0+128)
  3394  060C  0825               	movf	??_sprintf^(0+128),w
  3395  060D  07BD               	addwf	sprintf@sp^(0+128),f
  3396  060E                     l288:	
  3397                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1232:    }
  3398                           
  3399                           
  3400                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3401  060E  3001               	movlw	1
  3402  060F  02C2               	subwf	sprintf@c^(0+128),f
  3403  0610  0A42               	incf	sprintf@c^(0+128),w
  3404  0611  1903               	btfsc	3,2
  3405  0612  2E7F               	goto	l3910
  3406                           
  3407                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  3408  0613  0842               	movf	sprintf@c^(0+128),w
  3409  0614  00A5               	movwf	??_sprintf^(0+128)
  3410  0615  3001               	movlw	1
  3411  0616                     u6345:
  3412  0616  1003               	clrc
  3413  0617  0DA5               	rlf	??_sprintf^(0+128),f
  3414  0618  3EFF               	addlw	-1
  3415  0619  1D03               	skipz
  3416  061A  2E16               	goto	u6345
  3417  061B  1003               	clrc
  3418  061C  0D25               	rlf	??_sprintf^(0+128),w
  3419  061D  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3420  061E  0084               	movwf	4
  3421  061F  160A  118A  200A  120A  118A  	fcall	stringdir
  3422  0624  00F0               	movwf	___lldiv@divisor
  3423  0625  160A  118A  200A  120A  118A  	fcall	stringdir
  3424  062A  00F1               	movwf	___lldiv@divisor+1
  3425  062B  160A  118A  200A  120A  118A  	fcall	stringdir
  3426  0630  00F2               	movwf	___lldiv@divisor+2
  3427  0631  160A  118A  200A  120A  118A  	fcall	stringdir
  3428  0636  00F3               	movwf	___lldiv@divisor+3
  3429  0637  0836               	movf	(sprintf@val+3)^(0+128),w
  3430  0638  00F7               	movwf	___lldiv@dividend+3
  3431  0639  0835               	movf	(sprintf@val+2)^(0+128),w
  3432  063A  00F6               	movwf	___lldiv@dividend+2
  3433  063B  0834               	movf	(sprintf@val+1)^(0+128),w
  3434  063C  00F5               	movwf	___lldiv@dividend+1
  3435  063D  0833               	movf	sprintf@val^(0+128),w
  3436  063E  00F4               	movwf	___lldiv@dividend
  3437  063F  160A  158A  2577  120A  118A  	fcall	___lldiv
  3438  0644  0873               	movf	?___lldiv+3,w
  3439  0645  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  3440  0646  0872               	movf	?___lldiv+2,w
  3441  0647  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  3442  0648  0871               	movf	?___lldiv+1,w
  3443  0649  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  3444  064A  0870               	movf	?___lldiv,w
  3445  064B  00B9               	movwf	sprintf@tmpval^(0+128)
  3446                           
  3447                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3448  064C  3000               	movlw	0
  3449  064D  00F3               	movwf	___llmod@divisor+3
  3450  064E  3000               	movlw	0
  3451  064F  00F2               	movwf	___llmod@divisor+2
  3452  0650  3000               	movlw	0
  3453  0651  00F1               	movwf	___llmod@divisor+1
  3454  0652  300A               	movlw	10
  3455  0653  00F0               	movwf	___llmod@divisor
  3456  0654  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  3457  0655  00F7               	movwf	___llmod@dividend+3
  3458  0656  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  3459  0657  00F6               	movwf	___llmod@dividend+2
  3460  0658  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  3461  0659  00F5               	movwf	___llmod@dividend+1
  3462  065A  0839               	movf	sprintf@tmpval^(0+128),w
  3463  065B  00F4               	movwf	___llmod@dividend
  3464  065C  160A  158A  24D1  120A  118A  	fcall	___llmod
  3465  0661  0873               	movf	?___llmod+3,w
  3466  0662  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  3467  0663  0872               	movf	?___llmod+2,w
  3468  0664  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  3469  0665  0871               	movf	?___llmod+1,w
  3470  0666  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  3471  0667  0870               	movf	?___llmod,w
  3472  0668  00B9               	movwf	sprintf@tmpval^(0+128)
  3473                           
  3474                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3475  0669  0839               	movf	sprintf@tmpval^(0+128),w
  3476  066A  3E30               	addlw	48
  3477  066B  2E04               	goto	L6
  3478  066C                     l3904:
  3479                           
  3480                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3481  066C  3030               	movlw	48
  3482  066D  1683               	bsf	3,5	;RP0=1, select bank1
  3483  066E  1303               	bcf	3,6	;RP1=0, select bank1
  3484  066F  00A5               	movwf	??_sprintf^(0+128)
  3485  0670  083D               	movf	sprintf@sp^(0+128),w
  3486  0671  0084               	movwf	4
  3487  0672  0825               	movf	??_sprintf^(0+128),w
  3488  0673  1383               	bcf	3,7	;select IRP bank0
  3489  0674  0080               	movwf	0
  3490  0675  3001               	movlw	1
  3491  0676  00A5               	movwf	??_sprintf^(0+128)
  3492  0677  0825               	movf	??_sprintf^(0+128),w
  3493  0678  07BD               	addwf	sprintf@sp^(0+128),f
  3494                           
  3495                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3496  0679  30FF               	movlw	255
  3497  067A  07B7               	addwf	sprintf@eexp^(0+128),f
  3498  067B  1803               	skipnc
  3499  067C  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  3500  067D  30FF               	movlw	255
  3501  067E  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  3502  067F                     l3910:
  3503                           
  3504                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3505  067F  0838               	movf	(sprintf@eexp+1)^(0+128),w
  3506  0680  3A80               	xorlw	128
  3507  0681  00FF               	movwf	127
  3508  0682  3080               	movlw	128
  3509  0683  027F               	subwf	127,w
  3510  0684  1D03               	skipz
  3511  0685  2E88               	goto	u6365
  3512  0686  3001               	movlw	1
  3513  0687  0237               	subwf	sprintf@eexp^(0+128),w
  3514  0688                     u6365:
  3515  0688  1803               	skipnc
  3516  0689  2E6C               	goto	l3904
  3517                           
  3518                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3519  068A  1683               	bsf	3,5	;RP0=1, select bank1
  3520  068B  1303               	bcf	3,6	;RP1=0, select bank1
  3521  068C  0832               	movf	(sprintf@prec+1)^(0+128),w
  3522  068D  3A80               	xorlw	128
  3523  068E  00FF               	movwf	127
  3524  068F  3080               	movlw	128
  3525  0690  027F               	subwf	127,w
  3526  0691  1D03               	skipz
  3527  0692  2E95               	goto	u6375
  3528  0693  3009               	movlw	9
  3529  0694  0231               	subwf	sprintf@prec^(0+128),w
  3530  0695                     u6375:
  3531  0695  1C03               	skipc
  3532  0696  2E9B               	goto	l3916
  3533                           
  3534                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3535  0697  3008               	movlw	8
  3536  0698  1683               	bsf	3,5	;RP0=1, select bank1
  3537  0699  1303               	bcf	3,6	;RP1=0, select bank1
  3538  069A  2E9E               	goto	L7
  3539  069B                     l3916:
  3540                           
  3541                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3542  069B  1683               	bsf	3,5	;RP0=1, select bank1
  3543  069C  1303               	bcf	3,6	;RP1=0, select bank1
  3544  069D  0831               	movf	sprintf@prec^(0+128),w
  3545  069E                     L7:
  3546  069E  00A5               	movwf	??_sprintf^(0+128)
  3547  069F  0825               	movf	??_sprintf^(0+128),w
  3548  06A0  00C2               	movwf	sprintf@c^(0+128)
  3549                           
  3550                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3551  06A1  0842               	movf	sprintf@c^(0+128),w
  3552  06A2  00A5               	movwf	??_sprintf^(0+128)
  3553  06A3  01A6               	clrf	(??_sprintf^(0+128)+1)
  3554  06A4  0825               	movf	??_sprintf^(0+128),w
  3555  06A5  02B1               	subwf	sprintf@prec^(0+128),f
  3556  06A6  0826               	movf	(??_sprintf+1)^(0+128),w
  3557  06A7  1C03               	skipc
  3558  06A8  03B2               	decf	(sprintf@prec+1)^(0+128),f
  3559  06A9  02B2               	subwf	(sprintf@prec+1)^(0+128),f
  3560                           
  3561                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3562  06AA  0842               	movf	sprintf@c^(0+128),w
  3563  06AB  1903               	btfsc	3,2
  3564  06AC  2EB8               	goto	l3924
  3565                           
  3566                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3567  06AD  302E               	movlw	46
  3568  06AE  00A5               	movwf	??_sprintf^(0+128)
  3569  06AF  083D               	movf	sprintf@sp^(0+128),w
  3570  06B0  0084               	movwf	4
  3571  06B1  0825               	movf	??_sprintf^(0+128),w
  3572  06B2  1383               	bcf	3,7	;select IRP bank0
  3573  06B3  0080               	movwf	0
  3574  06B4  3001               	movlw	1
  3575  06B5  00A5               	movwf	??_sprintf^(0+128)
  3576  06B6  0825               	movf	??_sprintf^(0+128),w
  3577  06B7  07BD               	addwf	sprintf@sp^(0+128),f
  3578  06B8                     l3924:
  3579                           
  3580                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3581  06B8  0842               	movf	sprintf@c^(0+128),w
  3582  06B9  120A  158A  24D8  120A  118A  	fcall	_scale
  3583  06BE  0841               	movf	?_scale+3,w
  3584  06BF  1683               	bsf	3,5	;RP0=1, select bank1
  3585  06C0  00AD               	movwf	(_sprintf$882+3)^(0+128)
  3586  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  3587  06C2  0840               	movf	?_scale+2,w
  3588  06C3  1683               	bsf	3,5	;RP0=1, select bank1
  3589  06C4  00AC               	movwf	(_sprintf$882+2)^(0+128)
  3590  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  3591  06C6  083F               	movf	?_scale+1,w
  3592  06C7  1683               	bsf	3,5	;RP0=1, select bank1
  3593  06C8  00AB               	movwf	(_sprintf$882+1)^(0+128)
  3594  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  3595  06CA  083E               	movf	?_scale,w
  3596  06CB  1683               	bsf	3,5	;RP0=1, select bank1
  3597  06CC  00AA               	movwf	_sprintf$882^(0+128)
  3598                           
  3599                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3600  06CD  082D               	movf	(_sprintf$882+3)^(0+128),w
  3601  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  3602  06CF  00AB               	movwf	___flmul@a+3
  3603  06D0  1683               	bsf	3,5	;RP0=1, select bank1
  3604  06D1  082C               	movf	(_sprintf$882+2)^(0+128),w
  3605  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  3606  06D3  00AA               	movwf	___flmul@a+2
  3607  06D4  1683               	bsf	3,5	;RP0=1, select bank1
  3608  06D5  082B               	movf	(_sprintf$882+1)^(0+128),w
  3609  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  3610  06D7  00A9               	movwf	___flmul@a+1
  3611  06D8  1683               	bsf	3,5	;RP0=1, select bank1
  3612  06D9  082A               	movf	_sprintf$882^(0+128),w
  3613  06DA  1283               	bcf	3,5	;RP0=0, select bank0
  3614  06DB  00A8               	movwf	___flmul@a
  3615  06DC  1683               	bsf	3,5	;RP0=1, select bank1
  3616  06DD  0841               	movf	(sprintf@fval+3)^(0+128),w
  3617  06DE  1283               	bcf	3,5	;RP0=0, select bank0
  3618  06DF  00A7               	movwf	___flmul@b+3
  3619  06E0  1683               	bsf	3,5	;RP0=1, select bank1
  3620  06E1  0840               	movf	(sprintf@fval+2)^(0+128),w
  3621  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  3622  06E3  00A6               	movwf	___flmul@b+2
  3623  06E4  1683               	bsf	3,5	;RP0=1, select bank1
  3624  06E5  083F               	movf	(sprintf@fval+1)^(0+128),w
  3625  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  3626  06E7  00A5               	movwf	___flmul@b+1
  3627  06E8  1683               	bsf	3,5	;RP0=1, select bank1
  3628  06E9  083E               	movf	sprintf@fval^(0+128),w
  3629  06EA  1283               	bcf	3,5	;RP0=0, select bank0
  3630  06EB  00A4               	movwf	___flmul@b
  3631  06EC  120A  118A  2028  120A  118A  	fcall	___flmul
  3632  06F1  0827               	movf	?___flmul+3,w
  3633  06F2  00D4               	movwf	___fltol@f1+3
  3634  06F3  0826               	movf	?___flmul+2,w
  3635  06F4  00D3               	movwf	___fltol@f1+2
  3636  06F5  0825               	movf	?___flmul+1,w
  3637  06F6  00D2               	movwf	___fltol@f1+1
  3638  06F7  0824               	movf	?___flmul,w
  3639  06F8  00D1               	movwf	___fltol@f1
  3640  06F9  160A  118A  20D4  120A  118A  	fcall	___fltol
  3641  06FE  0854               	movf	?___fltol+3,w
  3642  06FF  1683               	bsf	3,5	;RP0=1, select bank1
  3643  0700  00B6               	movwf	(sprintf@val+3)^(0+128)
  3644  0701  1283               	bcf	3,5	;RP0=0, select bank0
  3645  0702  0853               	movf	?___fltol+2,w
  3646  0703  1683               	bsf	3,5	;RP0=1, select bank1
  3647  0704  00B5               	movwf	(sprintf@val+2)^(0+128)
  3648  0705  1283               	bcf	3,5	;RP0=0, select bank0
  3649  0706  0852               	movf	?___fltol+1,w
  3650  0707  1683               	bsf	3,5	;RP0=1, select bank1
  3651  0708  00B4               	movwf	(sprintf@val+1)^(0+128)
  3652  0709  1283               	bcf	3,5	;RP0=0, select bank0
  3653  070A  0851               	movf	?___fltol,w
  3654  070B  1683               	bsf	3,5	;RP0=1, select bank1
  3655  070C                     L8:
  3656  070C  00B3               	movwf	sprintf@val^(0+128)
  3657                           
  3658                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3659  070D  3001               	movlw	1
  3660  070E  02C2               	subwf	sprintf@c^(0+128),f
  3661  070F  0A42               	incf	sprintf@c^(0+128),w
  3662  0710  1903               	btfsc	3,2
  3663  0711  2FBE               	goto	l3944
  3664                           
  3665                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3666                           
  3667                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3668  0712  0842               	movf	sprintf@c^(0+128),w
  3669  0713  00A5               	movwf	??_sprintf^(0+128)
  3670  0714  3001               	movlw	1
  3671  0715                     u6395:
  3672  0715  1003               	clrc
  3673  0716  0DA5               	rlf	??_sprintf^(0+128),f
  3674  0717  3EFF               	addlw	-1
  3675  0718  1D03               	skipz
  3676  0719  2F15               	goto	u6395
  3677  071A  1003               	clrc
  3678  071B  0D25               	rlf	??_sprintf^(0+128),w
  3679  071C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3680  071D  0084               	movwf	4
  3681  071E  160A  118A  200A  120A  118A  	fcall	stringdir
  3682  0723  00F0               	movwf	___lldiv@divisor
  3683  0724  160A  118A  200A  120A  118A  	fcall	stringdir
  3684  0729  00F1               	movwf	___lldiv@divisor+1
  3685  072A  160A  118A  200A  120A  118A  	fcall	stringdir
  3686  072F  00F2               	movwf	___lldiv@divisor+2
  3687  0730  160A  118A  200A  120A  118A  	fcall	stringdir
  3688  0735  00F3               	movwf	___lldiv@divisor+3
  3689  0736  0836               	movf	(sprintf@val+3)^(0+128),w
  3690  0737  00F7               	movwf	___lldiv@dividend+3
  3691  0738  0835               	movf	(sprintf@val+2)^(0+128),w
  3692  0739  00F6               	movwf	___lldiv@dividend+2
  3693  073A  0834               	movf	(sprintf@val+1)^(0+128),w
  3694  073B  00F5               	movwf	___lldiv@dividend+1
  3695  073C  0833               	movf	sprintf@val^(0+128),w
  3696  073D  00F4               	movwf	___lldiv@dividend
  3697  073E  160A  158A  2577  120A  118A  	fcall	___lldiv
  3698  0743  0873               	movf	?___lldiv+3,w
  3699  0744  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  3700  0745  0872               	movf	?___lldiv+2,w
  3701  0746  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  3702  0747  0871               	movf	?___lldiv+1,w
  3703  0748  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  3704  0749  0870               	movf	?___lldiv,w
  3705  074A  00B9               	movwf	sprintf@tmpval^(0+128)
  3706                           
  3707                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3708  074B  3000               	movlw	0
  3709  074C  00F3               	movwf	___llmod@divisor+3
  3710  074D  3000               	movlw	0
  3711  074E  00F2               	movwf	___llmod@divisor+2
  3712  074F  3000               	movlw	0
  3713  0750  00F1               	movwf	___llmod@divisor+1
  3714  0751  300A               	movlw	10
  3715  0752  00F0               	movwf	___llmod@divisor
  3716  0753  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  3717  0754  00F7               	movwf	___llmod@dividend+3
  3718  0755  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  3719  0756  00F6               	movwf	___llmod@dividend+2
  3720  0757  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  3721  0758  00F5               	movwf	___llmod@dividend+1
  3722  0759  0839               	movf	sprintf@tmpval^(0+128),w
  3723  075A  00F4               	movwf	___llmod@dividend
  3724  075B  160A  158A  24D1  120A  118A  	fcall	___llmod
  3725  0760  0873               	movf	?___llmod+3,w
  3726  0761  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  3727  0762  0872               	movf	?___llmod+2,w
  3728  0763  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  3729  0764  0871               	movf	?___llmod+1,w
  3730  0765  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  3731  0766  0870               	movf	?___llmod,w
  3732  0767  00B9               	movwf	sprintf@tmpval^(0+128)
  3733                           
  3734                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3735  0768  0839               	movf	sprintf@tmpval^(0+128),w
  3736  0769  3E30               	addlw	48
  3737  076A  00A5               	movwf	??_sprintf^(0+128)
  3738  076B  083D               	movf	sprintf@sp^(0+128),w
  3739  076C  0084               	movwf	4
  3740  076D  0825               	movf	??_sprintf^(0+128),w
  3741  076E  1383               	bcf	3,7	;select IRP bank0
  3742  076F  0080               	movwf	0
  3743  0770  3001               	movlw	1
  3744  0771  00A5               	movwf	??_sprintf^(0+128)
  3745  0772  0825               	movf	??_sprintf^(0+128),w
  3746  0773  07BD               	addwf	sprintf@sp^(0+128),f
  3747                           
  3748                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3749  0774  0842               	movf	sprintf@c^(0+128),w
  3750  0775  00A5               	movwf	??_sprintf^(0+128)
  3751  0776  3001               	movlw	1
  3752  0777                     u6405:
  3753  0777  1003               	clrc
  3754  0778  0DA5               	rlf	??_sprintf^(0+128),f
  3755  0779  3EFF               	addlw	-1
  3756  077A  1D03               	skipz
  3757  077B  2F77               	goto	u6405
  3758  077C  1003               	clrc
  3759  077D  0D25               	rlf	??_sprintf^(0+128),w
  3760  077E  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3761  077F  0084               	movwf	4
  3762  0780  160A  118A  200A  120A  118A  	fcall	stringdir
  3763  0785  00F0               	movwf	___llmod@divisor
  3764  0786  160A  118A  200A  120A  118A  	fcall	stringdir
  3765  078B  00F1               	movwf	___llmod@divisor+1
  3766  078C  160A  118A  200A  120A  118A  	fcall	stringdir
  3767  0791  00F2               	movwf	___llmod@divisor+2
  3768  0792  160A  118A  200A  120A  118A  	fcall	stringdir
  3769  0797  00F3               	movwf	___llmod@divisor+3
  3770  0798  0836               	movf	(sprintf@val+3)^(0+128),w
  3771  0799  00F7               	movwf	___llmod@dividend+3
  3772  079A  0835               	movf	(sprintf@val+2)^(0+128),w
  3773  079B  00F6               	movwf	___llmod@dividend+2
  3774  079C  0834               	movf	(sprintf@val+1)^(0+128),w
  3775  079D  00F5               	movwf	___llmod@dividend+1
  3776  079E  0833               	movf	sprintf@val^(0+128),w
  3777  079F  00F4               	movwf	___llmod@dividend
  3778  07A0  160A  158A  24D1  120A  118A  	fcall	___llmod
  3779  07A5  0873               	movf	?___llmod+3,w
  3780  07A6  00B6               	movwf	(sprintf@val+3)^(0+128)
  3781  07A7  0872               	movf	?___llmod+2,w
  3782  07A8  00B5               	movwf	(sprintf@val+2)^(0+128)
  3783  07A9  0871               	movf	?___llmod+1,w
  3784  07AA  00B4               	movwf	(sprintf@val+1)^(0+128)
  3785  07AB  0870               	movf	?___llmod,w
  3786  07AC  2F0C               	goto	L8
  3787  07AD                     l3938:
  3788                           
  3789                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3790  07AD  3030               	movlw	48
  3791  07AE  00A5               	movwf	??_sprintf^(0+128)
  3792  07AF  083D               	movf	sprintf@sp^(0+128),w
  3793  07B0  0084               	movwf	4
  3794  07B1  0825               	movf	??_sprintf^(0+128),w
  3795  07B2  1383               	bcf	3,7	;select IRP bank0
  3796  07B3  0080               	movwf	0
  3797  07B4  3001               	movlw	1
  3798  07B5  00A5               	movwf	??_sprintf^(0+128)
  3799  07B6  0825               	movf	??_sprintf^(0+128),w
  3800  07B7  07BD               	addwf	sprintf@sp^(0+128),f
  3801                           
  3802                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3803  07B8  30FF               	movlw	255
  3804  07B9  07B1               	addwf	sprintf@prec^(0+128),f
  3805  07BA  1803               	skipnc
  3806  07BB  0AB2               	incf	(sprintf@prec+1)^(0+128),f
  3807  07BC  30FF               	movlw	255
  3808  07BD  07B2               	addwf	(sprintf@prec+1)^(0+128),f
  3809  07BE                     l3944:
  3810                           
  3811                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3812  07BE  0831               	movf	sprintf@prec^(0+128),w
  3813  07BF  0432               	iorwf	(sprintf@prec+1)^(0+128),w
  3814  07C0  1903               	btfsc	3,2
  3815  07C1  2B22               	goto	l3952
  3816  07C2  2FAD               	goto	l3938
  3817  07C3                     l3946:
  3818                           
  3819                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3820  07C3  082F               	movf	sprintf@flag^(0+128),w
  3821  07C4  3903               	andlw	3
  3822  07C5  1903               	btfsc	3,2
  3823  07C6  2B22               	goto	l3952
  3824                           
  3825                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3826  07C7  302D               	movlw	45
  3827  07C8                     L9:
  3828  07C8  00A5               	movwf	??_sprintf^(0+128)
  3829  07C9  083D               	movf	sprintf@sp^(0+128),w
  3830  07CA  0084               	movwf	4
  3831  07CB  0825               	movf	??_sprintf^(0+128),w
  3832  07CC  1383               	bcf	3,7	;select IRP bank0
  3833  07CD  0080               	movwf	0
  3834  07CE  3001               	movlw	1
  3835  07CF  00A5               	movwf	??_sprintf^(0+128)
  3836  07D0  0825               	movf	??_sprintf^(0+128),w
  3837  07D1  07BD               	addwf	sprintf@sp^(0+128),f
  3838  07D2  2B22               	goto	l3952
  3839  07D3                     l3954:
  3840                           
  3841                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3842  07D3  083D               	movf	sprintf@sp^(0+128),w
  3843  07D4  0084               	movwf	4
  3844  07D5  1383               	bcf	3,7	;select IRP bank0
  3845  07D6  0180               	clrf	0
  3846  07D7  0008               	return
  3847  07D8                     __end_of_sprintf:
  3848                           
  3849                           	psect	text8
  3850  0CD8                     __ptext8:	
  3851 ;; *************** function _scale *****************
  3852 ;; Defined at:
  3853 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  3854 ;; Parameters:    Size  Location     Type
  3855 ;;  scl             1    wreg     char 
  3856 ;; Auto vars:     Size  Location     Type
  3857 ;;  scl             1   48[BANK0 ] char 
  3858 ;; Return value:  Size  Location     Type
  3859 ;;                  4   30[BANK0 ] char 
  3860 ;; Registers used:
  3861 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3862 ;; Tracked objects:
  3863 ;;		On entry : 300/100
  3864 ;;		On exit  : 300/0
  3865 ;;		Unchanged: 0/0
  3866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3867 ;;      Params:         0       4       0       0       0
  3868 ;;      Locals:         0       5       0       0       0
  3869 ;;      Temps:          0      10       0       0       0
  3870 ;;      Totals:         0      19       0       0       0
  3871 ;;Total ram usage:       19 bytes
  3872 ;; Hardware stack levels used: 1
  3873 ;; Hardware stack levels required when called: 2
  3874 ;; This function calls:
  3875 ;;		___awdiv
  3876 ;;		___awmod
  3877 ;;		___flmul
  3878 ;; This function is called by:
  3879 ;;		_sprintf
  3880 ;; This function uses a non-reentrant model
  3881 ;;
  3882                           
  3883  0CD8                     _scale:	
  3884                           ;psect for function _scale
  3885                           
  3886                           
  3887                           ;incstack = 0
  3888                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3889                           ;scale@scl stored from wreg
  3890  0CD8  1283               	bcf	3,5	;RP0=0, select bank0
  3891  0CD9  00D0               	movwf	scale@scl
  3892                           
  3893                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3894  0CDA  1FD0               	btfss	scale@scl,7
  3895  0CDB  2E6F               	goto	l3254
  3896                           
  3897                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3898  0CDC  09D0               	comf	scale@scl,f
  3899  0CDD  0AD0               	incf	scale@scl,f
  3900                           
  3901                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3902  0CDE  0850               	movf	scale@scl,w
  3903  0CDF  3A80               	xorlw	128
  3904  0CE0  3E12               	addlw	-238
  3905  0CE1  1C03               	skipc
  3906  0CE2  2DBF               	goto	l3244
  3907                           
  3908                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3909  0CE3  300A               	movlw	10
  3910  0CE4  00F7               	movwf	___awdiv@divisor
  3911  0CE5  3000               	movlw	0
  3912  0CE6  00F8               	movwf	___awdiv@divisor+1
  3913  0CE7  0850               	movf	scale@scl,w
  3914  0CE8  00F2               	movwf	___awmod@dividend
  3915  0CE9  01F3               	clrf	___awmod@dividend+1
  3916  0CEA  1BF2               	btfsc	___awmod@dividend,7
  3917  0CEB  03F3               	decf	___awmod@dividend+1,f
  3918  0CEC  3064               	movlw	100
  3919  0CED  00F0               	movwf	___awmod@divisor
  3920  0CEE  3000               	movlw	0
  3921  0CEF  00F1               	movwf	___awmod@divisor+1
  3922  0CF0  160A  158A  2486  120A  158A  	fcall	___awmod
  3923  0CF5  0871               	movf	?___awmod+1,w
  3924  0CF6  00FA               	movwf	___awdiv@dividend+1
  3925  0CF7  0870               	movf	?___awmod,w
  3926  0CF8  00F9               	movwf	___awdiv@dividend
  3927  0CF9  160A  158A  251D  120A  158A  	fcall	___awdiv
  3928  0CFE  0877               	movf	?___awdiv,w
  3929  0CFF  00C2               	movwf	??_scale
  3930  0D00  3001               	movlw	1
  3931  0D01                     u4765:
  3932  0D01  1003               	clrc
  3933  0D02  0DC2               	rlf	??_scale,f
  3934  0D03  3EFF               	addlw	-1
  3935  0D04  1D03               	skipz
  3936  0D05  2D01               	goto	u4765
  3937  0D06  1003               	clrc
  3938  0D07  0D42               	rlf	??_scale,w
  3939  0D08  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3940  0D09  0084               	movwf	4
  3941  0D0A  160A  118A  200A  120A  158A  	fcall	stringdir
  3942  0D0F  00C3               	movwf	??_scale+1
  3943  0D10  160A  118A  200A  120A  158A  	fcall	stringdir
  3944  0D15  00C4               	movwf	??_scale+2
  3945  0D16  160A  118A  200A  120A  158A  	fcall	stringdir
  3946  0D1B  00C5               	movwf	??_scale+3
  3947  0D1C  160A  118A  200A  120A  158A  	fcall	stringdir
  3948  0D21  00C6               	movwf	??_scale+4
  3949  0D22  0846               	movf	??_scale+4,w
  3950  0D23  00A7               	movwf	___flmul@b+3
  3951  0D24  0845               	movf	??_scale+3,w
  3952  0D25  00A6               	movwf	___flmul@b+2
  3953  0D26  0844               	movf	??_scale+2,w
  3954  0D27  00A5               	movwf	___flmul@b+1
  3955  0D28  0843               	movf	??_scale+1,w
  3956  0D29  00A4               	movwf	___flmul@b
  3957  0D2A  3064               	movlw	100
  3958  0D2B  00F7               	movwf	___awdiv@divisor
  3959  0D2C  3000               	movlw	0
  3960  0D2D  00F8               	movwf	___awdiv@divisor+1
  3961  0D2E  0850               	movf	scale@scl,w
  3962  0D2F  00F9               	movwf	___awdiv@dividend
  3963  0D30  01FA               	clrf	___awdiv@dividend+1
  3964  0D31  1BF9               	btfsc	___awdiv@dividend,7
  3965  0D32  03FA               	decf	___awdiv@dividend+1,f
  3966  0D33  160A  158A  251D  120A  158A  	fcall	___awdiv
  3967  0D38  0877               	movf	?___awdiv,w
  3968  0D39  00C7               	movwf	??_scale+5
  3969  0D3A  3001               	movlw	1
  3970  0D3B                     u4775:
  3971  0D3B  1003               	clrc
  3972  0D3C  0DC7               	rlf	??_scale+5,f
  3973  0D3D  3EFF               	addlw	-1
  3974  0D3E  1D03               	skipz
  3975  0D3F  2D3B               	goto	u4775
  3976  0D40  1003               	clrc
  3977  0D41  0D47               	rlf	??_scale+5,w
  3978  0D42  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3979  0D43  0084               	movwf	4
  3980  0D44  160A  118A  200A  120A  158A  	fcall	stringdir
  3981  0D49  00C8               	movwf	??_scale+6
  3982  0D4A  160A  118A  200A  120A  158A  	fcall	stringdir
  3983  0D4F  00C9               	movwf	??_scale+7
  3984  0D50  160A  118A  200A  120A  158A  	fcall	stringdir
  3985  0D55  00CA               	movwf	??_scale+8
  3986  0D56  160A  118A  200A  120A  158A  	fcall	stringdir
  3987  0D5B  00CB               	movwf	??_scale+9
  3988  0D5C  084B               	movf	??_scale+9,w
  3989  0D5D  00AB               	movwf	___flmul@a+3
  3990  0D5E  084A               	movf	??_scale+8,w
  3991  0D5F  00AA               	movwf	___flmul@a+2
  3992  0D60  0849               	movf	??_scale+7,w
  3993  0D61  00A9               	movwf	___flmul@a+1
  3994  0D62  0848               	movf	??_scale+6,w
  3995  0D63  00A8               	movwf	___flmul@a
  3996  0D64  120A  118A  2028  120A  158A  	fcall	___flmul
  3997  0D69  0827               	movf	?___flmul+3,w
  3998  0D6A  00CF               	movwf	_scale$881+3
  3999  0D6B  0826               	movf	?___flmul+2,w
  4000  0D6C  00CE               	movwf	_scale$881+2
  4001  0D6D  0825               	movf	?___flmul+1,w
  4002  0D6E  00CD               	movwf	_scale$881+1
  4003  0D6F  0824               	movf	?___flmul,w
  4004  0D70  00CC               	movwf	_scale$881
  4005                           
  4006                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4007  0D71  300A               	movlw	10
  4008  0D72  00F0               	movwf	___awmod@divisor
  4009  0D73  3000               	movlw	0
  4010  0D74  00F1               	movwf	___awmod@divisor+1
  4011  0D75  0850               	movf	scale@scl,w
  4012  0D76  00F2               	movwf	___awmod@dividend
  4013  0D77  01F3               	clrf	___awmod@dividend+1
  4014  0D78  1BF2               	btfsc	___awmod@dividend,7
  4015  0D79  03F3               	decf	___awmod@dividend+1,f
  4016  0D7A  160A  158A  2486  120A  158A  	fcall	___awmod
  4017  0D7F  0870               	movf	?___awmod,w
  4018  0D80  00C2               	movwf	??_scale
  4019  0D81  3001               	movlw	1
  4020  0D82                     u4785:
  4021  0D82  1003               	clrc
  4022  0D83  0DC2               	rlf	??_scale,f
  4023  0D84  3EFF               	addlw	-1
  4024  0D85  1D03               	skipz
  4025  0D86  2D82               	goto	u4785
  4026  0D87  1003               	clrc
  4027  0D88  0D42               	rlf	??_scale,w
  4028  0D89  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4029  0D8A  0084               	movwf	4
  4030  0D8B  160A  118A  200A  120A  158A  	fcall	stringdir
  4031  0D90  00C3               	movwf	??_scale+1
  4032  0D91  160A  118A  200A  120A  158A  	fcall	stringdir
  4033  0D96  00C4               	movwf	??_scale+2
  4034  0D97  160A  118A  200A  120A  158A  	fcall	stringdir
  4035  0D9C  00C5               	movwf	??_scale+3
  4036  0D9D  160A  118A  200A  120A  158A  	fcall	stringdir
  4037  0DA2  00C6               	movwf	??_scale+4
  4038  0DA3  0846               	movf	??_scale+4,w
  4039  0DA4  00A7               	movwf	___flmul@b+3
  4040  0DA5  0845               	movf	??_scale+3,w
  4041  0DA6  00A6               	movwf	___flmul@b+2
  4042  0DA7  0844               	movf	??_scale+2,w
  4043  0DA8  00A5               	movwf	___flmul@b+1
  4044  0DA9  0843               	movf	??_scale+1,w
  4045  0DAA  00A4               	movwf	___flmul@b
  4046  0DAB  084F               	movf	_scale$881+3,w
  4047  0DAC  00AB               	movwf	___flmul@a+3
  4048  0DAD  084E               	movf	_scale$881+2,w
  4049  0DAE  00AA               	movwf	___flmul@a+2
  4050  0DAF  084D               	movf	_scale$881+1,w
  4051  0DB0  00A9               	movwf	___flmul@a+1
  4052  0DB1  084C               	movf	_scale$881,w
  4053  0DB2  00A8               	movwf	___flmul@a
  4054  0DB3  120A  118A  2028   	fcall	___flmul
  4055  0DB6  0827               	movf	?___flmul+3,w
  4056  0DB7  00C1               	movwf	?_scale+3
  4057  0DB8  0826               	movf	?___flmul+2,w
  4058  0DB9  00C0               	movwf	?_scale+2
  4059  0DBA  0825               	movf	?___flmul+1,w
  4060  0DBB  00BF               	movwf	?_scale+1
  4061  0DBC  0824               	movf	?___flmul,w
  4062  0DBD  00BE               	movwf	?_scale
  4063  0DBE  0008               	return
  4064  0DBF                     l3244:
  4065  0DBF  0850               	movf	scale@scl,w
  4066  0DC0  3A80               	xorlw	128
  4067  0DC1  3E75               	addlw	-139
  4068  0DC2  1C03               	skipc
  4069  0DC3  2E44               	goto	l3250
  4070                           
  4071                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4072  0DC4  300A               	movlw	10
  4073  0DC5  00F0               	movwf	___awmod@divisor
  4074  0DC6  3000               	movlw	0
  4075  0DC7  00F1               	movwf	___awmod@divisor+1
  4076  0DC8  0850               	movf	scale@scl,w
  4077  0DC9  00F2               	movwf	___awmod@dividend
  4078  0DCA  01F3               	clrf	___awmod@dividend+1
  4079  0DCB  1BF2               	btfsc	___awmod@dividend,7
  4080  0DCC  03F3               	decf	___awmod@dividend+1,f
  4081  0DCD  160A  158A  2486  120A  158A  	fcall	___awmod
  4082  0DD2  0870               	movf	?___awmod,w
  4083  0DD3  00C2               	movwf	??_scale
  4084  0DD4  3001               	movlw	1
  4085  0DD5                     u4805:
  4086  0DD5  1003               	clrc
  4087  0DD6  0DC2               	rlf	??_scale,f
  4088  0DD7  3EFF               	addlw	-1
  4089  0DD8  1D03               	skipz
  4090  0DD9  2DD5               	goto	u4805
  4091  0DDA  1003               	clrc
  4092  0DDB  0D42               	rlf	??_scale,w
  4093  0DDC  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4094  0DDD  0084               	movwf	4
  4095  0DDE  160A  118A  200A  120A  158A  	fcall	stringdir
  4096  0DE3  00C3               	movwf	??_scale+1
  4097  0DE4  160A  118A  200A  120A  158A  	fcall	stringdir
  4098  0DE9  00C4               	movwf	??_scale+2
  4099  0DEA  160A  118A  200A  120A  158A  	fcall	stringdir
  4100  0DEF  00C5               	movwf	??_scale+3
  4101  0DF0  160A  118A  200A  120A  158A  	fcall	stringdir
  4102  0DF5  00C6               	movwf	??_scale+4
  4103  0DF6  0846               	movf	??_scale+4,w
  4104  0DF7  00A7               	movwf	___flmul@b+3
  4105  0DF8  0845               	movf	??_scale+3,w
  4106  0DF9  00A6               	movwf	___flmul@b+2
  4107  0DFA  0844               	movf	??_scale+2,w
  4108  0DFB  00A5               	movwf	___flmul@b+1
  4109  0DFC  0843               	movf	??_scale+1,w
  4110  0DFD  00A4               	movwf	___flmul@b
  4111  0DFE  300A               	movlw	10
  4112  0DFF  00F7               	movwf	___awdiv@divisor
  4113  0E00  3000               	movlw	0
  4114  0E01  00F8               	movwf	___awdiv@divisor+1
  4115  0E02  0850               	movf	scale@scl,w
  4116  0E03  00F9               	movwf	___awdiv@dividend
  4117  0E04  01FA               	clrf	___awdiv@dividend+1
  4118  0E05  1BF9               	btfsc	___awdiv@dividend,7
  4119  0E06  03FA               	decf	___awdiv@dividend+1,f
  4120  0E07  160A  158A  251D  120A  158A  	fcall	___awdiv
  4121  0E0C  0877               	movf	?___awdiv,w
  4122  0E0D  00C7               	movwf	??_scale+5
  4123  0E0E  3001               	movlw	1
  4124  0E0F                     u4815:
  4125  0E0F  1003               	clrc
  4126  0E10  0DC7               	rlf	??_scale+5,f
  4127  0E11  3EFF               	addlw	-1
  4128  0E12  1D03               	skipz
  4129  0E13  2E0F               	goto	u4815
  4130  0E14  1003               	clrc
  4131  0E15  0D47               	rlf	??_scale+5,w
  4132  0E16  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4133  0E17  0084               	movwf	4
  4134  0E18  160A  118A  200A  120A  158A  	fcall	stringdir
  4135  0E1D  00C8               	movwf	??_scale+6
  4136  0E1E  160A  118A  200A  120A  158A  	fcall	stringdir
  4137  0E23  00C9               	movwf	??_scale+7
  4138  0E24  160A  118A  200A  120A  158A  	fcall	stringdir
  4139  0E29  00CA               	movwf	??_scale+8
  4140  0E2A  160A  118A  200A  120A  158A  	fcall	stringdir
  4141  0E2F  00CB               	movwf	??_scale+9
  4142  0E30  084B               	movf	??_scale+9,w
  4143  0E31  00AB               	movwf	___flmul@a+3
  4144  0E32  084A               	movf	??_scale+8,w
  4145  0E33  00AA               	movwf	___flmul@a+2
  4146  0E34  0849               	movf	??_scale+7,w
  4147  0E35  00A9               	movwf	___flmul@a+1
  4148  0E36  0848               	movf	??_scale+6,w
  4149  0E37  00A8               	movwf	___flmul@a
  4150  0E38  120A  118A  2028   	fcall	___flmul
  4151  0E3B  0827               	movf	?___flmul+3,w
  4152  0E3C  00C1               	movwf	?_scale+3
  4153  0E3D  0826               	movf	?___flmul+2,w
  4154  0E3E  00C0               	movwf	?_scale+2
  4155  0E3F  0825               	movf	?___flmul+1,w
  4156  0E40  00BF               	movwf	?_scale+1
  4157  0E41  0824               	movf	?___flmul,w
  4158  0E42  00BE               	movwf	?_scale
  4159  0E43  0008               	return
  4160  0E44                     l3250:
  4161                           
  4162                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4163  0E44  0850               	movf	scale@scl,w
  4164  0E45  00C2               	movwf	??_scale
  4165  0E46  3001               	movlw	1
  4166  0E47                     u4825:
  4167  0E47  1003               	clrc
  4168  0E48  0DC2               	rlf	??_scale,f
  4169  0E49  3EFF               	addlw	-1
  4170  0E4A  1D03               	skipz
  4171  0E4B  2E47               	goto	u4825
  4172  0E4C  1003               	clrc
  4173  0E4D  0D42               	rlf	??_scale,w
  4174  0E4E  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4175  0E4F  0084               	movwf	4
  4176  0E50  160A  118A  200A  120A  158A  	fcall	stringdir
  4177  0E55  00C3               	movwf	??_scale+1
  4178  0E56  160A  118A  200A  120A  158A  	fcall	stringdir
  4179  0E5B  00C4               	movwf	??_scale+2
  4180  0E5C  160A  118A  200A  120A  158A  	fcall	stringdir
  4181  0E61  00C5               	movwf	??_scale+3
  4182  0E62  160A  118A  200A   	fcall	stringdir
  4183  0E65  00C6               	movwf	??_scale+4
  4184  0E66  0846               	movf	??_scale+4,w
  4185  0E67  00C1               	movwf	?_scale+3
  4186  0E68  0845               	movf	??_scale+3,w
  4187  0E69  00C0               	movwf	?_scale+2
  4188  0E6A  0844               	movf	??_scale+2,w
  4189  0E6B  00BF               	movwf	?_scale+1
  4190  0E6C  0843               	movf	??_scale+1,w
  4191  0E6D  00BE               	movwf	?_scale
  4192  0E6E  0008               	return
  4193  0E6F                     l3254:
  4194                           
  4195                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4196  0E6F  0850               	movf	scale@scl,w
  4197  0E70  3A80               	xorlw	128
  4198  0E71  3E12               	addlw	-238
  4199  0E72  1C03               	skipc
  4200  0E73  2F50               	goto	l3262
  4201                           
  4202                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4203  0E74  300A               	movlw	10
  4204  0E75  00F7               	movwf	___awdiv@divisor
  4205  0E76  3000               	movlw	0
  4206  0E77  00F8               	movwf	___awdiv@divisor+1
  4207  0E78  0850               	movf	scale@scl,w
  4208  0E79  00F2               	movwf	___awmod@dividend
  4209  0E7A  01F3               	clrf	___awmod@dividend+1
  4210  0E7B  1BF2               	btfsc	___awmod@dividend,7
  4211  0E7C  03F3               	decf	___awmod@dividend+1,f
  4212  0E7D  3064               	movlw	100
  4213  0E7E  00F0               	movwf	___awmod@divisor
  4214  0E7F  3000               	movlw	0
  4215  0E80  00F1               	movwf	___awmod@divisor+1
  4216  0E81  160A  158A  2486  120A  158A  	fcall	___awmod
  4217  0E86  0871               	movf	?___awmod+1,w
  4218  0E87  00FA               	movwf	___awdiv@dividend+1
  4219  0E88  0870               	movf	?___awmod,w
  4220  0E89  00F9               	movwf	___awdiv@dividend
  4221  0E8A  160A  158A  251D  120A  158A  	fcall	___awdiv
  4222  0E8F  0877               	movf	?___awdiv,w
  4223  0E90  00C2               	movwf	??_scale
  4224  0E91  3001               	movlw	1
  4225  0E92                     u4845:
  4226  0E92  1003               	clrc
  4227  0E93  0DC2               	rlf	??_scale,f
  4228  0E94  3EFF               	addlw	-1
  4229  0E95  1D03               	skipz
  4230  0E96  2E92               	goto	u4845
  4231  0E97  1003               	clrc
  4232  0E98  0D42               	rlf	??_scale,w
  4233  0E99  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4234  0E9A  0084               	movwf	4
  4235  0E9B  160A  118A  200A  120A  158A  	fcall	stringdir
  4236  0EA0  00C3               	movwf	??_scale+1
  4237  0EA1  160A  118A  200A  120A  158A  	fcall	stringdir
  4238  0EA6  00C4               	movwf	??_scale+2
  4239  0EA7  160A  118A  200A  120A  158A  	fcall	stringdir
  4240  0EAC  00C5               	movwf	??_scale+3
  4241  0EAD  160A  118A  200A  120A  158A  	fcall	stringdir
  4242  0EB2  00C6               	movwf	??_scale+4
  4243  0EB3  0846               	movf	??_scale+4,w
  4244  0EB4  00A7               	movwf	___flmul@b+3
  4245  0EB5  0845               	movf	??_scale+3,w
  4246  0EB6  00A6               	movwf	___flmul@b+2
  4247  0EB7  0844               	movf	??_scale+2,w
  4248  0EB8  00A5               	movwf	___flmul@b+1
  4249  0EB9  0843               	movf	??_scale+1,w
  4250  0EBA  00A4               	movwf	___flmul@b
  4251  0EBB  3064               	movlw	100
  4252  0EBC  00F7               	movwf	___awdiv@divisor
  4253  0EBD  3000               	movlw	0
  4254  0EBE  00F8               	movwf	___awdiv@divisor+1
  4255  0EBF  0850               	movf	scale@scl,w
  4256  0EC0  00F9               	movwf	___awdiv@dividend
  4257  0EC1  01FA               	clrf	___awdiv@dividend+1
  4258  0EC2  1BF9               	btfsc	___awdiv@dividend,7
  4259  0EC3  03FA               	decf	___awdiv@dividend+1,f
  4260  0EC4  160A  158A  251D  120A  158A  	fcall	___awdiv
  4261  0EC9  0877               	movf	?___awdiv,w
  4262  0ECA  00C7               	movwf	??_scale+5
  4263  0ECB  3001               	movlw	1
  4264  0ECC                     u4855:
  4265  0ECC  1003               	clrc
  4266  0ECD  0DC7               	rlf	??_scale+5,f
  4267  0ECE  3EFF               	addlw	-1
  4268  0ECF  1D03               	skipz
  4269  0ED0  2ECC               	goto	u4855
  4270  0ED1  1003               	clrc
  4271  0ED2  0D47               	rlf	??_scale+5,w
  4272  0ED3  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4273  0ED4  0084               	movwf	4
  4274  0ED5  160A  118A  200A  120A  158A  	fcall	stringdir
  4275  0EDA  00C8               	movwf	??_scale+6
  4276  0EDB  160A  118A  200A  120A  158A  	fcall	stringdir
  4277  0EE0  00C9               	movwf	??_scale+7
  4278  0EE1  160A  118A  200A  120A  158A  	fcall	stringdir
  4279  0EE6  00CA               	movwf	??_scale+8
  4280  0EE7  160A  118A  200A  120A  158A  	fcall	stringdir
  4281  0EEC  00CB               	movwf	??_scale+9
  4282  0EED  084B               	movf	??_scale+9,w
  4283  0EEE  00AB               	movwf	___flmul@a+3
  4284  0EEF  084A               	movf	??_scale+8,w
  4285  0EF0  00AA               	movwf	___flmul@a+2
  4286  0EF1  0849               	movf	??_scale+7,w
  4287  0EF2  00A9               	movwf	___flmul@a+1
  4288  0EF3  0848               	movf	??_scale+6,w
  4289  0EF4  00A8               	movwf	___flmul@a
  4290  0EF5  120A  118A  2028  120A  158A  	fcall	___flmul
  4291  0EFA  0827               	movf	?___flmul+3,w
  4292  0EFB  00CF               	movwf	_scale$881+3
  4293  0EFC  0826               	movf	?___flmul+2,w
  4294  0EFD  00CE               	movwf	_scale$881+2
  4295  0EFE  0825               	movf	?___flmul+1,w
  4296  0EFF  00CD               	movwf	_scale$881+1
  4297  0F00  0824               	movf	?___flmul,w
  4298  0F01  00CC               	movwf	_scale$881
  4299                           
  4300                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4301  0F02  300A               	movlw	10
  4302  0F03  00F0               	movwf	___awmod@divisor
  4303  0F04  3000               	movlw	0
  4304  0F05  00F1               	movwf	___awmod@divisor+1
  4305  0F06  0850               	movf	scale@scl,w
  4306  0F07  00F2               	movwf	___awmod@dividend
  4307  0F08  01F3               	clrf	___awmod@dividend+1
  4308  0F09  1BF2               	btfsc	___awmod@dividend,7
  4309  0F0A  03F3               	decf	___awmod@dividend+1,f
  4310  0F0B  160A  158A  2486  120A  158A  	fcall	___awmod
  4311  0F10  0870               	movf	?___awmod,w
  4312  0F11  00C2               	movwf	??_scale
  4313  0F12  3001               	movlw	1
  4314  0F13                     u4865:
  4315  0F13  1003               	clrc
  4316  0F14  0DC2               	rlf	??_scale,f
  4317  0F15  3EFF               	addlw	-1
  4318  0F16  1D03               	skipz
  4319  0F17  2F13               	goto	u4865
  4320  0F18  1003               	clrc
  4321  0F19  0D42               	rlf	??_scale,w
  4322  0F1A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4323  0F1B  0084               	movwf	4
  4324  0F1C  160A  118A  200A  120A  158A  	fcall	stringdir
  4325  0F21  00C3               	movwf	??_scale+1
  4326  0F22  160A  118A  200A  120A  158A  	fcall	stringdir
  4327  0F27  00C4               	movwf	??_scale+2
  4328  0F28  160A  118A  200A  120A  158A  	fcall	stringdir
  4329  0F2D  00C5               	movwf	??_scale+3
  4330  0F2E  160A  118A  200A  120A  158A  	fcall	stringdir
  4331  0F33  00C6               	movwf	??_scale+4
  4332  0F34  0846               	movf	??_scale+4,w
  4333  0F35  00A7               	movwf	___flmul@b+3
  4334  0F36  0845               	movf	??_scale+3,w
  4335  0F37  00A6               	movwf	___flmul@b+2
  4336  0F38  0844               	movf	??_scale+2,w
  4337  0F39  00A5               	movwf	___flmul@b+1
  4338  0F3A  0843               	movf	??_scale+1,w
  4339  0F3B  00A4               	movwf	___flmul@b
  4340  0F3C  084F               	movf	_scale$881+3,w
  4341  0F3D  00AB               	movwf	___flmul@a+3
  4342  0F3E  084E               	movf	_scale$881+2,w
  4343  0F3F  00AA               	movwf	___flmul@a+2
  4344  0F40  084D               	movf	_scale$881+1,w
  4345  0F41  00A9               	movwf	___flmul@a+1
  4346  0F42  084C               	movf	_scale$881,w
  4347  0F43  00A8               	movwf	___flmul@a
  4348  0F44  120A  118A  2028   	fcall	___flmul
  4349  0F47  0827               	movf	?___flmul+3,w
  4350  0F48  00C1               	movwf	?_scale+3
  4351  0F49  0826               	movf	?___flmul+2,w
  4352  0F4A  00C0               	movwf	?_scale+2
  4353  0F4B  0825               	movf	?___flmul+1,w
  4354  0F4C  00BF               	movwf	?_scale+1
  4355  0F4D  0824               	movf	?___flmul,w
  4356  0F4E  00BE               	movwf	?_scale
  4357  0F4F  0008               	return
  4358  0F50                     l3262:
  4359  0F50  0850               	movf	scale@scl,w
  4360  0F51  3A80               	xorlw	128
  4361  0F52  3E75               	addlw	-139
  4362  0F53  1C03               	skipc
  4363  0F54  2FD5               	goto	l3268
  4364                           
  4365                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4366  0F55  300A               	movlw	10
  4367  0F56  00F0               	movwf	___awmod@divisor
  4368  0F57  3000               	movlw	0
  4369  0F58  00F1               	movwf	___awmod@divisor+1
  4370  0F59  0850               	movf	scale@scl,w
  4371  0F5A  00F2               	movwf	___awmod@dividend
  4372  0F5B  01F3               	clrf	___awmod@dividend+1
  4373  0F5C  1BF2               	btfsc	___awmod@dividend,7
  4374  0F5D  03F3               	decf	___awmod@dividend+1,f
  4375  0F5E  160A  158A  2486  120A  158A  	fcall	___awmod
  4376  0F63  0870               	movf	?___awmod,w
  4377  0F64  00C2               	movwf	??_scale
  4378  0F65  3001               	movlw	1
  4379  0F66                     u4885:
  4380  0F66  1003               	clrc
  4381  0F67  0DC2               	rlf	??_scale,f
  4382  0F68  3EFF               	addlw	-1
  4383  0F69  1D03               	skipz
  4384  0F6A  2F66               	goto	u4885
  4385  0F6B  1003               	clrc
  4386  0F6C  0D42               	rlf	??_scale,w
  4387  0F6D  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4388  0F6E  0084               	movwf	4
  4389  0F6F  160A  118A  200A  120A  158A  	fcall	stringdir
  4390  0F74  00C3               	movwf	??_scale+1
  4391  0F75  160A  118A  200A  120A  158A  	fcall	stringdir
  4392  0F7A  00C4               	movwf	??_scale+2
  4393  0F7B  160A  118A  200A  120A  158A  	fcall	stringdir
  4394  0F80  00C5               	movwf	??_scale+3
  4395  0F81  160A  118A  200A  120A  158A  	fcall	stringdir
  4396  0F86  00C6               	movwf	??_scale+4
  4397  0F87  0846               	movf	??_scale+4,w
  4398  0F88  00A7               	movwf	___flmul@b+3
  4399  0F89  0845               	movf	??_scale+3,w
  4400  0F8A  00A6               	movwf	___flmul@b+2
  4401  0F8B  0844               	movf	??_scale+2,w
  4402  0F8C  00A5               	movwf	___flmul@b+1
  4403  0F8D  0843               	movf	??_scale+1,w
  4404  0F8E  00A4               	movwf	___flmul@b
  4405  0F8F  300A               	movlw	10
  4406  0F90  00F7               	movwf	___awdiv@divisor
  4407  0F91  3000               	movlw	0
  4408  0F92  00F8               	movwf	___awdiv@divisor+1
  4409  0F93  0850               	movf	scale@scl,w
  4410  0F94  00F9               	movwf	___awdiv@dividend
  4411  0F95  01FA               	clrf	___awdiv@dividend+1
  4412  0F96  1BF9               	btfsc	___awdiv@dividend,7
  4413  0F97  03FA               	decf	___awdiv@dividend+1,f
  4414  0F98  160A  158A  251D  120A  158A  	fcall	___awdiv
  4415  0F9D  0877               	movf	?___awdiv,w
  4416  0F9E  00C7               	movwf	??_scale+5
  4417  0F9F  3001               	movlw	1
  4418  0FA0                     u4895:
  4419  0FA0  1003               	clrc
  4420  0FA1  0DC7               	rlf	??_scale+5,f
  4421  0FA2  3EFF               	addlw	-1
  4422  0FA3  1D03               	skipz
  4423  0FA4  2FA0               	goto	u4895
  4424  0FA5  1003               	clrc
  4425  0FA6  0D47               	rlf	??_scale+5,w
  4426  0FA7  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4427  0FA8  0084               	movwf	4
  4428  0FA9  160A  118A  200A  120A  158A  	fcall	stringdir
  4429  0FAE  00C8               	movwf	??_scale+6
  4430  0FAF  160A  118A  200A  120A  158A  	fcall	stringdir
  4431  0FB4  00C9               	movwf	??_scale+7
  4432  0FB5  160A  118A  200A  120A  158A  	fcall	stringdir
  4433  0FBA  00CA               	movwf	??_scale+8
  4434  0FBB  160A  118A  200A  120A  158A  	fcall	stringdir
  4435  0FC0  00CB               	movwf	??_scale+9
  4436  0FC1  084B               	movf	??_scale+9,w
  4437  0FC2  00AB               	movwf	___flmul@a+3
  4438  0FC3  084A               	movf	??_scale+8,w
  4439  0FC4  00AA               	movwf	___flmul@a+2
  4440  0FC5  0849               	movf	??_scale+7,w
  4441  0FC6  00A9               	movwf	___flmul@a+1
  4442  0FC7  0848               	movf	??_scale+6,w
  4443  0FC8  00A8               	movwf	___flmul@a
  4444  0FC9  120A  118A  2028   	fcall	___flmul
  4445  0FCC  0827               	movf	?___flmul+3,w
  4446  0FCD  00C1               	movwf	?_scale+3
  4447  0FCE  0826               	movf	?___flmul+2,w
  4448  0FCF  00C0               	movwf	?_scale+2
  4449  0FD0  0825               	movf	?___flmul+1,w
  4450  0FD1  00BF               	movwf	?_scale+1
  4451  0FD2  0824               	movf	?___flmul,w
  4452  0FD3  00BE               	movwf	?_scale
  4453  0FD4  0008               	return
  4454  0FD5                     l3268:
  4455                           
  4456                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4457  0FD5  0850               	movf	scale@scl,w
  4458  0FD6  00C2               	movwf	??_scale
  4459  0FD7  3001               	movlw	1
  4460  0FD8                     u4905:
  4461  0FD8  1003               	clrc
  4462  0FD9  0DC2               	rlf	??_scale,f
  4463  0FDA  3EFF               	addlw	-1
  4464  0FDB  1D03               	skipz
  4465  0FDC  2FD8               	goto	u4905
  4466  0FDD  1003               	clrc
  4467  0FDE  0D42               	rlf	??_scale,w
  4468  0FDF  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4469  0FE0  0084               	movwf	4
  4470  0FE1  160A  118A  200A  120A  158A  	fcall	stringdir
  4471  0FE6  00C3               	movwf	??_scale+1
  4472  0FE7  160A  118A  200A  120A  158A  	fcall	stringdir
  4473  0FEC  00C4               	movwf	??_scale+2
  4474  0FED  160A  118A  200A  120A  158A  	fcall	stringdir
  4475  0FF2  00C5               	movwf	??_scale+3
  4476  0FF3  160A  118A  200A   	fcall	stringdir
  4477  0FF6  00C6               	movwf	??_scale+4
  4478  0FF7  0846               	movf	??_scale+4,w
  4479  0FF8  00C1               	movwf	?_scale+3
  4480  0FF9  0845               	movf	??_scale+3,w
  4481  0FFA  00C0               	movwf	?_scale+2
  4482  0FFB  0844               	movf	??_scale+2,w
  4483  0FFC  00BF               	movwf	?_scale+1
  4484  0FFD  0843               	movf	??_scale+1,w
  4485  0FFE  00BE               	movwf	?_scale
  4486  0FFF  0008               	return
  4487  1000                     __end_of_scale:
  4488                           
  4489                           	psect	text9
  4490  1C86                     __ptext9:	
  4491 ;; *************** function ___awmod *****************
  4492 ;; Defined at:
  4493 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awmod.c"
  4494 ;; Parameters:    Size  Location     Type
  4495 ;;  divisor         2    0[COMMON] int 
  4496 ;;  dividend        2    2[COMMON] int 
  4497 ;; Auto vars:     Size  Location     Type
  4498 ;;  sign            1    6[COMMON] unsigned char 
  4499 ;;  counter         1    5[COMMON] unsigned char 
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  2    0[COMMON] int 
  4502 ;; Registers used:
  4503 ;;		wreg, status,2, status,0
  4504 ;; Tracked objects:
  4505 ;;		On entry : 300/0
  4506 ;;		On exit  : 300/0
  4507 ;;		Unchanged: 300/0
  4508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4509 ;;      Params:         4       0       0       0       0
  4510 ;;      Locals:         2       0       0       0       0
  4511 ;;      Temps:          1       0       0       0       0
  4512 ;;      Totals:         7       0       0       0       0
  4513 ;;Total ram usage:        7 bytes
  4514 ;; Hardware stack levels used: 1
  4515 ;; This function calls:
  4516 ;;		Nothing
  4517 ;; This function is called by:
  4518 ;;		_scale
  4519 ;; This function uses a non-reentrant model
  4520 ;;
  4521                           
  4522  1C86                     ___awmod:	
  4523                           ;psect for function ___awmod
  4524                           
  4525                           
  4526                           ;incstack = 0
  4527                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4528  1C86  01F6               	clrf	___awmod@sign
  4529  1C87  1FF3               	btfss	___awmod@dividend+1,7
  4530  1C88  2C90               	goto	l2766
  4531  1C89  09F2               	comf	___awmod@dividend,f
  4532  1C8A  09F3               	comf	___awmod@dividend+1,f
  4533  1C8B  0AF2               	incf	___awmod@dividend,f
  4534  1C8C  1903               	skipnz
  4535  1C8D  0AF3               	incf	___awmod@dividend+1,f
  4536  1C8E  01F6               	clrf	___awmod@sign
  4537  1C8F  0AF6               	incf	___awmod@sign,f
  4538  1C90                     l2766:
  4539  1C90  1FF1               	btfss	___awmod@divisor+1,7
  4540  1C91  2C97               	goto	l2770
  4541  1C92  09F0               	comf	___awmod@divisor,f
  4542  1C93  09F1               	comf	___awmod@divisor+1,f
  4543  1C94  0AF0               	incf	___awmod@divisor,f
  4544  1C95  1903               	skipnz
  4545  1C96  0AF1               	incf	___awmod@divisor+1,f
  4546  1C97                     l2770:
  4547  1C97  0870               	movf	___awmod@divisor,w
  4548  1C98  0471               	iorwf	___awmod@divisor+1,w
  4549  1C99  1903               	btfsc	3,2
  4550  1C9A  2CC4               	goto	l2788
  4551  1C9B  01F5               	clrf	___awmod@counter
  4552  1C9C  0AF5               	incf	___awmod@counter,f
  4553  1C9D                     l2778:
  4554  1C9D  1BF1               	btfsc	___awmod@divisor+1,7
  4555  1C9E  2CAB               	goto	l2780
  4556  1C9F  3001               	movlw	1
  4557  1CA0                     u3695:
  4558  1CA0  1003               	clrc
  4559  1CA1  0DF0               	rlf	___awmod@divisor,f
  4560  1CA2  0DF1               	rlf	___awmod@divisor+1,f
  4561  1CA3  3EFF               	addlw	-1
  4562  1CA4  1D03               	skipz
  4563  1CA5  2CA0               	goto	u3695
  4564  1CA6  3001               	movlw	1
  4565  1CA7  00F4               	movwf	??___awmod
  4566  1CA8  0874               	movf	??___awmod,w
  4567  1CA9  07F5               	addwf	___awmod@counter,f
  4568  1CAA  2C9D               	goto	l2778
  4569  1CAB                     l2780:
  4570  1CAB  0871               	movf	___awmod@divisor+1,w
  4571  1CAC  0273               	subwf	___awmod@dividend+1,w
  4572  1CAD  1D03               	skipz
  4573  1CAE  2CB1               	goto	u3715
  4574  1CAF  0870               	movf	___awmod@divisor,w
  4575  1CB0  0272               	subwf	___awmod@dividend,w
  4576  1CB1                     u3715:
  4577  1CB1  1C03               	skipc
  4578  1CB2  2CB9               	goto	l2784
  4579  1CB3  0870               	movf	___awmod@divisor,w
  4580  1CB4  02F2               	subwf	___awmod@dividend,f
  4581  1CB5  0871               	movf	___awmod@divisor+1,w
  4582  1CB6  1C03               	skipc
  4583  1CB7  03F3               	decf	___awmod@dividend+1,f
  4584  1CB8  02F3               	subwf	___awmod@dividend+1,f
  4585  1CB9                     l2784:
  4586  1CB9  3001               	movlw	1
  4587  1CBA                     u3725:
  4588  1CBA  1003               	clrc
  4589  1CBB  0CF1               	rrf	___awmod@divisor+1,f
  4590  1CBC  0CF0               	rrf	___awmod@divisor,f
  4591  1CBD  3EFF               	addlw	-1
  4592  1CBE  1D03               	skipz
  4593  1CBF  2CBA               	goto	u3725
  4594  1CC0  3001               	movlw	1
  4595  1CC1  02F5               	subwf	___awmod@counter,f
  4596  1CC2  1D03               	btfss	3,2
  4597  1CC3  2CAB               	goto	l2780
  4598  1CC4                     l2788:
  4599  1CC4  0876               	movf	___awmod@sign,w
  4600  1CC5  1903               	btfsc	3,2
  4601  1CC6  2CCC               	goto	l2792
  4602  1CC7  09F2               	comf	___awmod@dividend,f
  4603  1CC8  09F3               	comf	___awmod@dividend+1,f
  4604  1CC9  0AF2               	incf	___awmod@dividend,f
  4605  1CCA  1903               	skipnz
  4606  1CCB  0AF3               	incf	___awmod@dividend+1,f
  4607  1CCC                     l2792:
  4608  1CCC  0873               	movf	___awmod@dividend+1,w
  4609  1CCD  00F1               	movwf	?___awmod+1
  4610  1CCE  0872               	movf	___awmod@dividend,w
  4611  1CCF  00F0               	movwf	?___awmod
  4612  1CD0  0008               	return
  4613  1CD1                     __end_of___awmod:
  4614                           
  4615                           	psect	text10
  4616  1D1D                     __ptext10:	
  4617 ;; *************** function ___awdiv *****************
  4618 ;; Defined at:
  4619 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awdiv.c"
  4620 ;; Parameters:    Size  Location     Type
  4621 ;;  divisor         2    7[COMMON] int 
  4622 ;;  dividend        2    9[COMMON] int 
  4623 ;; Auto vars:     Size  Location     Type
  4624 ;;  quotient        2    2[BANK0 ] int 
  4625 ;;  sign            1    1[BANK0 ] unsigned char 
  4626 ;;  counter         1    0[BANK0 ] unsigned char 
  4627 ;; Return value:  Size  Location     Type
  4628 ;;                  2    7[COMMON] int 
  4629 ;; Registers used:
  4630 ;;		wreg, status,2, status,0
  4631 ;; Tracked objects:
  4632 ;;		On entry : 200/100
  4633 ;;		On exit  : 300/0
  4634 ;;		Unchanged: 0/0
  4635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4636 ;;      Params:         4       0       0       0       0
  4637 ;;      Locals:         0       4       0       0       0
  4638 ;;      Temps:          1       0       0       0       0
  4639 ;;      Totals:         5       4       0       0       0
  4640 ;;Total ram usage:        9 bytes
  4641 ;; Hardware stack levels used: 1
  4642 ;; This function calls:
  4643 ;;		Nothing
  4644 ;; This function is called by:
  4645 ;;		_scale
  4646 ;;		_sprintf
  4647 ;; This function uses a non-reentrant model
  4648 ;;
  4649                           
  4650  1D1D                     ___awdiv:	
  4651                           ;psect for function ___awdiv
  4652                           
  4653                           
  4654                           ;incstack = 0
  4655                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4656  1D1D  1283               	bcf	3,5	;RP0=0, select bank0
  4657  1D1E  01A1               	clrf	___awdiv@sign
  4658  1D1F  1FF8               	btfss	___awdiv@divisor+1,7
  4659  1D20  2D28               	goto	l2722
  4660  1D21  09F7               	comf	___awdiv@divisor,f
  4661  1D22  09F8               	comf	___awdiv@divisor+1,f
  4662  1D23  0AF7               	incf	___awdiv@divisor,f
  4663  1D24  1903               	skipnz
  4664  1D25  0AF8               	incf	___awdiv@divisor+1,f
  4665  1D26  01A1               	clrf	___awdiv@sign
  4666  1D27  0AA1               	incf	___awdiv@sign,f
  4667  1D28                     l2722:
  4668  1D28  1FFA               	btfss	___awdiv@dividend+1,7
  4669  1D29  2D33               	goto	l2728
  4670  1D2A  09F9               	comf	___awdiv@dividend,f
  4671  1D2B  09FA               	comf	___awdiv@dividend+1,f
  4672  1D2C  0AF9               	incf	___awdiv@dividend,f
  4673  1D2D  1903               	skipnz
  4674  1D2E  0AFA               	incf	___awdiv@dividend+1,f
  4675  1D2F  3001               	movlw	1
  4676  1D30  00FB               	movwf	??___awdiv
  4677  1D31  087B               	movf	??___awdiv,w
  4678  1D32  06A1               	xorwf	___awdiv@sign,f
  4679  1D33                     l2728:
  4680  1D33  01A2               	clrf	___awdiv@quotient
  4681  1D34  01A3               	clrf	___awdiv@quotient+1
  4682  1D35  0877               	movf	___awdiv@divisor,w
  4683  1D36  0478               	iorwf	___awdiv@divisor+1,w
  4684  1D37  1903               	btfsc	3,2
  4685  1D38  2D6A               	goto	l2750
  4686  1D39  01A0               	clrf	___awdiv@counter
  4687  1D3A  0AA0               	incf	___awdiv@counter,f
  4688  1D3B                     l2738:
  4689  1D3B  1BF8               	btfsc	___awdiv@divisor+1,7
  4690  1D3C  2D49               	goto	l2740
  4691  1D3D  3001               	movlw	1
  4692  1D3E                     u3595:
  4693  1D3E  1003               	clrc
  4694  1D3F  0DF7               	rlf	___awdiv@divisor,f
  4695  1D40  0DF8               	rlf	___awdiv@divisor+1,f
  4696  1D41  3EFF               	addlw	-1
  4697  1D42  1D03               	skipz
  4698  1D43  2D3E               	goto	u3595
  4699  1D44  3001               	movlw	1
  4700  1D45  00FB               	movwf	??___awdiv
  4701  1D46  087B               	movf	??___awdiv,w
  4702  1D47  07A0               	addwf	___awdiv@counter,f
  4703  1D48  2D3B               	goto	l2738
  4704  1D49                     l2740:
  4705  1D49  3001               	movlw	1
  4706  1D4A                     u3615:
  4707  1D4A  1003               	clrc
  4708  1D4B  0DA2               	rlf	___awdiv@quotient,f
  4709  1D4C  0DA3               	rlf	___awdiv@quotient+1,f
  4710  1D4D  3EFF               	addlw	-1
  4711  1D4E  1D03               	skipz
  4712  1D4F  2D4A               	goto	u3615
  4713  1D50  0878               	movf	___awdiv@divisor+1,w
  4714  1D51  027A               	subwf	___awdiv@dividend+1,w
  4715  1D52  1D03               	skipz
  4716  1D53  2D56               	goto	u3625
  4717  1D54  0877               	movf	___awdiv@divisor,w
  4718  1D55  0279               	subwf	___awdiv@dividend,w
  4719  1D56                     u3625:
  4720  1D56  1C03               	skipc
  4721  1D57  2D5F               	goto	l2746
  4722  1D58  0877               	movf	___awdiv@divisor,w
  4723  1D59  02F9               	subwf	___awdiv@dividend,f
  4724  1D5A  0878               	movf	___awdiv@divisor+1,w
  4725  1D5B  1C03               	skipc
  4726  1D5C  03FA               	decf	___awdiv@dividend+1,f
  4727  1D5D  02FA               	subwf	___awdiv@dividend+1,f
  4728  1D5E  1422               	bsf	___awdiv@quotient,0
  4729  1D5F                     l2746:
  4730  1D5F  3001               	movlw	1
  4731  1D60                     u3635:
  4732  1D60  1003               	clrc
  4733  1D61  0CF8               	rrf	___awdiv@divisor+1,f
  4734  1D62  0CF7               	rrf	___awdiv@divisor,f
  4735  1D63  3EFF               	addlw	-1
  4736  1D64  1D03               	skipz
  4737  1D65  2D60               	goto	u3635
  4738  1D66  3001               	movlw	1
  4739  1D67  02A0               	subwf	___awdiv@counter,f
  4740  1D68  1D03               	btfss	3,2
  4741  1D69  2D49               	goto	l2740
  4742  1D6A                     l2750:
  4743  1D6A  0821               	movf	___awdiv@sign,w
  4744  1D6B  1903               	btfsc	3,2
  4745  1D6C  2D72               	goto	l2754
  4746  1D6D  09A2               	comf	___awdiv@quotient,f
  4747  1D6E  09A3               	comf	___awdiv@quotient+1,f
  4748  1D6F  0AA2               	incf	___awdiv@quotient,f
  4749  1D70  1903               	skipnz
  4750  1D71  0AA3               	incf	___awdiv@quotient+1,f
  4751  1D72                     l2754:
  4752  1D72  0823               	movf	___awdiv@quotient+1,w
  4753  1D73  00F8               	movwf	?___awdiv+1
  4754  1D74  0822               	movf	___awdiv@quotient,w
  4755  1D75  00F7               	movwf	?___awdiv
  4756  1D76  0008               	return
  4757  1D77                     __end_of___awdiv:
  4758                           
  4759                           	psect	text11
  4760  163D                     __ptext11:	
  4761 ;; *************** function _fround *****************
  4762 ;; Defined at:
  4763 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  4764 ;; Parameters:    Size  Location     Type
  4765 ;;  prec            1    wreg     unsigned char 
  4766 ;; Auto vars:     Size  Location     Type
  4767 ;;  prec            1   49[BANK0 ] unsigned char 
  4768 ;; Return value:  Size  Location     Type
  4769 ;;                  4   30[BANK0 ] unsigned char 
  4770 ;; Registers used:
  4771 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4772 ;; Tracked objects:
  4773 ;;		On entry : 200/100
  4774 ;;		On exit  : 300/0
  4775 ;;		Unchanged: 0/0
  4776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4777 ;;      Params:         0       4       0       0       0
  4778 ;;      Locals:         0       9       0       0       0
  4779 ;;      Temps:          0       7       0       0       0
  4780 ;;      Totals:         0      20       0       0       0
  4781 ;;Total ram usage:       20 bytes
  4782 ;; Hardware stack levels used: 1
  4783 ;; Hardware stack levels required when called: 2
  4784 ;; This function calls:
  4785 ;;		___flmul
  4786 ;;		___lbdiv
  4787 ;;		___lbmod
  4788 ;; This function is called by:
  4789 ;;		_sprintf
  4790 ;; This function uses a non-reentrant model
  4791 ;;
  4792                           
  4793  163D                     _fround:	
  4794                           ;psect for function _fround
  4795                           
  4796                           
  4797                           ;incstack = 0
  4798                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4799                           ;fround@prec stored from wreg
  4800  163D  1283               	bcf	3,5	;RP0=0, select bank0
  4801  163E  00D1               	movwf	fround@prec
  4802                           
  4803                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4804  163F  306E               	movlw	110
  4805  1640  0251               	subwf	fround@prec,w
  4806  1641  1C03               	skipc
  4807  1642  2F29               	goto	l3222
  4808                           
  4809                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4810  1643  303F               	movlw	63
  4811  1644  00A7               	movwf	___flmul@b+3
  4812  1645  3000               	movlw	0
  4813  1646  00A6               	movwf	___flmul@b+2
  4814  1647  3000               	movlw	0
  4815  1648  00A5               	movwf	___flmul@b+1
  4816  1649  3000               	movlw	0
  4817  164A  00A4               	movwf	___flmul@b
  4818  164B  3064               	movlw	100
  4819  164C  00C2               	movwf	??_fround
  4820  164D  0842               	movf	??_fround,w
  4821  164E  00F7               	movwf	___lbdiv@divisor
  4822  164F  0851               	movf	fround@prec,w
  4823  1650  160A  158A  22BE  160A  118A  	fcall	___lbdiv
  4824  1655  00C3               	movwf	??_fround+1
  4825  1656  3001               	movlw	1
  4826  1657                     u4675:
  4827  1657  1003               	clrc
  4828  1658  0DC3               	rlf	??_fround+1,f
  4829  1659  3EFF               	addlw	-1
  4830  165A  1D03               	skipz
  4831  165B  2E57               	goto	u4675
  4832  165C  1003               	clrc
  4833  165D  0D43               	rlf	??_fround+1,w
  4834  165E  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4835  165F  0084               	movwf	4
  4836  1660  160A  118A  200A  160A  118A  	fcall	stringdir
  4837  1665  00C4               	movwf	??_fround+2
  4838  1666  160A  118A  200A  160A  118A  	fcall	stringdir
  4839  166B  00C5               	movwf	??_fround+3
  4840  166C  160A  118A  200A  160A  118A  	fcall	stringdir
  4841  1671  00C6               	movwf	??_fround+4
  4842  1672  160A  118A  200A  160A  118A  	fcall	stringdir
  4843  1677  00C7               	movwf	??_fround+5
  4844  1678  0847               	movf	??_fround+5,w
  4845  1679  00AB               	movwf	___flmul@a+3
  4846  167A  0846               	movf	??_fround+4,w
  4847  167B  00AA               	movwf	___flmul@a+2
  4848  167C  0845               	movf	??_fround+3,w
  4849  167D  00A9               	movwf	___flmul@a+1
  4850  167E  0844               	movf	??_fround+2,w
  4851  167F  00A8               	movwf	___flmul@a
  4852  1680  120A  118A  2028  160A  118A  	fcall	___flmul
  4853  1685  0827               	movf	?___flmul+3,w
  4854  1686  00D0               	movwf	_fround$879+3
  4855  1687  0826               	movf	?___flmul+2,w
  4856  1688  00CF               	movwf	_fround$879+2
  4857  1689  0825               	movf	?___flmul+1,w
  4858  168A  00CE               	movwf	_fround$879+1
  4859  168B  0824               	movf	?___flmul,w
  4860  168C  00CD               	movwf	_fround$879
  4861                           
  4862                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4863  168D  300A               	movlw	10
  4864  168E  00C2               	movwf	??_fround
  4865  168F  0842               	movf	??_fround,w
  4866  1690  00F7               	movwf	___lbdiv@divisor
  4867  1691  3064               	movlw	100
  4868  1692  00C3               	movwf	??_fround+1
  4869  1693  0843               	movf	??_fround+1,w
  4870  1694  00F0               	movwf	___lbmod@divisor
  4871  1695  0851               	movf	fround@prec,w
  4872  1696  120A  158A  200E  160A  118A  	fcall	___lbmod
  4873  169B  160A  158A  22BE  160A  118A  	fcall	___lbdiv
  4874  16A0  00C4               	movwf	??_fround+2
  4875  16A1  3001               	movlw	1
  4876  16A2                     u4685:
  4877  16A2  1003               	clrc
  4878  16A3  0DC4               	rlf	??_fround+2,f
  4879  16A4  3EFF               	addlw	-1
  4880  16A5  1D03               	skipz
  4881  16A6  2EA2               	goto	u4685
  4882  16A7  1003               	clrc
  4883  16A8  0D44               	rlf	??_fround+2,w
  4884  16A9  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4885  16AA  0084               	movwf	4
  4886  16AB  160A  118A  200A  160A  118A  	fcall	stringdir
  4887  16B0  00C5               	movwf	??_fround+3
  4888  16B1  160A  118A  200A  160A  118A  	fcall	stringdir
  4889  16B6  00C6               	movwf	??_fround+4
  4890  16B7  160A  118A  200A  160A  118A  	fcall	stringdir
  4891  16BC  00C7               	movwf	??_fround+5
  4892  16BD  160A  118A  200A  160A  118A  	fcall	stringdir
  4893  16C2  00C8               	movwf	??_fround+6
  4894  16C3  0848               	movf	??_fround+6,w
  4895  16C4  00A7               	movwf	___flmul@b+3
  4896  16C5  0847               	movf	??_fround+5,w
  4897  16C6  00A6               	movwf	___flmul@b+2
  4898  16C7  0846               	movf	??_fround+4,w
  4899  16C8  00A5               	movwf	___flmul@b+1
  4900  16C9  0845               	movf	??_fround+3,w
  4901  16CA  00A4               	movwf	___flmul@b
  4902  16CB  0850               	movf	_fround$879+3,w
  4903  16CC  00AB               	movwf	___flmul@a+3
  4904  16CD  084F               	movf	_fround$879+2,w
  4905  16CE  00AA               	movwf	___flmul@a+2
  4906  16CF  084E               	movf	_fround$879+1,w
  4907  16D0  00A9               	movwf	___flmul@a+1
  4908  16D1  084D               	movf	_fround$879,w
  4909  16D2  00A8               	movwf	___flmul@a
  4910  16D3  120A  118A  2028  160A  118A  	fcall	___flmul
  4911  16D8  0827               	movf	?___flmul+3,w
  4912  16D9  00CC               	movwf	_fround$880+3
  4913  16DA  0826               	movf	?___flmul+2,w
  4914  16DB  00CB               	movwf	_fround$880+2
  4915  16DC  0825               	movf	?___flmul+1,w
  4916  16DD  00CA               	movwf	_fround$880+1
  4917  16DE  0824               	movf	?___flmul,w
  4918  16DF  00C9               	movwf	_fround$880
  4919                           
  4920                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4921  16E0  300A               	movlw	10
  4922  16E1  00C2               	movwf	??_fround
  4923  16E2  0842               	movf	??_fround,w
  4924  16E3  00F0               	movwf	___lbmod@divisor
  4925  16E4  0851               	movf	fround@prec,w
  4926  16E5  120A  158A  200E  160A  118A  	fcall	___lbmod
  4927  16EA  00C3               	movwf	??_fround+1
  4928  16EB  3001               	movlw	1
  4929  16EC                     u4695:
  4930  16EC  1003               	clrc
  4931  16ED  0DC3               	rlf	??_fround+1,f
  4932  16EE  3EFF               	addlw	-1
  4933  16EF  1D03               	skipz
  4934  16F0  2EEC               	goto	u4695
  4935  16F1  1003               	clrc
  4936  16F2  0D43               	rlf	??_fround+1,w
  4937  16F3  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4938  16F4  0084               	movwf	4
  4939  16F5  160A  118A  200A  160A  118A  	fcall	stringdir
  4940  16FA  00C4               	movwf	??_fround+2
  4941  16FB  160A  118A  200A  160A  118A  	fcall	stringdir
  4942  1700  00C5               	movwf	??_fround+3
  4943  1701  160A  118A  200A  160A  118A  	fcall	stringdir
  4944  1706  00C6               	movwf	??_fround+4
  4945  1707  160A  118A  200A  160A  118A  	fcall	stringdir
  4946  170C  00C7               	movwf	??_fround+5
  4947  170D  0847               	movf	??_fround+5,w
  4948  170E  00A7               	movwf	___flmul@b+3
  4949  170F  0846               	movf	??_fround+4,w
  4950  1710  00A6               	movwf	___flmul@b+2
  4951  1711  0845               	movf	??_fround+3,w
  4952  1712  00A5               	movwf	___flmul@b+1
  4953  1713  0844               	movf	??_fround+2,w
  4954  1714  00A4               	movwf	___flmul@b
  4955  1715  084C               	movf	_fround$880+3,w
  4956  1716  00AB               	movwf	___flmul@a+3
  4957  1717  084B               	movf	_fround$880+2,w
  4958  1718  00AA               	movwf	___flmul@a+2
  4959  1719  084A               	movf	_fround$880+1,w
  4960  171A  00A9               	movwf	___flmul@a+1
  4961  171B  0849               	movf	_fround$880,w
  4962  171C  00A8               	movwf	___flmul@a
  4963  171D  120A  118A  2028   	fcall	___flmul
  4964  1720  0827               	movf	?___flmul+3,w
  4965  1721  00C1               	movwf	?_fround+3
  4966  1722  0826               	movf	?___flmul+2,w
  4967  1723  00C0               	movwf	?_fround+2
  4968  1724  0825               	movf	?___flmul+1,w
  4969  1725  00BF               	movwf	?_fround+1
  4970  1726  0824               	movf	?___flmul,w
  4971  1727  00BE               	movwf	?_fround
  4972  1728  0008               	return
  4973  1729                     l3222:
  4974  1729  300B               	movlw	11
  4975  172A  0251               	subwf	fround@prec,w
  4976  172B  1C03               	skipc
  4977  172C  2FC0               	goto	l3228
  4978                           
  4979                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4980  172D  303F               	movlw	63
  4981  172E  00A7               	movwf	___flmul@b+3
  4982  172F  3000               	movlw	0
  4983  1730  00A6               	movwf	___flmul@b+2
  4984  1731  3000               	movlw	0
  4985  1732  00A5               	movwf	___flmul@b+1
  4986  1733  3000               	movlw	0
  4987  1734  00A4               	movwf	___flmul@b
  4988  1735  300A               	movlw	10
  4989  1736  00C2               	movwf	??_fround
  4990  1737  0842               	movf	??_fround,w
  4991  1738  00F7               	movwf	___lbdiv@divisor
  4992  1739  0851               	movf	fround@prec,w
  4993  173A  160A  158A  22BE  160A  118A  	fcall	___lbdiv
  4994  173F  00C3               	movwf	??_fround+1
  4995  1740  3001               	movlw	1
  4996  1741                     u4715:
  4997  1741  1003               	clrc
  4998  1742  0DC3               	rlf	??_fround+1,f
  4999  1743  3EFF               	addlw	-1
  5000  1744  1D03               	skipz
  5001  1745  2F41               	goto	u4715
  5002  1746  1003               	clrc
  5003  1747  0D43               	rlf	??_fround+1,w
  5004  1748  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5005  1749  0084               	movwf	4
  5006  174A  160A  118A  200A  160A  118A  	fcall	stringdir
  5007  174F  00C4               	movwf	??_fround+2
  5008  1750  160A  118A  200A  160A  118A  	fcall	stringdir
  5009  1755  00C5               	movwf	??_fround+3
  5010  1756  160A  118A  200A  160A  118A  	fcall	stringdir
  5011  175B  00C6               	movwf	??_fround+4
  5012  175C  160A  118A  200A  160A  118A  	fcall	stringdir
  5013  1761  00C7               	movwf	??_fround+5
  5014  1762  0847               	movf	??_fround+5,w
  5015  1763  00AB               	movwf	___flmul@a+3
  5016  1764  0846               	movf	??_fround+4,w
  5017  1765  00AA               	movwf	___flmul@a+2
  5018  1766  0845               	movf	??_fround+3,w
  5019  1767  00A9               	movwf	___flmul@a+1
  5020  1768  0844               	movf	??_fround+2,w
  5021  1769  00A8               	movwf	___flmul@a
  5022  176A  120A  118A  2028  160A  118A  	fcall	___flmul
  5023  176F  0827               	movf	?___flmul+3,w
  5024  1770  00D0               	movwf	_fround$879+3
  5025  1771  0826               	movf	?___flmul+2,w
  5026  1772  00CF               	movwf	_fround$879+2
  5027  1773  0825               	movf	?___flmul+1,w
  5028  1774  00CE               	movwf	_fround$879+1
  5029  1775  0824               	movf	?___flmul,w
  5030  1776  00CD               	movwf	_fround$879
  5031                           
  5032                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5033  1777  300A               	movlw	10
  5034  1778  00C2               	movwf	??_fround
  5035  1779  0842               	movf	??_fround,w
  5036  177A  00F0               	movwf	___lbmod@divisor
  5037  177B  0851               	movf	fround@prec,w
  5038  177C  120A  158A  200E  160A  118A  	fcall	___lbmod
  5039  1781  00C3               	movwf	??_fround+1
  5040  1782  3001               	movlw	1
  5041  1783                     u4725:
  5042  1783  1003               	clrc
  5043  1784  0DC3               	rlf	??_fround+1,f
  5044  1785  3EFF               	addlw	-1
  5045  1786  1D03               	skipz
  5046  1787  2F83               	goto	u4725
  5047  1788  1003               	clrc
  5048  1789  0D43               	rlf	??_fround+1,w
  5049  178A  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5050  178B  0084               	movwf	4
  5051  178C  160A  118A  200A  160A  118A  	fcall	stringdir
  5052  1791  00C4               	movwf	??_fround+2
  5053  1792  160A  118A  200A  160A  118A  	fcall	stringdir
  5054  1797  00C5               	movwf	??_fround+3
  5055  1798  160A  118A  200A  160A  118A  	fcall	stringdir
  5056  179D  00C6               	movwf	??_fround+4
  5057  179E  160A  118A  200A  160A  118A  	fcall	stringdir
  5058  17A3  00C7               	movwf	??_fround+5
  5059  17A4  0847               	movf	??_fround+5,w
  5060  17A5  00A7               	movwf	___flmul@b+3
  5061  17A6  0846               	movf	??_fround+4,w
  5062  17A7  00A6               	movwf	___flmul@b+2
  5063  17A8  0845               	movf	??_fround+3,w
  5064  17A9  00A5               	movwf	___flmul@b+1
  5065  17AA  0844               	movf	??_fround+2,w
  5066  17AB  00A4               	movwf	___flmul@b
  5067  17AC  0850               	movf	_fround$879+3,w
  5068  17AD  00AB               	movwf	___flmul@a+3
  5069  17AE  084F               	movf	_fround$879+2,w
  5070  17AF  00AA               	movwf	___flmul@a+2
  5071  17B0  084E               	movf	_fround$879+1,w
  5072  17B1  00A9               	movwf	___flmul@a+1
  5073  17B2  084D               	movf	_fround$879,w
  5074  17B3  00A8               	movwf	___flmul@a
  5075  17B4  120A  118A  2028   	fcall	___flmul
  5076  17B7  0827               	movf	?___flmul+3,w
  5077  17B8  00C1               	movwf	?_fround+3
  5078  17B9  0826               	movf	?___flmul+2,w
  5079  17BA  00C0               	movwf	?_fround+2
  5080  17BB  0825               	movf	?___flmul+1,w
  5081  17BC  00BF               	movwf	?_fround+1
  5082  17BD  0824               	movf	?___flmul,w
  5083  17BE  00BE               	movwf	?_fround
  5084  17BF  0008               	return
  5085  17C0                     l3228:
  5086                           
  5087                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5088  17C0  303F               	movlw	63
  5089  17C1  00A7               	movwf	___flmul@b+3
  5090  17C2  3000               	movlw	0
  5091  17C3  00A6               	movwf	___flmul@b+2
  5092  17C4  3000               	movlw	0
  5093  17C5  00A5               	movwf	___flmul@b+1
  5094  17C6  3000               	movlw	0
  5095  17C7  00A4               	movwf	___flmul@b
  5096  17C8  0851               	movf	fround@prec,w
  5097  17C9  00C2               	movwf	??_fround
  5098  17CA  3001               	movlw	1
  5099  17CB                     u4735:
  5100  17CB  1003               	clrc
  5101  17CC  0DC2               	rlf	??_fround,f
  5102  17CD  3EFF               	addlw	-1
  5103  17CE  1D03               	skipz
  5104  17CF  2FCB               	goto	u4735
  5105  17D0  1003               	clrc
  5106  17D1  0D42               	rlf	??_fround,w
  5107  17D2  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5108  17D3  0084               	movwf	4
  5109  17D4  160A  118A  200A  160A  118A  	fcall	stringdir
  5110  17D9  00C3               	movwf	??_fround+1
  5111  17DA  160A  118A  200A  160A  118A  	fcall	stringdir
  5112  17DF  00C4               	movwf	??_fround+2
  5113  17E0  160A  118A  200A  160A  118A  	fcall	stringdir
  5114  17E5  00C5               	movwf	??_fround+3
  5115  17E6  160A  118A  200A  160A  118A  	fcall	stringdir
  5116  17EB  00C6               	movwf	??_fround+4
  5117  17EC  0846               	movf	??_fround+4,w
  5118  17ED  00AB               	movwf	___flmul@a+3
  5119  17EE  0845               	movf	??_fround+3,w
  5120  17EF  00AA               	movwf	___flmul@a+2
  5121  17F0  0844               	movf	??_fround+2,w
  5122  17F1  00A9               	movwf	___flmul@a+1
  5123  17F2  0843               	movf	??_fround+1,w
  5124  17F3  00A8               	movwf	___flmul@a
  5125  17F4  120A  118A  2028   	fcall	___flmul
  5126  17F7  0827               	movf	?___flmul+3,w
  5127  17F8  00C1               	movwf	?_fround+3
  5128  17F9  0826               	movf	?___flmul+2,w
  5129  17FA  00C0               	movwf	?_fround+2
  5130  17FB  0825               	movf	?___flmul+1,w
  5131  17FC  00BF               	movwf	?_fround+1
  5132  17FD  0824               	movf	?___flmul,w
  5133  17FE  00BE               	movwf	?_fround
  5134  17FF  0008               	return
  5135  1800                     __end_of_fround:
  5136                           
  5137                           	psect	text12
  5138  080E                     __ptext12:	
  5139 ;; *************** function ___lbmod *****************
  5140 ;; Defined at:
  5141 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lbmod.c"
  5142 ;; Parameters:    Size  Location     Type
  5143 ;;  dividend        1    wreg     unsigned char 
  5144 ;;  divisor         1    0[COMMON] unsigned char 
  5145 ;; Auto vars:     Size  Location     Type
  5146 ;;  dividend        1    4[COMMON] unsigned char 
  5147 ;;  rem             1    6[COMMON] unsigned char 
  5148 ;;  counter         1    5[COMMON] unsigned char 
  5149 ;; Return value:  Size  Location     Type
  5150 ;;                  1    wreg      unsigned char 
  5151 ;; Registers used:
  5152 ;;		wreg, status,2, status,0
  5153 ;; Tracked objects:
  5154 ;;		On entry : 300/0
  5155 ;;		On exit  : 300/0
  5156 ;;		Unchanged: 300/0
  5157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5158 ;;      Params:         1       0       0       0       0
  5159 ;;      Locals:         3       0       0       0       0
  5160 ;;      Temps:          3       0       0       0       0
  5161 ;;      Totals:         7       0       0       0       0
  5162 ;;Total ram usage:        7 bytes
  5163 ;; Hardware stack levels used: 1
  5164 ;; This function calls:
  5165 ;;		Nothing
  5166 ;; This function is called by:
  5167 ;;		_fround
  5168 ;; This function uses a non-reentrant model
  5169 ;;
  5170                           
  5171  080E                     ___lbmod:	
  5172                           ;psect for function ___lbmod
  5173                           
  5174                           
  5175                           ;incstack = 0
  5176                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  5177                           ;___lbmod@dividend stored from wreg
  5178  080E  00F4               	movwf	___lbmod@dividend
  5179  080F  3008               	movlw	8
  5180  0810  00F1               	movwf	??___lbmod
  5181  0811  0871               	movf	??___lbmod,w
  5182  0812  00F5               	movwf	___lbmod@counter
  5183  0813  01F6               	clrf	___lbmod@rem
  5184  0814                     l2826:
  5185  0814  0874               	movf	___lbmod@dividend,w
  5186  0815  00F1               	movwf	??___lbmod
  5187  0816  3007               	movlw	7
  5188  0817                     u3795:
  5189  0817  1003               	clrc
  5190  0818  0CF1               	rrf	??___lbmod,f
  5191  0819  3EFF               	addlw	-1
  5192  081A  1D03               	skipz
  5193  081B  2817               	goto	u3795
  5194  081C  0876               	movf	___lbmod@rem,w
  5195  081D  00F2               	movwf	??___lbmod+1
  5196  081E  0772               	addwf	??___lbmod+1,w
  5197  081F  0471               	iorwf	??___lbmod,w
  5198  0820  00F3               	movwf	??___lbmod+2
  5199  0821  0873               	movf	??___lbmod+2,w
  5200  0822  00F6               	movwf	___lbmod@rem
  5201  0823  1003               	clrc
  5202  0824  0DF4               	rlf	___lbmod@dividend,f
  5203  0825  0870               	movf	___lbmod@divisor,w
  5204  0826  0276               	subwf	___lbmod@rem,w
  5205  0827  1C03               	skipc
  5206  0828  282B               	goto	l553
  5207  0829  0870               	movf	___lbmod@divisor,w
  5208  082A  02F6               	subwf	___lbmod@rem,f
  5209  082B                     l553:
  5210  082B  3001               	movlw	1
  5211  082C  02F5               	subwf	___lbmod@counter,f
  5212  082D  1D03               	btfss	3,2
  5213  082E  2814               	goto	l2826
  5214  082F  0876               	movf	___lbmod@rem,w
  5215  0830  0008               	return
  5216  0831                     __end_of___lbmod:
  5217                           
  5218                           	psect	text13
  5219  1ABE                     __ptext13:	
  5220 ;; *************** function ___lbdiv *****************
  5221 ;; Defined at:
  5222 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lbdiv.c"
  5223 ;; Parameters:    Size  Location     Type
  5224 ;;  dividend        1    wreg     unsigned char 
  5225 ;;  divisor         1    7[COMMON] unsigned char 
  5226 ;; Auto vars:     Size  Location     Type
  5227 ;;  dividend        1    9[COMMON] unsigned char 
  5228 ;;  quotient        1   11[COMMON] unsigned char 
  5229 ;;  counter         1   10[COMMON] unsigned char 
  5230 ;; Return value:  Size  Location     Type
  5231 ;;                  1    wreg      unsigned char 
  5232 ;; Registers used:
  5233 ;;		wreg, status,2, status,0
  5234 ;; Tracked objects:
  5235 ;;		On entry : 300/0
  5236 ;;		On exit  : 300/0
  5237 ;;		Unchanged: 300/0
  5238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5239 ;;      Params:         1       0       0       0       0
  5240 ;;      Locals:         3       0       0       0       0
  5241 ;;      Temps:          1       0       0       0       0
  5242 ;;      Totals:         5       0       0       0       0
  5243 ;;Total ram usage:        5 bytes
  5244 ;; Hardware stack levels used: 1
  5245 ;; This function calls:
  5246 ;;		Nothing
  5247 ;; This function is called by:
  5248 ;;		_fround
  5249 ;; This function uses a non-reentrant model
  5250 ;;
  5251                           
  5252  1ABE                     ___lbdiv:	
  5253                           ;psect for function ___lbdiv
  5254                           
  5255                           
  5256                           ;incstack = 0
  5257                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  5258                           ;___lbdiv@dividend stored from wreg
  5259  1ABE  00F9               	movwf	___lbdiv@dividend
  5260  1ABF  01FB               	clrf	___lbdiv@quotient
  5261  1AC0  0877               	movf	___lbdiv@divisor,w
  5262  1AC1  1903               	btfsc	3,2
  5263  1AC2  2ADD               	goto	l2818
  5264  1AC3  01FA               	clrf	___lbdiv@counter
  5265  1AC4  0AFA               	incf	___lbdiv@counter,f
  5266  1AC5                     l2806:
  5267  1AC5  1BF7               	btfsc	___lbdiv@divisor,7
  5268  1AC6  2ACE               	goto	l2808
  5269  1AC7  1003               	clrc
  5270  1AC8  0DF7               	rlf	___lbdiv@divisor,f
  5271  1AC9  3001               	movlw	1
  5272  1ACA  00F8               	movwf	??___lbdiv
  5273  1ACB  0878               	movf	??___lbdiv,w
  5274  1ACC  07FA               	addwf	___lbdiv@counter,f
  5275  1ACD  2AC5               	goto	l2806
  5276  1ACE                     l2808:
  5277  1ACE  1003               	clrc
  5278  1ACF  0DFB               	rlf	___lbdiv@quotient,f
  5279  1AD0  0877               	movf	___lbdiv@divisor,w
  5280  1AD1  0279               	subwf	___lbdiv@dividend,w
  5281  1AD2  1C03               	skipc
  5282  1AD3  2AD8               	goto	L11
  5283  1AD4  0877               	movf	___lbdiv@divisor,w
  5284  1AD5  02F9               	subwf	___lbdiv@dividend,f
  5285  1AD6  147B               	bsf	___lbdiv@quotient,0
  5286  1AD7  1003               	clrc
  5287  1AD8                     L11:
  5288  1AD8  0CF7               	rrf	___lbdiv@divisor,f
  5289  1AD9  3001               	movlw	1
  5290  1ADA  02FA               	subwf	___lbdiv@counter,f
  5291  1ADB  1D03               	btfss	3,2
  5292  1ADC  2ACE               	goto	l2808
  5293  1ADD                     l2818:
  5294  1ADD  087B               	movf	___lbdiv@quotient,w
  5295  1ADE  0008               	return
  5296  1ADF                     __end_of___lbdiv:
  5297                           
  5298                           	psect	text14
  5299  11E8                     __ptext14:	
  5300 ;; *************** function __tdiv_to_l_ *****************
  5301 ;; Defined at:
  5302 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftdivl.c"
  5303 ;; Parameters:    Size  Location     Type
  5304 ;;  f1              4    0[COMMON] float 
  5305 ;;  f2              4    4[COMMON] float 
  5306 ;; Auto vars:     Size  Location     Type
  5307 ;;  quot            4    0[BANK0 ] unsigned long 
  5308 ;;  exp1            1    5[BANK0 ] unsigned char 
  5309 ;;  cntr            1    4[BANK0 ] unsigned char 
  5310 ;; Return value:  Size  Location     Type
  5311 ;;                  4    0[COMMON] unsigned long 
  5312 ;; Registers used:
  5313 ;;		wreg, status,2, status,0
  5314 ;; Tracked objects:
  5315 ;;		On entry : 0/0
  5316 ;;		On exit  : 300/0
  5317 ;;		Unchanged: 0/0
  5318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5319 ;;      Params:         8       0       0       0       0
  5320 ;;      Locals:         0       6       0       0       0
  5321 ;;      Temps:          4       0       0       0       0
  5322 ;;      Totals:        12       6       0       0       0
  5323 ;;Total ram usage:       18 bytes
  5324 ;; Hardware stack levels used: 1
  5325 ;; This function calls:
  5326 ;;		Nothing
  5327 ;; This function is called by:
  5328 ;;		_sprintf
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           
  5332  11E8                     __tdiv_to_l_:	
  5333                           ;psect for function __tdiv_to_l_
  5334                           
  5335                           
  5336                           ;incstack = 0
  5337                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5338  11E8  0870               	movf	__tdiv_to_l_@f1,w
  5339  11E9  00F8               	movwf	??__tdiv_to_l_
  5340  11EA  0871               	movf	__tdiv_to_l_@f1+1,w
  5341  11EB  00F9               	movwf	??__tdiv_to_l_+1
  5342  11EC  0872               	movf	__tdiv_to_l_@f1+2,w
  5343  11ED  00FA               	movwf	??__tdiv_to_l_+2
  5344  11EE  1003               	clrc
  5345  11EF  0D79               	rlf	??__tdiv_to_l_+1,w
  5346  11F0  0D7A               	rlf	??__tdiv_to_l_+2,w
  5347  11F1  00FB               	movwf	??__tdiv_to_l_+3
  5348  11F2  087B               	movf	??__tdiv_to_l_+3,w
  5349  11F3  1283               	bcf	3,5	;RP0=0, select bank0
  5350  11F4  1303               	bcf	3,6	;RP1=0, select bank0
  5351  11F5  00A5               	movwf	__tdiv_to_l_@exp1
  5352  11F6  0825               	movf	__tdiv_to_l_@exp1,w
  5353  11F7  1D03               	btfss	3,2
  5354  11F8  2A02               	goto	l3278
  5355  11F9                     l3274:
  5356  11F9  3000               	movlw	0
  5357  11FA  00F3               	movwf	?__tdiv_to_l_+3
  5358  11FB  3000               	movlw	0
  5359  11FC  00F2               	movwf	?__tdiv_to_l_+2
  5360  11FD  3000               	movlw	0
  5361  11FE  00F1               	movwf	?__tdiv_to_l_+1
  5362  11FF  3000               	movlw	0
  5363  1200  00F0               	movwf	?__tdiv_to_l_
  5364  1201  0008               	return
  5365  1202                     l3278:
  5366  1202  0874               	movf	__tdiv_to_l_@f2,w
  5367  1203  00F8               	movwf	??__tdiv_to_l_
  5368  1204  0875               	movf	__tdiv_to_l_@f2+1,w
  5369  1205  00F9               	movwf	??__tdiv_to_l_+1
  5370  1206  0876               	movf	__tdiv_to_l_@f2+2,w
  5371  1207  00FA               	movwf	??__tdiv_to_l_+2
  5372  1208  1003               	clrc
  5373  1209  0D79               	rlf	??__tdiv_to_l_+1,w
  5374  120A  0D7A               	rlf	??__tdiv_to_l_+2,w
  5375  120B  00FB               	movwf	??__tdiv_to_l_+3
  5376  120C  087B               	movf	??__tdiv_to_l_+3,w
  5377  120D  00A4               	movwf	__tdiv_to_l_@cntr
  5378  120E  0824               	movf	__tdiv_to_l_@cntr,w
  5379  120F  1903               	btfsc	3,2
  5380  1210  29F9               	goto	l3274
  5381  1211  17F1               	bsf	__tdiv_to_l_@f1+1,7
  5382  1212  30FF               	movlw	255
  5383  1213  05F0               	andwf	__tdiv_to_l_@f1,f
  5384  1214  30FF               	movlw	255
  5385  1215  05F1               	andwf	__tdiv_to_l_@f1+1,f
  5386  1216  3000               	movlw	0
  5387  1217  05F2               	andwf	__tdiv_to_l_@f1+2,f
  5388  1218  17F5               	bsf	__tdiv_to_l_@f2+1,7
  5389  1219  30FF               	movlw	255
  5390  121A  05F4               	andwf	__tdiv_to_l_@f2,f
  5391  121B  30FF               	movlw	255
  5392  121C  05F5               	andwf	__tdiv_to_l_@f2+1,f
  5393  121D  3000               	movlw	0
  5394  121E  05F6               	andwf	__tdiv_to_l_@f2+2,f
  5395  121F  3000               	movlw	0
  5396  1220  00A3               	movwf	__tdiv_to_l_@quot+3
  5397  1221  3000               	movlw	0
  5398  1222  00A2               	movwf	__tdiv_to_l_@quot+2
  5399  1223  3000               	movlw	0
  5400  1224  00A1               	movwf	__tdiv_to_l_@quot+1
  5401  1225  3000               	movlw	0
  5402  1226  00A0               	movwf	__tdiv_to_l_@quot
  5403  1227  307F               	movlw	127
  5404  1228  02A5               	subwf	__tdiv_to_l_@exp1,f
  5405  1229  3098               	movlw	152
  5406  122A  0724               	addwf	__tdiv_to_l_@cntr,w
  5407  122B  00F8               	movwf	??__tdiv_to_l_
  5408  122C  0878               	movf	??__tdiv_to_l_,w
  5409  122D  02A5               	subwf	__tdiv_to_l_@exp1,f
  5410  122E  3018               	movlw	24
  5411  122F  00F8               	movwf	??__tdiv_to_l_
  5412  1230  0878               	movf	??__tdiv_to_l_,w
  5413  1231  00A4               	movwf	__tdiv_to_l_@cntr
  5414  1232                     l3292:
  5415  1232  3001               	movlw	1
  5416  1233  00F8               	movwf	??__tdiv_to_l_
  5417  1234                     u4935:
  5418  1234  1003               	clrc
  5419  1235  0DA0               	rlf	__tdiv_to_l_@quot,f
  5420  1236  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5421  1237  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5422  1238  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5423  1239  0BF8               	decfsz	??__tdiv_to_l_,f
  5424  123A  2A34               	goto	u4935
  5425  123B  0876               	movf	__tdiv_to_l_@f2+2,w
  5426  123C  0272               	subwf	__tdiv_to_l_@f1+2,w
  5427  123D  1D03               	skipz
  5428  123E  2A45               	goto	u4945
  5429  123F  0875               	movf	__tdiv_to_l_@f2+1,w
  5430  1240  0271               	subwf	__tdiv_to_l_@f1+1,w
  5431  1241  1D03               	skipz
  5432  1242  2A45               	goto	u4945
  5433  1243  0874               	movf	__tdiv_to_l_@f2,w
  5434  1244  0270               	subwf	__tdiv_to_l_@f1,w
  5435  1245                     u4945:
  5436  1245  1C03               	skipc
  5437  1246  2A52               	goto	l3300
  5438  1247  0874               	movf	__tdiv_to_l_@f2,w
  5439  1248  02F0               	subwf	__tdiv_to_l_@f1,f
  5440  1249  0875               	movf	__tdiv_to_l_@f2+1,w
  5441  124A  1C03               	skipc
  5442  124B  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  5443  124C  02F1               	subwf	__tdiv_to_l_@f1+1,f
  5444  124D  0876               	movf	__tdiv_to_l_@f2+2,w
  5445  124E  1C03               	skipc
  5446  124F  0A76               	incf	__tdiv_to_l_@f2+2,w
  5447  1250  02F2               	subwf	__tdiv_to_l_@f1+2,f
  5448  1251  1420               	bsf	__tdiv_to_l_@quot,0
  5449  1252                     l3300:
  5450  1252  3001               	movlw	1
  5451  1253                     u4955:
  5452  1253  1003               	clrc
  5453  1254  0DF0               	rlf	__tdiv_to_l_@f1,f
  5454  1255  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5455  1256  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5456  1257  3EFF               	addlw	-1
  5457  1258  1D03               	skipz
  5458  1259  2A53               	goto	u4955
  5459  125A  3001               	movlw	1
  5460  125B  02A4               	subwf	__tdiv_to_l_@cntr,f
  5461  125C  1D03               	btfss	3,2
  5462  125D  2A32               	goto	l3292
  5463  125E  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5464  125F  2A75               	goto	l3312
  5465  1260  0825               	movf	__tdiv_to_l_@exp1,w
  5466  1261  3A80               	xorlw	128
  5467  1262  3E97               	addlw	151
  5468  1263  1C03               	btfss	3,0
  5469  1264  29F9               	goto	l3274
  5470  1265                     l3310:
  5471  1265  3001               	movlw	1
  5472  1266                     u4995:
  5473  1266  1003               	clrc
  5474  1267  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  5475  1268  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5476  1269  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5477  126A  0CA0               	rrf	__tdiv_to_l_@quot,f
  5478  126B  3EFF               	addlw	-1
  5479  126C  1D03               	skipz
  5480  126D  2A66               	goto	u4995
  5481  126E  3001               	movlw	1
  5482  126F  00F8               	movwf	??__tdiv_to_l_
  5483  1270  0878               	movf	??__tdiv_to_l_,w
  5484  1271  07A5               	addwf	__tdiv_to_l_@exp1,f
  5485  1272  1903               	btfsc	3,2
  5486  1273  2A88               	goto	l3320
  5487  1274  2A65               	goto	l3310
  5488  1275                     l3312:
  5489  1275  3018               	movlw	24
  5490  1276  0225               	subwf	__tdiv_to_l_@exp1,w
  5491  1277  1803               	btfsc	3,0
  5492  1278  29F9               	goto	l3274
  5493  1279                     l537:
  5494  1279  0825               	movf	__tdiv_to_l_@exp1,w
  5495  127A  1903               	btfsc	3,2
  5496  127B  2A88               	goto	l3320
  5497  127C  3001               	movlw	1
  5498  127D  00F8               	movwf	??__tdiv_to_l_
  5499  127E                     u5025:
  5500  127E  1003               	clrc
  5501  127F  0DA0               	rlf	__tdiv_to_l_@quot,f
  5502  1280  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5503  1281  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5504  1282  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5505  1283  0BF8               	decfsz	??__tdiv_to_l_,f
  5506  1284  2A7E               	goto	u5025
  5507  1285  3001               	movlw	1
  5508  1286  02A5               	subwf	__tdiv_to_l_@exp1,f
  5509  1287  2A79               	goto	l537
  5510  1288                     l3320:
  5511  1288  0823               	movf	__tdiv_to_l_@quot+3,w
  5512  1289  00F3               	movwf	?__tdiv_to_l_+3
  5513  128A  0822               	movf	__tdiv_to_l_@quot+2,w
  5514  128B  00F2               	movwf	?__tdiv_to_l_+2
  5515  128C  0821               	movf	__tdiv_to_l_@quot+1,w
  5516  128D  00F1               	movwf	?__tdiv_to_l_+1
  5517  128E  0820               	movf	__tdiv_to_l_@quot,w
  5518  128F  00F0               	movwf	?__tdiv_to_l_
  5519  1290  0008               	return
  5520  1291                     __end_of__tdiv_to_l_:
  5521                           
  5522                           	psect	text15
  5523  113F                     __ptext15:	
  5524 ;; *************** function __div_to_l_ *****************
  5525 ;; Defined at:
  5526 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fldivl.c"
  5527 ;; Parameters:    Size  Location     Type
  5528 ;;  f1              4    0[COMMON] unsigned long 
  5529 ;;  f2              4    4[COMMON] unsigned long 
  5530 ;; Auto vars:     Size  Location     Type
  5531 ;;  quot            4    0[BANK0 ] unsigned long 
  5532 ;;  exp1            1    5[BANK0 ] unsigned char 
  5533 ;;  cntr            1    4[BANK0 ] unsigned char 
  5534 ;; Return value:  Size  Location     Type
  5535 ;;                  4    0[COMMON] unsigned long 
  5536 ;; Registers used:
  5537 ;;		wreg, status,2, status,0
  5538 ;; Tracked objects:
  5539 ;;		On entry : 300/100
  5540 ;;		On exit  : 300/0
  5541 ;;		Unchanged: 0/0
  5542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5543 ;;      Params:         8       0       0       0       0
  5544 ;;      Locals:         0       6       0       0       0
  5545 ;;      Temps:          1       0       0       0       0
  5546 ;;      Totals:         9       6       0       0       0
  5547 ;;Total ram usage:       15 bytes
  5548 ;; Hardware stack levels used: 1
  5549 ;; This function calls:
  5550 ;;		Nothing
  5551 ;; This function is called by:
  5552 ;;		_sprintf
  5553 ;; This function uses a non-reentrant model
  5554 ;;
  5555                           
  5556  113F                     __div_to_l_:	
  5557                           ;psect for function __div_to_l_
  5558                           
  5559                           
  5560                           ;incstack = 0
  5561                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5562  113F  1003               	clrc
  5563  1140  0D72               	rlf	__div_to_l_@f1+2,w
  5564  1141  0D73               	rlf	__div_to_l_@f1+3,w
  5565  1142  00F8               	movwf	??__div_to_l_
  5566  1143  0878               	movf	??__div_to_l_,w
  5567  1144  1283               	bcf	3,5	;RP0=0, select bank0
  5568  1145  00A5               	movwf	__div_to_l_@exp1
  5569  1146  0825               	movf	__div_to_l_@exp1,w
  5570  1147  1D03               	btfss	3,2
  5571  1148  2952               	goto	l3330
  5572  1149                     l3326:
  5573  1149  3000               	movlw	0
  5574  114A  00F3               	movwf	?__div_to_l_+3
  5575  114B  3000               	movlw	0
  5576  114C  00F2               	movwf	?__div_to_l_+2
  5577  114D  3000               	movlw	0
  5578  114E  00F1               	movwf	?__div_to_l_+1
  5579  114F  3000               	movlw	0
  5580  1150  00F0               	movwf	?__div_to_l_
  5581  1151  0008               	return
  5582  1152                     l3330:
  5583  1152  1003               	clrc
  5584  1153  0D76               	rlf	__div_to_l_@f2+2,w
  5585  1154  0D77               	rlf	__div_to_l_@f2+3,w
  5586  1155  00F8               	movwf	??__div_to_l_
  5587  1156  0878               	movf	??__div_to_l_,w
  5588  1157  00A4               	movwf	__div_to_l_@cntr
  5589  1158  0824               	movf	__div_to_l_@cntr,w
  5590  1159  1903               	btfsc	3,2
  5591  115A  2949               	goto	l3326
  5592  115B  17F2               	bsf	__div_to_l_@f1+2,7
  5593  115C  30FF               	movlw	255
  5594  115D  05F0               	andwf	__div_to_l_@f1,f
  5595  115E  30FF               	movlw	255
  5596  115F  05F1               	andwf	__div_to_l_@f1+1,f
  5597  1160  30FF               	movlw	255
  5598  1161  05F2               	andwf	__div_to_l_@f1+2,f
  5599  1162  3000               	movlw	0
  5600  1163  05F3               	andwf	__div_to_l_@f1+3,f
  5601  1164  17F6               	bsf	__div_to_l_@f2+2,7
  5602  1165  30FF               	movlw	255
  5603  1166  05F4               	andwf	__div_to_l_@f2,f
  5604  1167  30FF               	movlw	255
  5605  1168  05F5               	andwf	__div_to_l_@f2+1,f
  5606  1169  30FF               	movlw	255
  5607  116A  05F6               	andwf	__div_to_l_@f2+2,f
  5608  116B  3000               	movlw	0
  5609  116C  05F7               	andwf	__div_to_l_@f2+3,f
  5610  116D  3000               	movlw	0
  5611  116E  00A3               	movwf	__div_to_l_@quot+3
  5612  116F  3000               	movlw	0
  5613  1170  00A2               	movwf	__div_to_l_@quot+2
  5614  1171  3000               	movlw	0
  5615  1172  00A1               	movwf	__div_to_l_@quot+1
  5616  1173  3000               	movlw	0
  5617  1174  00A0               	movwf	__div_to_l_@quot
  5618  1175  307F               	movlw	127
  5619  1176  02A5               	subwf	__div_to_l_@exp1,f
  5620  1177  30A0               	movlw	160
  5621  1178  0724               	addwf	__div_to_l_@cntr,w
  5622  1179  00F8               	movwf	??__div_to_l_
  5623  117A  0878               	movf	??__div_to_l_,w
  5624  117B  02A5               	subwf	__div_to_l_@exp1,f
  5625  117C  3020               	movlw	32
  5626  117D  00F8               	movwf	??__div_to_l_
  5627  117E  0878               	movf	??__div_to_l_,w
  5628  117F  00A4               	movwf	__div_to_l_@cntr
  5629  1180                     l3344:
  5630  1180  3001               	movlw	1
  5631  1181  00F8               	movwf	??__div_to_l_
  5632  1182                     u5065:
  5633  1182  1003               	clrc
  5634  1183  0DA0               	rlf	__div_to_l_@quot,f
  5635  1184  0DA1               	rlf	__div_to_l_@quot+1,f
  5636  1185  0DA2               	rlf	__div_to_l_@quot+2,f
  5637  1186  0DA3               	rlf	__div_to_l_@quot+3,f
  5638  1187  0BF8               	decfsz	??__div_to_l_,f
  5639  1188  2982               	goto	u5065
  5640  1189  0877               	movf	__div_to_l_@f2+3,w
  5641  118A  0273               	subwf	__div_to_l_@f1+3,w
  5642  118B  1D03               	skipz
  5643  118C  2997               	goto	u5075
  5644  118D  0876               	movf	__div_to_l_@f2+2,w
  5645  118E  0272               	subwf	__div_to_l_@f1+2,w
  5646  118F  1D03               	skipz
  5647  1190  2997               	goto	u5075
  5648  1191  0875               	movf	__div_to_l_@f2+1,w
  5649  1192  0271               	subwf	__div_to_l_@f1+1,w
  5650  1193  1D03               	skipz
  5651  1194  2997               	goto	u5075
  5652  1195  0874               	movf	__div_to_l_@f2,w
  5653  1196  0270               	subwf	__div_to_l_@f1,w
  5654  1197                     u5075:
  5655  1197  1C03               	skipc
  5656  1198  29A8               	goto	l3352
  5657  1199  0874               	movf	__div_to_l_@f2,w
  5658  119A  02F0               	subwf	__div_to_l_@f1,f
  5659  119B  0875               	movf	__div_to_l_@f2+1,w
  5660  119C  1C03               	skipc
  5661  119D  0F75               	incfsz	__div_to_l_@f2+1,w
  5662  119E  02F1               	subwf	__div_to_l_@f1+1,f
  5663  119F  0876               	movf	__div_to_l_@f2+2,w
  5664  11A0  1C03               	skipc
  5665  11A1  0F76               	incfsz	__div_to_l_@f2+2,w
  5666  11A2  02F2               	subwf	__div_to_l_@f1+2,f
  5667  11A3  0877               	movf	__div_to_l_@f2+3,w
  5668  11A4  1C03               	skipc
  5669  11A5  0F77               	incfsz	__div_to_l_@f2+3,w
  5670  11A6  02F3               	subwf	__div_to_l_@f1+3,f
  5671  11A7  1420               	bsf	__div_to_l_@quot,0
  5672  11A8                     l3352:
  5673  11A8  3001               	movlw	1
  5674  11A9  00F8               	movwf	??__div_to_l_
  5675  11AA                     u5085:
  5676  11AA  1003               	clrc
  5677  11AB  0DF0               	rlf	__div_to_l_@f1,f
  5678  11AC  0DF1               	rlf	__div_to_l_@f1+1,f
  5679  11AD  0DF2               	rlf	__div_to_l_@f1+2,f
  5680  11AE  0DF3               	rlf	__div_to_l_@f1+3,f
  5681  11AF  0BF8               	decfsz	??__div_to_l_,f
  5682  11B0  29AA               	goto	u5085
  5683  11B1  3001               	movlw	1
  5684  11B2  02A4               	subwf	__div_to_l_@cntr,f
  5685  11B3  1D03               	btfss	3,2
  5686  11B4  2980               	goto	l3344
  5687  11B5  1FA5               	btfss	__div_to_l_@exp1,7
  5688  11B6  29CC               	goto	l3364
  5689  11B7  0825               	movf	__div_to_l_@exp1,w
  5690  11B8  3A80               	xorlw	128
  5691  11B9  3E9F               	addlw	159
  5692  11BA  1C03               	btfss	3,0
  5693  11BB  2949               	goto	l3326
  5694  11BC                     l3362:
  5695  11BC  3001               	movlw	1
  5696  11BD                     u5125:
  5697  11BD  1003               	clrc
  5698  11BE  0CA3               	rrf	__div_to_l_@quot+3,f
  5699  11BF  0CA2               	rrf	__div_to_l_@quot+2,f
  5700  11C0  0CA1               	rrf	__div_to_l_@quot+1,f
  5701  11C1  0CA0               	rrf	__div_to_l_@quot,f
  5702  11C2  3EFF               	addlw	-1
  5703  11C3  1D03               	skipz
  5704  11C4  29BD               	goto	u5125
  5705  11C5  3001               	movlw	1
  5706  11C6  00F8               	movwf	??__div_to_l_
  5707  11C7  0878               	movf	??__div_to_l_,w
  5708  11C8  07A5               	addwf	__div_to_l_@exp1,f
  5709  11C9  1903               	btfsc	3,2
  5710  11CA  29DF               	goto	l3372
  5711  11CB  29BC               	goto	l3362
  5712  11CC                     l3364:
  5713  11CC  3020               	movlw	32
  5714  11CD  0225               	subwf	__div_to_l_@exp1,w
  5715  11CE  1803               	btfsc	3,0
  5716  11CF  2949               	goto	l3326
  5717  11D0                     l490:
  5718  11D0  0825               	movf	__div_to_l_@exp1,w
  5719  11D1  1903               	btfsc	3,2
  5720  11D2  29DF               	goto	l3372
  5721  11D3  3001               	movlw	1
  5722  11D4  00F8               	movwf	??__div_to_l_
  5723  11D5                     u5155:
  5724  11D5  1003               	clrc
  5725  11D6  0DA0               	rlf	__div_to_l_@quot,f
  5726  11D7  0DA1               	rlf	__div_to_l_@quot+1,f
  5727  11D8  0DA2               	rlf	__div_to_l_@quot+2,f
  5728  11D9  0DA3               	rlf	__div_to_l_@quot+3,f
  5729  11DA  0BF8               	decfsz	??__div_to_l_,f
  5730  11DB  29D5               	goto	u5155
  5731  11DC  3001               	movlw	1
  5732  11DD  02A5               	subwf	__div_to_l_@exp1,f
  5733  11DE  29D0               	goto	l490
  5734  11DF                     l3372:
  5735  11DF  0823               	movf	__div_to_l_@quot+3,w
  5736  11E0  00F3               	movwf	?__div_to_l_+3
  5737  11E1  0822               	movf	__div_to_l_@quot+2,w
  5738  11E2  00F2               	movwf	?__div_to_l_+2
  5739  11E3  0821               	movf	__div_to_l_@quot+1,w
  5740  11E4  00F1               	movwf	?__div_to_l_+1
  5741  11E5  0820               	movf	__div_to_l_@quot,w
  5742  11E6  00F0               	movwf	?__div_to_l_
  5743  11E7  0008               	return
  5744  11E8                     __end_of__div_to_l_:
  5745                           
  5746                           	psect	text16
  5747  1A9D                     __ptext16:	
  5748 ;; *************** function ___wmul *****************
  5749 ;; Defined at:
  5750 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul16.c"
  5751 ;; Parameters:    Size  Location     Type
  5752 ;;  multiplier      2    0[COMMON] unsigned int 
  5753 ;;  multiplicand    2    2[COMMON] unsigned int 
  5754 ;; Auto vars:     Size  Location     Type
  5755 ;;  product         2    4[COMMON] unsigned int 
  5756 ;; Return value:  Size  Location     Type
  5757 ;;                  2    0[COMMON] unsigned int 
  5758 ;; Registers used:
  5759 ;;		wreg, status,2, status,0
  5760 ;; Tracked objects:
  5761 ;;		On entry : 300/100
  5762 ;;		On exit  : 300/100
  5763 ;;		Unchanged: 300/0
  5764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5765 ;;      Params:         4       0       0       0       0
  5766 ;;      Locals:         2       0       0       0       0
  5767 ;;      Temps:          0       0       0       0       0
  5768 ;;      Totals:         6       0       0       0       0
  5769 ;;Total ram usage:        6 bytes
  5770 ;; Hardware stack levels used: 1
  5771 ;; This function calls:
  5772 ;;		Nothing
  5773 ;; This function is called by:
  5774 ;;		_sprintf
  5775 ;; This function uses a non-reentrant model
  5776 ;;
  5777                           
  5778  1A9D                     ___wmul:	
  5779                           ;psect for function ___wmul
  5780                           
  5781                           
  5782                           ;incstack = 0
  5783                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5784  1A9D  01F4               	clrf	___wmul@product
  5785  1A9E  01F5               	clrf	___wmul@product+1
  5786  1A9F                     l3378:
  5787  1A9F  1C70               	btfss	___wmul@multiplier,0
  5788  1AA0  2AA7               	goto	l309
  5789  1AA1  0872               	movf	___wmul@multiplicand,w
  5790  1AA2  07F4               	addwf	___wmul@product,f
  5791  1AA3  1803               	skipnc
  5792  1AA4  0AF5               	incf	___wmul@product+1,f
  5793  1AA5  0873               	movf	___wmul@multiplicand+1,w
  5794  1AA6  07F5               	addwf	___wmul@product+1,f
  5795  1AA7                     l309:
  5796  1AA7  3001               	movlw	1
  5797  1AA8                     u5185:
  5798  1AA8  1003               	clrc
  5799  1AA9  0DF2               	rlf	___wmul@multiplicand,f
  5800  1AAA  0DF3               	rlf	___wmul@multiplicand+1,f
  5801  1AAB  3EFF               	addlw	-1
  5802  1AAC  1D03               	skipz
  5803  1AAD  2AA8               	goto	u5185
  5804  1AAE  3001               	movlw	1
  5805  1AAF                     u5195:
  5806  1AAF  1003               	clrc
  5807  1AB0  0CF1               	rrf	___wmul@multiplier+1,f
  5808  1AB1  0CF0               	rrf	___wmul@multiplier,f
  5809  1AB2  3EFF               	addlw	-1
  5810  1AB3  1D03               	skipz
  5811  1AB4  2AAF               	goto	u5195
  5812  1AB5  0870               	movf	___wmul@multiplier,w
  5813  1AB6  0471               	iorwf	___wmul@multiplier+1,w
  5814  1AB7  1D03               	btfss	3,2
  5815  1AB8  2A9F               	goto	l3378
  5816  1AB9  0875               	movf	___wmul@product+1,w
  5817  1ABA  00F1               	movwf	?___wmul+1
  5818  1ABB  0874               	movf	___wmul@product,w
  5819  1ABC  00F0               	movwf	?___wmul
  5820  1ABD  0008               	return
  5821  1ABE                     __end_of___wmul:
  5822                           
  5823                           	psect	text17
  5824  1CD1                     __ptext17:	
  5825 ;; *************** function ___llmod *****************
  5826 ;; Defined at:
  5827 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\llmod.c"
  5828 ;; Parameters:    Size  Location     Type
  5829 ;;  divisor         4    0[COMMON] unsigned long 
  5830 ;;  dividend        4    4[COMMON] unsigned long 
  5831 ;; Auto vars:     Size  Location     Type
  5832 ;;  counter         1    9[COMMON] unsigned char 
  5833 ;; Return value:  Size  Location     Type
  5834 ;;                  4    0[COMMON] unsigned long 
  5835 ;; Registers used:
  5836 ;;		wreg, status,2, status,0
  5837 ;; Tracked objects:
  5838 ;;		On entry : 300/100
  5839 ;;		On exit  : 300/100
  5840 ;;		Unchanged: 300/0
  5841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5842 ;;      Params:         8       0       0       0       0
  5843 ;;      Locals:         1       0       0       0       0
  5844 ;;      Temps:          1       0       0       0       0
  5845 ;;      Totals:        10       0       0       0       0
  5846 ;;Total ram usage:       10 bytes
  5847 ;; Hardware stack levels used: 1
  5848 ;; This function calls:
  5849 ;;		Nothing
  5850 ;; This function is called by:
  5851 ;;		_sprintf
  5852 ;; This function uses a non-reentrant model
  5853 ;;
  5854                           
  5855  1CD1                     ___llmod:	
  5856                           ;psect for function ___llmod
  5857                           
  5858                           
  5859                           ;incstack = 0
  5860                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5861  1CD1  0873               	movf	___llmod@divisor+3,w
  5862  1CD2  0472               	iorwf	___llmod@divisor+2,w
  5863  1CD3  0471               	iorwf	___llmod@divisor+1,w
  5864  1CD4  0470               	iorwf	___llmod@divisor,w
  5865  1CD5  1903               	skipnz
  5866  1CD6  2D14               	goto	l3534
  5867  1CD7  01F9               	clrf	___llmod@counter
  5868  1CD8  0AF9               	incf	___llmod@counter,f
  5869  1CD9                     l3524:
  5870  1CD9  1BF3               	btfsc	___llmod@divisor+3,7
  5871  1CDA  2CE9               	goto	l3526
  5872  1CDB  3001               	movlw	1
  5873  1CDC  00F8               	movwf	??___llmod
  5874  1CDD                     u5575:
  5875  1CDD  1003               	clrc
  5876  1CDE  0DF0               	rlf	___llmod@divisor,f
  5877  1CDF  0DF1               	rlf	___llmod@divisor+1,f
  5878  1CE0  0DF2               	rlf	___llmod@divisor+2,f
  5879  1CE1  0DF3               	rlf	___llmod@divisor+3,f
  5880  1CE2  0BF8               	decfsz	??___llmod,f
  5881  1CE3  2CDD               	goto	u5575
  5882  1CE4  3001               	movlw	1
  5883  1CE5  00F8               	movwf	??___llmod
  5884  1CE6  0878               	movf	??___llmod,w
  5885  1CE7  07F9               	addwf	___llmod@counter,f
  5886  1CE8  2CD9               	goto	l3524
  5887  1CE9                     l3526:
  5888  1CE9  0873               	movf	___llmod@divisor+3,w
  5889  1CEA  0277               	subwf	___llmod@dividend+3,w
  5890  1CEB  1D03               	skipz
  5891  1CEC  2CF7               	goto	u5595
  5892  1CED  0872               	movf	___llmod@divisor+2,w
  5893  1CEE  0276               	subwf	___llmod@dividend+2,w
  5894  1CEF  1D03               	skipz
  5895  1CF0  2CF7               	goto	u5595
  5896  1CF1  0871               	movf	___llmod@divisor+1,w
  5897  1CF2  0275               	subwf	___llmod@dividend+1,w
  5898  1CF3  1D03               	skipz
  5899  1CF4  2CF7               	goto	u5595
  5900  1CF5  0870               	movf	___llmod@divisor,w
  5901  1CF6  0274               	subwf	___llmod@dividend,w
  5902  1CF7                     u5595:
  5903  1CF7  1C03               	skipc
  5904  1CF8  2D07               	goto	l3530
  5905  1CF9  0870               	movf	___llmod@divisor,w
  5906  1CFA  02F4               	subwf	___llmod@dividend,f
  5907  1CFB  0871               	movf	___llmod@divisor+1,w
  5908  1CFC  1C03               	skipc
  5909  1CFD  0F71               	incfsz	___llmod@divisor+1,w
  5910  1CFE  02F5               	subwf	___llmod@dividend+1,f
  5911  1CFF  0872               	movf	___llmod@divisor+2,w
  5912  1D00  1C03               	skipc
  5913  1D01  0F72               	incfsz	___llmod@divisor+2,w
  5914  1D02  02F6               	subwf	___llmod@dividend+2,f
  5915  1D03  0873               	movf	___llmod@divisor+3,w
  5916  1D04  1C03               	skipc
  5917  1D05  0F73               	incfsz	___llmod@divisor+3,w
  5918  1D06  02F7               	subwf	___llmod@dividend+3,f
  5919  1D07                     l3530:
  5920  1D07  3001               	movlw	1
  5921  1D08                     u5605:
  5922  1D08  1003               	clrc
  5923  1D09  0CF3               	rrf	___llmod@divisor+3,f
  5924  1D0A  0CF2               	rrf	___llmod@divisor+2,f
  5925  1D0B  0CF1               	rrf	___llmod@divisor+1,f
  5926  1D0C  0CF0               	rrf	___llmod@divisor,f
  5927  1D0D  3EFF               	addlw	-1
  5928  1D0E  1D03               	skipz
  5929  1D0F  2D08               	goto	u5605
  5930  1D10  3001               	movlw	1
  5931  1D11  02F9               	subwf	___llmod@counter,f
  5932  1D12  1D03               	btfss	3,2
  5933  1D13  2CE9               	goto	l3526
  5934  1D14                     l3534:
  5935  1D14  0877               	movf	___llmod@dividend+3,w
  5936  1D15  00F3               	movwf	?___llmod+3
  5937  1D16  0876               	movf	___llmod@dividend+2,w
  5938  1D17  00F2               	movwf	?___llmod+2
  5939  1D18  0875               	movf	___llmod@dividend+1,w
  5940  1D19  00F1               	movwf	?___llmod+1
  5941  1D1A  0874               	movf	___llmod@dividend,w
  5942  1D1B  00F0               	movwf	?___llmod
  5943  1D1C  0008               	return
  5944  1D1D                     __end_of___llmod:
  5945                           
  5946                           	psect	text18
  5947  1D77                     __ptext18:	
  5948 ;; *************** function ___lldiv *****************
  5949 ;; Defined at:
  5950 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
  5951 ;; Parameters:    Size  Location     Type
  5952 ;;  divisor         4    0[COMMON] unsigned long 
  5953 ;;  dividend        4    4[COMMON] unsigned long 
  5954 ;; Auto vars:     Size  Location     Type
  5955 ;;  quotient        4    9[COMMON] unsigned long 
  5956 ;;  counter         1   13[COMMON] unsigned char 
  5957 ;; Return value:  Size  Location     Type
  5958 ;;                  4    0[COMMON] unsigned long 
  5959 ;; Registers used:
  5960 ;;		wreg, status,2, status,0
  5961 ;; Tracked objects:
  5962 ;;		On entry : 300/100
  5963 ;;		On exit  : 300/100
  5964 ;;		Unchanged: 300/0
  5965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5966 ;;      Params:         8       0       0       0       0
  5967 ;;      Locals:         5       0       0       0       0
  5968 ;;      Temps:          1       0       0       0       0
  5969 ;;      Totals:        14       0       0       0       0
  5970 ;;Total ram usage:       14 bytes
  5971 ;; Hardware stack levels used: 1
  5972 ;; This function calls:
  5973 ;;		Nothing
  5974 ;; This function is called by:
  5975 ;;		_sprintf
  5976 ;; This function uses a non-reentrant model
  5977 ;;
  5978                           
  5979  1D77                     ___lldiv:	
  5980                           ;psect for function ___lldiv
  5981                           
  5982                           
  5983                           ;incstack = 0
  5984                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5985  1D77  3000               	movlw	0
  5986  1D78  00FC               	movwf	___lldiv@quotient+3
  5987  1D79  3000               	movlw	0
  5988  1D7A  00FB               	movwf	___lldiv@quotient+2
  5989  1D7B  3000               	movlw	0
  5990  1D7C  00FA               	movwf	___lldiv@quotient+1
  5991  1D7D  3000               	movlw	0
  5992  1D7E  00F9               	movwf	___lldiv@quotient
  5993  1D7F  0873               	movf	___lldiv@divisor+3,w
  5994  1D80  0472               	iorwf	___lldiv@divisor+2,w
  5995  1D81  0471               	iorwf	___lldiv@divisor+1,w
  5996  1D82  0470               	iorwf	___lldiv@divisor,w
  5997  1D83  1903               	skipnz
  5998  1D84  2DCC               	goto	l3438
  5999  1D85  01FD               	clrf	___lldiv@counter
  6000  1D86  0AFD               	incf	___lldiv@counter,f
  6001  1D87                     l3424:
  6002  1D87  1BF3               	btfsc	___lldiv@divisor+3,7
  6003  1D88  2D97               	goto	l3426
  6004  1D89  3001               	movlw	1
  6005  1D8A  00F8               	movwf	??___lldiv
  6006  1D8B                     u5295:
  6007  1D8B  1003               	clrc
  6008  1D8C  0DF0               	rlf	___lldiv@divisor,f
  6009  1D8D  0DF1               	rlf	___lldiv@divisor+1,f
  6010  1D8E  0DF2               	rlf	___lldiv@divisor+2,f
  6011  1D8F  0DF3               	rlf	___lldiv@divisor+3,f
  6012  1D90  0BF8               	decfsz	??___lldiv,f
  6013  1D91  2D8B               	goto	u5295
  6014  1D92  3001               	movlw	1
  6015  1D93  00F8               	movwf	??___lldiv
  6016  1D94  0878               	movf	??___lldiv,w
  6017  1D95  07FD               	addwf	___lldiv@counter,f
  6018  1D96  2D87               	goto	l3424
  6019  1D97                     l3426:
  6020  1D97  3001               	movlw	1
  6021  1D98  00F8               	movwf	??___lldiv
  6022  1D99                     u5315:
  6023  1D99  1003               	clrc
  6024  1D9A  0DF9               	rlf	___lldiv@quotient,f
  6025  1D9B  0DFA               	rlf	___lldiv@quotient+1,f
  6026  1D9C  0DFB               	rlf	___lldiv@quotient+2,f
  6027  1D9D  0DFC               	rlf	___lldiv@quotient+3,f
  6028  1D9E  0BF8               	decfsz	??___lldiv,f
  6029  1D9F  2D99               	goto	u5315
  6030  1DA0  0873               	movf	___lldiv@divisor+3,w
  6031  1DA1  0277               	subwf	___lldiv@dividend+3,w
  6032  1DA2  1D03               	skipz
  6033  1DA3  2DAE               	goto	u5325
  6034  1DA4  0872               	movf	___lldiv@divisor+2,w
  6035  1DA5  0276               	subwf	___lldiv@dividend+2,w
  6036  1DA6  1D03               	skipz
  6037  1DA7  2DAE               	goto	u5325
  6038  1DA8  0871               	movf	___lldiv@divisor+1,w
  6039  1DA9  0275               	subwf	___lldiv@dividend+1,w
  6040  1DAA  1D03               	skipz
  6041  1DAB  2DAE               	goto	u5325
  6042  1DAC  0870               	movf	___lldiv@divisor,w
  6043  1DAD  0274               	subwf	___lldiv@dividend,w
  6044  1DAE                     u5325:
  6045  1DAE  1C03               	skipc
  6046  1DAF  2DBF               	goto	l3434
  6047  1DB0  0870               	movf	___lldiv@divisor,w
  6048  1DB1  02F4               	subwf	___lldiv@dividend,f
  6049  1DB2  0871               	movf	___lldiv@divisor+1,w
  6050  1DB3  1C03               	skipc
  6051  1DB4  0F71               	incfsz	___lldiv@divisor+1,w
  6052  1DB5  02F5               	subwf	___lldiv@dividend+1,f
  6053  1DB6  0872               	movf	___lldiv@divisor+2,w
  6054  1DB7  1C03               	skipc
  6055  1DB8  0F72               	incfsz	___lldiv@divisor+2,w
  6056  1DB9  02F6               	subwf	___lldiv@dividend+2,f
  6057  1DBA  0873               	movf	___lldiv@divisor+3,w
  6058  1DBB  1C03               	skipc
  6059  1DBC  0F73               	incfsz	___lldiv@divisor+3,w
  6060  1DBD  02F7               	subwf	___lldiv@dividend+3,f
  6061  1DBE  1479               	bsf	___lldiv@quotient,0
  6062  1DBF                     l3434:
  6063  1DBF  3001               	movlw	1
  6064  1DC0                     u5335:
  6065  1DC0  1003               	clrc
  6066  1DC1  0CF3               	rrf	___lldiv@divisor+3,f
  6067  1DC2  0CF2               	rrf	___lldiv@divisor+2,f
  6068  1DC3  0CF1               	rrf	___lldiv@divisor+1,f
  6069  1DC4  0CF0               	rrf	___lldiv@divisor,f
  6070  1DC5  3EFF               	addlw	-1
  6071  1DC6  1D03               	skipz
  6072  1DC7  2DC0               	goto	u5335
  6073  1DC8  3001               	movlw	1
  6074  1DC9  02FD               	subwf	___lldiv@counter,f
  6075  1DCA  1D03               	btfss	3,2
  6076  1DCB  2D97               	goto	l3426
  6077  1DCC                     l3438:
  6078  1DCC  087C               	movf	___lldiv@quotient+3,w
  6079  1DCD  00F3               	movwf	?___lldiv+3
  6080  1DCE  087B               	movf	___lldiv@quotient+2,w
  6081  1DCF  00F2               	movwf	?___lldiv+2
  6082  1DD0  087A               	movf	___lldiv@quotient+1,w
  6083  1DD1  00F1               	movwf	?___lldiv+1
  6084  1DD2  0879               	movf	___lldiv@quotient,w
  6085  1DD3  00F0               	movwf	?___lldiv
  6086  1DD4  0008               	return
  6087  1DD5                     __end_of___lldiv:
  6088                           
  6089                           	psect	text19
  6090  10D4                     __ptext19:	
  6091 ;; *************** function ___fltol *****************
  6092 ;; Defined at:
  6093 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fltol.c"
  6094 ;; Parameters:    Size  Location     Type
  6095 ;;  f1              4   49[BANK0 ] unsigned long 
  6096 ;; Auto vars:     Size  Location     Type
  6097 ;;  exp1            1   13[COMMON] unsigned char 
  6098 ;;  sign1           1   12[COMMON] unsigned char 
  6099 ;; Return value:  Size  Location     Type
  6100 ;;                  4   49[BANK0 ] long 
  6101 ;; Registers used:
  6102 ;;		wreg, status,2, status,0
  6103 ;; Tracked objects:
  6104 ;;		On entry : 300/0
  6105 ;;		On exit  : 300/0
  6106 ;;		Unchanged: 0/0
  6107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6108 ;;      Params:         0       4       0       0       0
  6109 ;;      Locals:         2       0       0       0       0
  6110 ;;      Temps:          0       5       0       0       0
  6111 ;;      Totals:         2       9       0       0       0
  6112 ;;Total ram usage:       11 bytes
  6113 ;; Hardware stack levels used: 1
  6114 ;; This function calls:
  6115 ;;		Nothing
  6116 ;; This function is called by:
  6117 ;;		_sprintf
  6118 ;; This function uses a non-reentrant model
  6119 ;;
  6120                           
  6121  10D4                     ___fltol:	
  6122                           ;psect for function ___fltol
  6123                           
  6124                           
  6125                           ;incstack = 0
  6126                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6127  10D4  1003               	clrc
  6128  10D5  0D53               	rlf	___fltol@f1+2,w
  6129  10D6  0D54               	rlf	___fltol@f1+3,w
  6130  10D7  00D5               	movwf	??___fltol
  6131  10D8  0855               	movf	??___fltol,w
  6132  10D9  00FD               	movwf	___fltol@exp1
  6133  10DA  087D               	movf	___fltol@exp1,w
  6134  10DB  1D03               	btfss	3,2
  6135  10DC  28E6               	goto	l3488
  6136  10DD                     l3484:
  6137  10DD  3000               	movlw	0
  6138  10DE  00D4               	movwf	?___fltol+3
  6139  10DF  3000               	movlw	0
  6140  10E0  00D3               	movwf	?___fltol+2
  6141  10E1  3000               	movlw	0
  6142  10E2  00D2               	movwf	?___fltol+1
  6143  10E3  3000               	movlw	0
  6144  10E4  00D1               	movwf	?___fltol
  6145  10E5  0008               	return
  6146  10E6                     l3488:
  6147  10E6  0851               	movf	___fltol@f1,w
  6148  10E7  00D5               	movwf	??___fltol
  6149  10E8  0852               	movf	___fltol@f1+1,w
  6150  10E9  00D6               	movwf	??___fltol+1
  6151  10EA  0853               	movf	___fltol@f1+2,w
  6152  10EB  00D7               	movwf	??___fltol+2
  6153  10EC  0854               	movf	___fltol@f1+3,w
  6154  10ED  00D8               	movwf	??___fltol+3
  6155  10EE  301F               	movlw	31
  6156  10EF                     u5475:
  6157  10EF  1003               	clrc
  6158  10F0  0CD8               	rrf	??___fltol+3,f
  6159  10F1  0CD7               	rrf	??___fltol+2,f
  6160  10F2  0CD6               	rrf	??___fltol+1,f
  6161  10F3  0CD5               	rrf	??___fltol,f
  6162  10F4  3EFF               	addlw	-1
  6163  10F5  1D03               	skipz
  6164  10F6  28EF               	goto	u5475
  6165  10F7  0855               	movf	??___fltol,w
  6166  10F8  00D9               	movwf	??___fltol+4
  6167  10F9  0859               	movf	??___fltol+4,w
  6168  10FA  00FC               	movwf	___fltol@sign1
  6169  10FB  17D3               	bsf	___fltol@f1+2,7
  6170  10FC  30FF               	movlw	255
  6171  10FD  05D1               	andwf	___fltol@f1,f
  6172  10FE  30FF               	movlw	255
  6173  10FF  05D2               	andwf	___fltol@f1+1,f
  6174  1100  30FF               	movlw	255
  6175  1101  05D3               	andwf	___fltol@f1+2,f
  6176  1102  3000               	movlw	0
  6177  1103  05D4               	andwf	___fltol@f1+3,f
  6178  1104  3096               	movlw	150
  6179  1105  02FD               	subwf	___fltol@exp1,f
  6180  1106  1FFD               	btfss	___fltol@exp1,7
  6181  1107  291D               	goto	l3506
  6182  1108  087D               	movf	___fltol@exp1,w
  6183  1109  3A80               	xorlw	128
  6184  110A  3E97               	addlw	151
  6185  110B  1C03               	btfss	3,0
  6186  110C  28DD               	goto	l3484
  6187  110D                     l3504:
  6188  110D  3001               	movlw	1
  6189  110E                     u5505:
  6190  110E  1003               	clrc
  6191  110F  0CD4               	rrf	___fltol@f1+3,f
  6192  1110  0CD3               	rrf	___fltol@f1+2,f
  6193  1111  0CD2               	rrf	___fltol@f1+1,f
  6194  1112  0CD1               	rrf	___fltol@f1,f
  6195  1113  3EFF               	addlw	-1
  6196  1114  1D03               	skipz
  6197  1115  290E               	goto	u5505
  6198  1116  3001               	movlw	1
  6199  1117  00D5               	movwf	??___fltol
  6200  1118  0855               	movf	??___fltol,w
  6201  1119  07FD               	addwf	___fltol@exp1,f
  6202  111A  1903               	btfsc	3,2
  6203  111B  2930               	goto	l3514
  6204  111C  290D               	goto	l3504
  6205  111D                     l3506:
  6206  111D  3020               	movlw	32
  6207  111E  027D               	subwf	___fltol@exp1,w
  6208  111F  1803               	btfsc	3,0
  6209  1120  28DD               	goto	l3484
  6210  1121                     l519:
  6211  1121  087D               	movf	___fltol@exp1,w
  6212  1122  1903               	btfsc	3,2
  6213  1123  2930               	goto	l3514
  6214  1124  3001               	movlw	1
  6215  1125  00D5               	movwf	??___fltol
  6216  1126                     u5535:
  6217  1126  1003               	clrc
  6218  1127  0DD1               	rlf	___fltol@f1,f
  6219  1128  0DD2               	rlf	___fltol@f1+1,f
  6220  1129  0DD3               	rlf	___fltol@f1+2,f
  6221  112A  0DD4               	rlf	___fltol@f1+3,f
  6222  112B  0BD5               	decfsz	??___fltol,f
  6223  112C  2926               	goto	u5535
  6224  112D  3001               	movlw	1
  6225  112E  02FD               	subwf	___fltol@exp1,f
  6226  112F  2921               	goto	l519
  6227  1130                     l3514:
  6228  1130  087C               	movf	___fltol@sign1,w
  6229  1131  1903               	btfsc	3,2
  6230  1132  0008               	return
  6231  1133  09D1               	comf	___fltol@f1,f
  6232  1134  09D2               	comf	___fltol@f1+1,f
  6233  1135  09D3               	comf	___fltol@f1+2,f
  6234  1136  09D4               	comf	___fltol@f1+3,f
  6235  1137  0AD1               	incf	___fltol@f1,f
  6236  1138  1903               	skipnz
  6237  1139  0AD2               	incf	___fltol@f1+1,f
  6238  113A  1903               	skipnz
  6239  113B  0AD3               	incf	___fltol@f1+2,f
  6240  113C  1903               	skipnz
  6241  113D  0AD4               	incf	___fltol@f1+3,f
  6242  113E  0008               	return
  6243  113F                     __end_of___fltol:
  6244                           
  6245                           	psect	text20
  6246  1A5E                     __ptext20:	
  6247 ;; *************** function ___flsub *****************
  6248 ;; Defined at:
  6249 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcadd.c"
  6250 ;; Parameters:    Size  Location     Type
  6251 ;;  a               4   70[BANK0 ] long 
  6252 ;;  b               4   74[BANK0 ] long 
  6253 ;; Auto vars:     Size  Location     Type
  6254 ;;		None
  6255 ;; Return value:  Size  Location     Type
  6256 ;;                  4   70[BANK0 ] long 
  6257 ;; Registers used:
  6258 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6259 ;; Tracked objects:
  6260 ;;		On entry : 300/0
  6261 ;;		On exit  : 300/0
  6262 ;;		Unchanged: 0/0
  6263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6264 ;;      Params:         0       8       0       0       0
  6265 ;;      Locals:         0       0       0       0       0
  6266 ;;      Temps:          0       0       0       0       0
  6267 ;;      Totals:         0       8       0       0       0
  6268 ;;Total ram usage:        8 bytes
  6269 ;; Hardware stack levels used: 1
  6270 ;; Hardware stack levels required when called: 1
  6271 ;; This function calls:
  6272 ;;		___fladd
  6273 ;; This function is called by:
  6274 ;;		_calc
  6275 ;;		_sprintf
  6276 ;; This function uses a non-reentrant model
  6277 ;;
  6278                           
  6279  1A5E                     ___flsub:	
  6280                           ;psect for function ___flsub
  6281                           
  6282                           
  6283                           ;incstack = 0
  6284                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6285  1A5E  3080               	movlw	128
  6286  1A5F  06E9               	xorwf	___flsub@a+3,f
  6287  1A60  086D               	movf	___flsub@b+3,w
  6288  1A61  00D5               	movwf	___fladd@b+3
  6289  1A62  086C               	movf	___flsub@b+2,w
  6290  1A63  00D4               	movwf	___fladd@b+2
  6291  1A64  086B               	movf	___flsub@b+1,w
  6292  1A65  00D3               	movwf	___fladd@b+1
  6293  1A66  086A               	movf	___flsub@b,w
  6294  1A67  00D2               	movwf	___fladd@b
  6295  1A68  0869               	movf	___flsub@a+3,w
  6296  1A69  00D9               	movwf	___fladd@a+3
  6297  1A6A  0868               	movf	___flsub@a+2,w
  6298  1A6B  00D8               	movwf	___fladd@a+2
  6299  1A6C  0867               	movf	___flsub@a+1,w
  6300  1A6D  00D7               	movwf	___fladd@a+1
  6301  1A6E  0866               	movf	___flsub@a,w
  6302  1A6F  00D6               	movwf	___fladd@a
  6303  1A70  120A  158A  2031   	fcall	___fladd
  6304  1A73  0855               	movf	?___fladd+3,w
  6305  1A74  00E9               	movwf	?___flsub+3
  6306  1A75  0854               	movf	?___fladd+2,w
  6307  1A76  00E8               	movwf	?___flsub+2
  6308  1A77  0853               	movf	?___fladd+1,w
  6309  1A78  00E7               	movwf	?___flsub+1
  6310  1A79  0852               	movf	?___fladd,w
  6311  1A7A  00E6               	movwf	?___flsub
  6312  1A7B  0008               	return
  6313  1A7C                     __end_of___flsub:
  6314                           
  6315                           	psect	text21
  6316  0831                     __ptext21:	
  6317 ;; *************** function ___fladd *****************
  6318 ;; Defined at:
  6319 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcadd.c"
  6320 ;; Parameters:    Size  Location     Type
  6321 ;;  b               4   50[BANK0 ] long 
  6322 ;;  a               4   54[BANK0 ] long 
  6323 ;; Auto vars:     Size  Location     Type
  6324 ;;  grs             1   69[BANK0 ] unsigned char 
  6325 ;;  bexp            1   68[BANK0 ] unsigned char 
  6326 ;;  aexp            1   67[BANK0 ] unsigned char 
  6327 ;;  signs           1   66[BANK0 ] unsigned char 
  6328 ;; Return value:  Size  Location     Type
  6329 ;;                  4   50[BANK0 ] unsigned char 
  6330 ;; Registers used:
  6331 ;;		wreg, status,2, status,0, btemp+1
  6332 ;; Tracked objects:
  6333 ;;		On entry : 300/0
  6334 ;;		On exit  : 300/0
  6335 ;;		Unchanged: 0/0
  6336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6337 ;;      Params:         0       8       0       0       0
  6338 ;;      Locals:         0       4       0       0       0
  6339 ;;      Temps:          0       8       0       0       0
  6340 ;;      Totals:         0      20       0       0       0
  6341 ;;Total ram usage:       20 bytes
  6342 ;; Hardware stack levels used: 1
  6343 ;; This function calls:
  6344 ;;		Nothing
  6345 ;; This function is called by:
  6346 ;;		_calc
  6347 ;;		_sprintf
  6348 ;;		___flsub
  6349 ;; This function uses a non-reentrant model
  6350 ;;
  6351                           
  6352  0831                     ___fladd:	
  6353                           ;psect for function ___fladd
  6354                           
  6355                           
  6356                           ;incstack = 0
  6357                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6358  0831  0855               	movf	___fladd@b+3,w
  6359  0832  3980               	andlw	128
  6360  0833  00DA               	movwf	??___fladd
  6361  0834  085A               	movf	??___fladd,w
  6362  0835  00E2               	movwf	___fladd@signs
  6363  0836  0855               	movf	___fladd@b+3,w
  6364  0837  00DA               	movwf	??___fladd
  6365  0838  075A               	addwf	??___fladd,w
  6366  0839  00DB               	movwf	??___fladd+1
  6367  083A  085B               	movf	??___fladd+1,w
  6368  083B  00E4               	movwf	___fladd@bexp
  6369  083C  1BD4               	btfsc	___fladd@b+2,7
  6370  083D  1464               	bsf	___fladd@bexp,0
  6371  083E  0864               	movf	___fladd@bexp,w
  6372  083F  1903               	btfsc	3,2
  6373  0840  284F               	goto	l2856
  6374  0841  0A64               	incf	___fladd@bexp,w
  6375  0842  1D03               	btfss	3,2
  6376  0843  284C               	goto	l2852
  6377  0844  3000               	movlw	0
  6378  0845  00D5               	movwf	___fladd@b+3
  6379  0846  3000               	movlw	0
  6380  0847  00D4               	movwf	___fladd@b+2
  6381  0848  3000               	movlw	0
  6382  0849  00D3               	movwf	___fladd@b+1
  6383  084A  3000               	movlw	0
  6384  084B  00D2               	movwf	___fladd@b
  6385  084C                     l2852:
  6386  084C  17D4               	bsf	___fladd@b+2,7
  6387  084D  01D5               	clrf	___fladd@b+3
  6388  084E  2857               	goto	l2858
  6389  084F                     l2856:
  6390  084F  3000               	movlw	0
  6391  0850  00D5               	movwf	___fladd@b+3
  6392  0851  3000               	movlw	0
  6393  0852  00D4               	movwf	___fladd@b+2
  6394  0853  3000               	movlw	0
  6395  0854  00D3               	movwf	___fladd@b+1
  6396  0855  3000               	movlw	0
  6397  0856  00D2               	movwf	___fladd@b
  6398  0857                     l2858:
  6399  0857  0859               	movf	___fladd@a+3,w
  6400  0858  3980               	andlw	128
  6401  0859  00DA               	movwf	??___fladd
  6402  085A  085A               	movf	??___fladd,w
  6403  085B  00E3               	movwf	___fladd@aexp
  6404  085C  0863               	movf	___fladd@aexp,w
  6405  085D  0662               	xorwf	___fladd@signs,w
  6406  085E  1D03               	btfss	3,2
  6407  085F  1762               	bsf	___fladd@signs,6
  6408  0860  0859               	movf	___fladd@a+3,w
  6409  0861  00DA               	movwf	??___fladd
  6410  0862  075A               	addwf	??___fladd,w
  6411  0863  00DB               	movwf	??___fladd+1
  6412  0864  085B               	movf	??___fladd+1,w
  6413  0865  00E3               	movwf	___fladd@aexp
  6414  0866  1BD8               	btfsc	___fladd@a+2,7
  6415  0867  1463               	bsf	___fladd@aexp,0
  6416  0868  0863               	movf	___fladd@aexp,w
  6417  0869  1903               	btfsc	3,2
  6418  086A  2879               	goto	l2880
  6419  086B  0A63               	incf	___fladd@aexp,w
  6420  086C  1D03               	btfss	3,2
  6421  086D  2876               	goto	l2876
  6422  086E  3000               	movlw	0
  6423  086F  00D9               	movwf	___fladd@a+3
  6424  0870  3000               	movlw	0
  6425  0871  00D8               	movwf	___fladd@a+2
  6426  0872  3000               	movlw	0
  6427  0873  00D7               	movwf	___fladd@a+1
  6428  0874  3000               	movlw	0
  6429  0875  00D6               	movwf	___fladd@a
  6430  0876                     l2876:
  6431  0876  17D8               	bsf	___fladd@a+2,7
  6432  0877  01D9               	clrf	___fladd@a+3
  6433  0878  2881               	goto	l636
  6434  0879                     l2880:
  6435  0879  3000               	movlw	0
  6436  087A  00D9               	movwf	___fladd@a+3
  6437  087B  3000               	movlw	0
  6438  087C  00D8               	movwf	___fladd@a+2
  6439  087D  3000               	movlw	0
  6440  087E  00D7               	movwf	___fladd@a+1
  6441  087F  3000               	movlw	0
  6442  0880  00D6               	movwf	___fladd@a
  6443  0881                     l636:
  6444  0881  0864               	movf	___fladd@bexp,w
  6445  0882  0263               	subwf	___fladd@aexp,w
  6446  0883  1803               	skipnc
  6447  0884  28C7               	goto	l2916
  6448  0885  1F62               	btfss	___fladd@signs,6
  6449  0886  288B               	goto	l2886
  6450  0887  3080               	movlw	128
  6451  0888  00DA               	movwf	??___fladd
  6452  0889  085A               	movf	??___fladd,w
  6453  088A  06E2               	xorwf	___fladd@signs,f
  6454  088B                     l2886:
  6455  088B  0864               	movf	___fladd@bexp,w
  6456  088C  00DA               	movwf	??___fladd
  6457  088D  085A               	movf	??___fladd,w
  6458  088E  00E5               	movwf	___fladd@grs
  6459  088F  0863               	movf	___fladd@aexp,w
  6460  0890  00DA               	movwf	??___fladd
  6461  0891  085A               	movf	??___fladd,w
  6462  0892  00E4               	movwf	___fladd@bexp
  6463  0893  0865               	movf	___fladd@grs,w
  6464  0894  00DA               	movwf	??___fladd
  6465  0895  085A               	movf	??___fladd,w
  6466  0896  00E3               	movwf	___fladd@aexp
  6467  0897  0852               	movf	___fladd@b,w
  6468  0898  00DA               	movwf	??___fladd
  6469  0899  085A               	movf	??___fladd,w
  6470  089A  00E5               	movwf	___fladd@grs
  6471  089B  0856               	movf	___fladd@a,w
  6472  089C  00DA               	movwf	??___fladd
  6473  089D  085A               	movf	??___fladd,w
  6474  089E  00D2               	movwf	___fladd@b
  6475  089F  0865               	movf	___fladd@grs,w
  6476  08A0  00DA               	movwf	??___fladd
  6477  08A1  085A               	movf	??___fladd,w
  6478  08A2  00D6               	movwf	___fladd@a
  6479  08A3  0853               	movf	___fladd@b+1,w
  6480  08A4  00DA               	movwf	??___fladd
  6481  08A5  085A               	movf	??___fladd,w
  6482  08A6  00E5               	movwf	___fladd@grs
  6483  08A7  0857               	movf	___fladd@a+1,w
  6484  08A8  00DA               	movwf	??___fladd
  6485  08A9  085A               	movf	??___fladd,w
  6486  08AA  00D3               	movwf	___fladd@b+1
  6487  08AB  0865               	movf	___fladd@grs,w
  6488  08AC  00DA               	movwf	??___fladd
  6489  08AD  085A               	movf	??___fladd,w
  6490  08AE  00D7               	movwf	___fladd@a+1
  6491  08AF  0854               	movf	___fladd@b+2,w
  6492  08B0  00DA               	movwf	??___fladd
  6493  08B1  085A               	movf	??___fladd,w
  6494  08B2  00E5               	movwf	___fladd@grs
  6495  08B3  0858               	movf	___fladd@a+2,w
  6496  08B4  00DA               	movwf	??___fladd
  6497  08B5  085A               	movf	??___fladd,w
  6498  08B6  00D4               	movwf	___fladd@b+2
  6499  08B7  0865               	movf	___fladd@grs,w
  6500  08B8  00DA               	movwf	??___fladd
  6501  08B9  085A               	movf	??___fladd,w
  6502  08BA  00D8               	movwf	___fladd@a+2
  6503  08BB  0855               	movf	___fladd@b+3,w
  6504  08BC  00DA               	movwf	??___fladd
  6505  08BD  085A               	movf	??___fladd,w
  6506  08BE  00E5               	movwf	___fladd@grs
  6507  08BF  0859               	movf	___fladd@a+3,w
  6508  08C0  00DA               	movwf	??___fladd
  6509  08C1  085A               	movf	??___fladd,w
  6510  08C2  00D5               	movwf	___fladd@b+3
  6511  08C3  0865               	movf	___fladd@grs,w
  6512  08C4  00DA               	movwf	??___fladd
  6513  08C5  085A               	movf	??___fladd,w
  6514  08C6  00D9               	movwf	___fladd@a+3
  6515  08C7                     l2916:
  6516  08C7  01E5               	clrf	___fladd@grs
  6517  08C8  0863               	movf	___fladd@aexp,w
  6518  08C9  00DA               	movwf	??___fladd
  6519  08CA  01DB               	clrf	??___fladd+1
  6520  08CB  085B               	movf	??___fladd+1,w
  6521  08CC  00DD               	movwf	??___fladd+3
  6522  08CD  0864               	movf	___fladd@bexp,w
  6523  08CE  025A               	subwf	??___fladd,w
  6524  08CF  00DC               	movwf	??___fladd+2
  6525  08D0  1C03               	skipc
  6526  08D1  03DD               	decf	??___fladd+3,f
  6527  08D2  085D               	movf	??___fladd+3,w
  6528  08D3  3A80               	xorlw	128
  6529  08D4  00FF               	movwf	127
  6530  08D5  3080               	movlw	128
  6531  08D6  027F               	subwf	127,w
  6532  08D7  1D03               	skipz
  6533  08D8  28DB               	goto	u3915
  6534  08D9  301A               	movlw	26
  6535  08DA  025C               	subwf	??___fladd+2,w
  6536  08DB                     u3915:
  6537  08DB  1C03               	skipc
  6538  08DC  2914               	goto	l2934
  6539  08DD  1283               	bcf	3,5	;RP0=0, select bank0
  6540  08DE  1303               	bcf	3,6	;RP1=0, select bank0
  6541  08DF  0855               	movf	___fladd@b+3,w
  6542  08E0  0454               	iorwf	___fladd@b+2,w
  6543  08E1  0453               	iorwf	___fladd@b+1,w
  6544  08E2  0452               	iorwf	___fladd@b,w
  6545  08E3  1903               	btfsc	3,2
  6546  08E4  28E7               	goto	u3920
  6547  08E5  3001               	movlw	1
  6548  08E6  28E8               	goto	u3930
  6549  08E7                     u3920:
  6550  08E7  3000               	movlw	0
  6551  08E8                     u3930:
  6552  08E8  00DA               	movwf	??___fladd
  6553  08E9  085A               	movf	??___fladd,w
  6554  08EA  00E5               	movwf	___fladd@grs
  6555  08EB  3000               	movlw	0
  6556  08EC  00D5               	movwf	___fladd@b+3
  6557  08ED  3000               	movlw	0
  6558  08EE  00D4               	movwf	___fladd@b+2
  6559  08EF  3000               	movlw	0
  6560  08F0  00D3               	movwf	___fladd@b+1
  6561  08F1  3000               	movlw	0
  6562  08F2  00D2               	movwf	___fladd@b
  6563  08F3  0863               	movf	___fladd@aexp,w
  6564  08F4  00DA               	movwf	??___fladd
  6565  08F5  085A               	movf	??___fladd,w
  6566  08F6  00E4               	movwf	___fladd@bexp
  6567  08F7  291A               	goto	l640
  6568  08F8                     l642:
  6569  08F8  1C65               	btfss	___fladd@grs,0
  6570  08F9  2903               	goto	l2924
  6571  08FA  0865               	movf	___fladd@grs,w
  6572  08FB  00DA               	movwf	??___fladd
  6573  08FC  1003               	clrc
  6574  08FD  0C5A               	rrf	??___fladd,w
  6575  08FE  3801               	iorlw	1
  6576  08FF  00DB               	movwf	??___fladd+1
  6577  0900  085B               	movf	??___fladd+1,w
  6578  0901  00E5               	movwf	___fladd@grs
  6579  0902  2905               	goto	l2926
  6580  0903                     l2924:
  6581  0903  1003               	clrc
  6582  0904  0CE5               	rrf	___fladd@grs,f
  6583  0905                     l2926:
  6584  0905  1852               	btfsc	___fladd@b,0
  6585  0906  17E5               	bsf	___fladd@grs,7
  6586  0907  3001               	movlw	1
  6587  0908  00DA               	movwf	??___fladd
  6588  0909                     u3965:
  6589  0909  0D55               	rlf	___fladd@b+3,w
  6590  090A  0CD5               	rrf	___fladd@b+3,f
  6591  090B  0CD4               	rrf	___fladd@b+2,f
  6592  090C  0CD3               	rrf	___fladd@b+1,f
  6593  090D  0CD2               	rrf	___fladd@b,f
  6594  090E  0BDA               	decfsz	??___fladd& (0+127),f
  6595  090F  2909               	goto	u3965
  6596  0910  3001               	movlw	1
  6597  0911  00DA               	movwf	??___fladd
  6598  0912  085A               	movf	??___fladd,w
  6599  0913  07E4               	addwf	___fladd@bexp,f
  6600  0914                     l2934:
  6601  0914  1283               	bcf	3,5	;RP0=0, select bank0
  6602  0915  1303               	bcf	3,6	;RP1=0, select bank0
  6603  0916  0863               	movf	___fladd@aexp,w
  6604  0917  0264               	subwf	___fladd@bexp,w
  6605  0918  1C03               	skipc
  6606  0919  28F8               	goto	l642
  6607  091A                     l640:
  6608  091A  1B62               	btfsc	___fladd@signs,6
  6609  091B  295B               	goto	l2960
  6610  091C  0864               	movf	___fladd@bexp,w
  6611  091D  1D03               	btfss	3,2
  6612  091E  2928               	goto	l2942
  6613  091F  3000               	movlw	0
  6614  0920  00D5               	movwf	?___fladd+3
  6615  0921  3000               	movlw	0
  6616  0922  00D4               	movwf	?___fladd+2
  6617  0923  3000               	movlw	0
  6618  0924  00D3               	movwf	?___fladd+1
  6619  0925  3000               	movlw	0
  6620  0926  00D2               	movwf	?___fladd
  6621  0927  0008               	return
  6622  0928                     l2942:
  6623  0928  0856               	movf	___fladd@a,w
  6624  0929  07D2               	addwf	___fladd@b,f
  6625  092A  0857               	movf	___fladd@a+1,w
  6626  092B  1103               	clrz
  6627  092C  1803               	skipnc
  6628  092D  3E01               	addlw	1
  6629  092E  1D03               	btfss	3,2
  6630  092F  07D3               	addwf	___fladd@b+1,f
  6631  0930  0858               	movf	___fladd@a+2,w
  6632  0931  1103               	clrz
  6633  0932  1803               	skipnc
  6634  0933  3E01               	addlw	1
  6635  0934  1D03               	btfss	3,2
  6636  0935  07D4               	addwf	___fladd@b+2,f
  6637  0936  0859               	movf	___fladd@a+3,w
  6638  0937  1103               	clrz
  6639  0938  1803               	skipnc
  6640  0939  3E01               	addlw	1
  6641  093A  1D03               	btfss	3,2
  6642  093B  07D5               	addwf	___fladd@b+3,f
  6643  093C  1C55               	btfss	___fladd@b+3,0
  6644  093D  29FD               	goto	l2994
  6645  093E  1C65               	btfss	___fladd@grs,0
  6646  093F  2949               	goto	l2950
  6647  0940  0865               	movf	___fladd@grs,w
  6648  0941  00DA               	movwf	??___fladd
  6649  0942  1003               	clrc
  6650  0943  0C5A               	rrf	??___fladd,w
  6651  0944  3801               	iorlw	1
  6652  0945  00DB               	movwf	??___fladd+1
  6653  0946  085B               	movf	??___fladd+1,w
  6654  0947  00E5               	movwf	___fladd@grs
  6655  0948  294B               	goto	l2952
  6656  0949                     l2950:
  6657  0949  1003               	clrc
  6658  094A  0CE5               	rrf	___fladd@grs,f
  6659  094B                     l2952:
  6660  094B  1852               	btfsc	___fladd@b,0
  6661  094C  17E5               	bsf	___fladd@grs,7
  6662  094D  3001               	movlw	1
  6663  094E  00DA               	movwf	??___fladd
  6664  094F                     u4045:
  6665  094F  0D55               	rlf	___fladd@b+3,w
  6666  0950  0CD5               	rrf	___fladd@b+3,f
  6667  0951  0CD4               	rrf	___fladd@b+2,f
  6668  0952  0CD3               	rrf	___fladd@b+1,f
  6669  0953  0CD2               	rrf	___fladd@b,f
  6670  0954  0BDA               	decfsz	??___fladd& (0+127),f
  6671  0955  294F               	goto	u4045
  6672  0956  3001               	movlw	1
  6673  0957  00DA               	movwf	??___fladd
  6674  0958  085A               	movf	??___fladd,w
  6675  0959  07E4               	addwf	___fladd@bexp,f
  6676  095A  29FD               	goto	l2994
  6677  095B                     l2960:
  6678  095B  0855               	movf	___fladd@b+3,w
  6679  095C  3A80               	xorlw	128
  6680  095D  00FF               	movwf	127
  6681  095E  0859               	movf	___fladd@a+3,w
  6682  095F  3A80               	xorlw	128
  6683  0960  027F               	subwf	127,w
  6684  0961  1D03               	skipz
  6685  0962  296D               	goto	u4053
  6686  0963  0858               	movf	___fladd@a+2,w
  6687  0964  0254               	subwf	___fladd@b+2,w
  6688  0965  1D03               	skipz
  6689  0966  296D               	goto	u4053
  6690  0967  0857               	movf	___fladd@a+1,w
  6691  0968  0253               	subwf	___fladd@b+1,w
  6692  0969  1D03               	skipz
  6693  096A  296D               	goto	u4053
  6694  096B  0856               	movf	___fladd@a,w
  6695  096C  0252               	subwf	___fladd@b,w
  6696  096D                     u4053:
  6697  096D  1803               	skipnc
  6698  096E  29C5               	goto	l2970
  6699  096F  30FF               	movlw	255
  6700  0970  00DA               	movwf	??___fladd
  6701  0971  30FF               	movlw	255
  6702  0972  00DB               	movwf	??___fladd+1
  6703  0973  30FF               	movlw	255
  6704  0974  00DC               	movwf	??___fladd+2
  6705  0975  30FF               	movlw	255
  6706  0976  00DD               	movwf	??___fladd+3
  6707  0977  0856               	movf	___fladd@a,w
  6708  0978  00DE               	movwf	??___fladd+4
  6709  0979  0857               	movf	___fladd@a+1,w
  6710  097A  00DF               	movwf	??___fladd+5
  6711  097B  0858               	movf	___fladd@a+2,w
  6712  097C  00E0               	movwf	??___fladd+6
  6713  097D  0859               	movf	___fladd@a+3,w
  6714  097E  00E1               	movwf	??___fladd+7
  6715  097F  0852               	movf	___fladd@b,w
  6716  0980  02DE               	subwf	??___fladd+4,f
  6717  0981  0853               	movf	___fladd@b+1,w
  6718  0982  1C03               	skipc
  6719  0983  0F53               	incfsz	___fladd@b+1,w
  6720  0984  2986               	goto	u4061
  6721  0985  2987               	goto	u4062
  6722  0986                     u4061:
  6723  0986  02DF               	subwf	??___fladd+5,f
  6724  0987                     u4062:
  6725  0987  0854               	movf	___fladd@b+2,w
  6726  0988  1C03               	skipc
  6727  0989  0F54               	incfsz	___fladd@b+2,w
  6728  098A  298C               	goto	u4063
  6729  098B  298D               	goto	u4064
  6730  098C                     u4063:
  6731  098C  02E0               	subwf	??___fladd+6,f
  6732  098D                     u4064:
  6733  098D  0855               	movf	___fladd@b+3,w
  6734  098E  1C03               	skipc
  6735  098F  0F55               	incfsz	___fladd@b+3,w
  6736  0990  2992               	goto	u4065
  6737  0991  2993               	goto	u4066
  6738  0992                     u4065:
  6739  0992  02E1               	subwf	??___fladd+7,f
  6740  0993                     u4066:
  6741  0993  085E               	movf	??___fladd+4,w
  6742  0994  07DA               	addwf	??___fladd,f
  6743  0995  085F               	movf	??___fladd+5,w
  6744  0996  1803               	skipnc
  6745  0997  0F5F               	incfsz	??___fladd+5,w
  6746  0998  299A               	goto	u4070
  6747  0999  299B               	goto	u4071
  6748  099A                     u4070:
  6749  099A  07DB               	addwf	??___fladd+1,f
  6750  099B                     u4071:
  6751  099B  0860               	movf	??___fladd+6,w
  6752  099C  1803               	skipnc
  6753  099D  0F60               	incfsz	??___fladd+6,w
  6754  099E  29A0               	goto	u4072
  6755  099F  29A1               	goto	u4073
  6756  09A0                     u4072:
  6757  09A0  07DC               	addwf	??___fladd+2,f
  6758  09A1                     u4073:
  6759  09A1  0861               	movf	??___fladd+7,w
  6760  09A2  1803               	skipnc
  6761  09A3  0A61               	incf	??___fladd+7,w
  6762  09A4  07DD               	addwf	??___fladd+3,f
  6763  09A5  085D               	movf	??___fladd+3,w
  6764  09A6  00D5               	movwf	___fladd@b+3
  6765  09A7  085C               	movf	??___fladd+2,w
  6766  09A8  00D4               	movwf	___fladd@b+2
  6767  09A9  085B               	movf	??___fladd+1,w
  6768  09AA  00D3               	movwf	___fladd@b+1
  6769  09AB  085A               	movf	??___fladd,w
  6770  09AC  00D2               	movwf	___fladd@b
  6771  09AD  3080               	movlw	128
  6772  09AE  00DA               	movwf	??___fladd
  6773  09AF  085A               	movf	??___fladd,w
  6774  09B0  06E2               	xorwf	___fladd@signs,f
  6775  09B1  09E5               	comf	___fladd@grs,f
  6776  09B2  0AE5               	incf	___fladd@grs,f
  6777  09B3  0865               	movf	___fladd@grs,w
  6778  09B4  1D03               	btfss	3,2
  6779  09B5  29D3               	goto	l657
  6780  09B6  3001               	movlw	1
  6781  09B7  07D2               	addwf	___fladd@b,f
  6782  09B8  3000               	movlw	0
  6783  09B9  1803               	skipnc
  6784  09BA  3001               	movlw	1
  6785  09BB  07D3               	addwf	___fladd@b+1,f
  6786  09BC  3000               	movlw	0
  6787  09BD  1803               	skipnc
  6788  09BE  3001               	movlw	1
  6789  09BF  07D4               	addwf	___fladd@b+2,f
  6790  09C0  3000               	movlw	0
  6791  09C1  1803               	skipnc
  6792  09C2  3001               	movlw	1
  6793  09C3  07D5               	addwf	___fladd@b+3,f
  6794  09C4  29D3               	goto	l657
  6795  09C5                     l2970:
  6796  09C5  0856               	movf	___fladd@a,w
  6797  09C6  02D2               	subwf	___fladd@b,f
  6798  09C7  0857               	movf	___fladd@a+1,w
  6799  09C8  1C03               	skipc
  6800  09C9  0F57               	incfsz	___fladd@a+1,w
  6801  09CA  02D3               	subwf	___fladd@b+1,f
  6802  09CB  0858               	movf	___fladd@a+2,w
  6803  09CC  1C03               	skipc
  6804  09CD  0F58               	incfsz	___fladd@a+2,w
  6805  09CE  02D4               	subwf	___fladd@b+2,f
  6806  09CF  0859               	movf	___fladd@a+3,w
  6807  09D0  1C03               	skipc
  6808  09D1  0F59               	incfsz	___fladd@a+3,w
  6809  09D2  02D5               	subwf	___fladd@b+3,f
  6810  09D3                     l657:
  6811  09D3  0855               	movf	___fladd@b+3,w
  6812  09D4  0454               	iorwf	___fladd@b+2,w
  6813  09D5  0453               	iorwf	___fladd@b+1,w
  6814  09D6  0452               	iorwf	___fladd@b,w
  6815  09D7  1D03               	skipz
  6816  09D8  29FB               	goto	l2992
  6817  09D9  0865               	movf	___fladd@grs,w
  6818  09DA  1D03               	btfss	3,2
  6819  09DB  29FB               	goto	l2992
  6820  09DC  3000               	movlw	0
  6821  09DD  00D5               	movwf	?___fladd+3
  6822  09DE  3000               	movlw	0
  6823  09DF  00D4               	movwf	?___fladd+2
  6824  09E0  3000               	movlw	0
  6825  09E1  00D3               	movwf	?___fladd+1
  6826  09E2  3000               	movlw	0
  6827  09E3  00D2               	movwf	?___fladd
  6828  09E4  0008               	return
  6829  09E5                     l2978:
  6830  09E5  3001               	movlw	1
  6831  09E6  00DA               	movwf	??___fladd
  6832  09E7                     u4115:
  6833  09E7  1003               	clrc
  6834  09E8  0DD2               	rlf	___fladd@b,f
  6835  09E9  0DD3               	rlf	___fladd@b+1,f
  6836  09EA  0DD4               	rlf	___fladd@b+2,f
  6837  09EB  0DD5               	rlf	___fladd@b+3,f
  6838  09EC  0BDA               	decfsz	??___fladd,f
  6839  09ED  29E7               	goto	u4115
  6840  09EE  1BE5               	btfsc	___fladd@grs,7
  6841  09EF  1452               	bsf	___fladd@b,0
  6842  09F0  1C65               	btfss	___fladd@grs,0
  6843  09F1  29F4               	goto	l2986
  6844  09F2  1403               	setc
  6845  09F3  29F5               	goto	L12
  6846  09F4                     l2986:
  6847  09F4  1003               	clrc
  6848  09F5                     L12:
  6849  09F5  0DE5               	rlf	___fladd@grs,f
  6850  09F6  0864               	movf	___fladd@bexp,w
  6851  09F7  1903               	btfsc	3,2
  6852  09F8  29FB               	goto	l2992
  6853  09F9  3001               	movlw	1
  6854  09FA  02E4               	subwf	___fladd@bexp,f
  6855  09FB                     l2992:
  6856  09FB  1FD4               	btfss	___fladd@b+2,7
  6857  09FC  29E5               	goto	l2978
  6858  09FD                     l2994:
  6859  09FD  01E3               	clrf	___fladd@aexp
  6860  09FE  1FE5               	btfss	___fladd@grs,7
  6861  09FF  2A08               	goto	l3004
  6862  0A00  0865               	movf	___fladd@grs,w
  6863  0A01  397F               	andlw	127
  6864  0A02  1903               	btfsc	3,2
  6865  0A03  1852               	btfsc	___fladd@b,0
  6866  0A04  2A06               	goto	l3000
  6867  0A05  2A08               	goto	l3004
  6868  0A06                     l3000:
  6869  0A06  01E3               	clrf	___fladd@aexp
  6870  0A07  0AE3               	incf	___fladd@aexp,f
  6871  0A08                     l3004:
  6872  0A08  0863               	movf	___fladd@aexp,w
  6873  0A09  1903               	btfsc	3,2
  6874  0A0A  2A3B               	goto	l670
  6875  0A0B  3001               	movlw	1
  6876  0A0C  07D2               	addwf	___fladd@b,f
  6877  0A0D  3000               	movlw	0
  6878  0A0E  1803               	skipnc
  6879  0A0F  3001               	movlw	1
  6880  0A10  07D3               	addwf	___fladd@b+1,f
  6881  0A11  3000               	movlw	0
  6882  0A12  1803               	skipnc
  6883  0A13  3001               	movlw	1
  6884  0A14  07D4               	addwf	___fladd@b+2,f
  6885  0A15  3000               	movlw	0
  6886  0A16  1803               	skipnc
  6887  0A17  3001               	movlw	1
  6888  0A18  07D5               	addwf	___fladd@b+3,f
  6889  0A19  1C55               	btfss	___fladd@b+3,0
  6890  0A1A  2A3B               	goto	l670
  6891  0A1B  0852               	movf	___fladd@b,w
  6892  0A1C  00DA               	movwf	??___fladd
  6893  0A1D  0853               	movf	___fladd@b+1,w
  6894  0A1E  00DB               	movwf	??___fladd+1
  6895  0A1F  0854               	movf	___fladd@b+2,w
  6896  0A20  00DC               	movwf	??___fladd+2
  6897  0A21  0855               	movf	___fladd@b+3,w
  6898  0A22  00DD               	movwf	??___fladd+3
  6899  0A23  3001               	movlw	1
  6900  0A24  00DE               	movwf	??___fladd+4
  6901  0A25                     u4215:
  6902  0A25  0D5D               	rlf	??___fladd+3,w
  6903  0A26  0CDD               	rrf	??___fladd+3,f
  6904  0A27  0CDC               	rrf	??___fladd+2,f
  6905  0A28  0CDB               	rrf	??___fladd+1,f
  6906  0A29  0CDA               	rrf	??___fladd,f
  6907  0A2A  0BDE               	decfsz	??___fladd+4,f
  6908  0A2B  2A25               	goto	u4215
  6909  0A2C  085D               	movf	??___fladd+3,w
  6910  0A2D  00D5               	movwf	___fladd@b+3
  6911  0A2E  085C               	movf	??___fladd+2,w
  6912  0A2F  00D4               	movwf	___fladd@b+2
  6913  0A30  085B               	movf	??___fladd+1,w
  6914  0A31  00D3               	movwf	___fladd@b+1
  6915  0A32  085A               	movf	??___fladd,w
  6916  0A33  00D2               	movwf	___fladd@b
  6917  0A34  0A64               	incf	___fladd@bexp,w
  6918  0A35  1903               	btfsc	3,2
  6919  0A36  2A3B               	goto	l670
  6920  0A37  3001               	movlw	1
  6921  0A38  00DA               	movwf	??___fladd
  6922  0A39  085A               	movf	??___fladd,w
  6923  0A3A  07E4               	addwf	___fladd@bexp,f
  6924  0A3B                     l670:
  6925  0A3B  0A64               	incf	___fladd@bexp,w
  6926  0A3C  1D03               	btfss	3,2
  6927  0A3D  0864               	movf	___fladd@bexp,w
  6928  0A3E  1D03               	btfss	3,2
  6929  0A3F  2A4B               	goto	l3022
  6930  0A40  3000               	movlw	0
  6931  0A41  00D5               	movwf	___fladd@b+3
  6932  0A42  3000               	movlw	0
  6933  0A43  00D4               	movwf	___fladd@b+2
  6934  0A44  3000               	movlw	0
  6935  0A45  00D3               	movwf	___fladd@b+1
  6936  0A46  3000               	movlw	0
  6937  0A47  00D2               	movwf	___fladd@b
  6938  0A48  0864               	movf	___fladd@bexp,w
  6939  0A49  1903               	btfsc	3,2
  6940  0A4A  01E2               	clrf	___fladd@signs
  6941  0A4B                     l3022:
  6942  0A4B  1C64               	btfss	___fladd@bexp,0
  6943  0A4C  2A4F               	goto	l3026
  6944  0A4D  17D4               	bsf	___fladd@b+2,7
  6945  0A4E  2A53               	goto	l678
  6946  0A4F                     l3026:
  6947  0A4F  307F               	movlw	127
  6948  0A50  00DA               	movwf	??___fladd
  6949  0A51  085A               	movf	??___fladd,w
  6950  0A52  05D4               	andwf	___fladd@b+2,f
  6951  0A53                     l678:
  6952  0A53  0864               	movf	___fladd@bexp,w
  6953  0A54  00DA               	movwf	??___fladd
  6954  0A55  1003               	clrc
  6955  0A56  0C5A               	rrf	??___fladd,w
  6956  0A57  00DB               	movwf	??___fladd+1
  6957  0A58  085B               	movf	??___fladd+1,w
  6958  0A59  00D5               	movwf	___fladd@b+3
  6959  0A5A  1FE2               	btfss	___fladd@signs,7
  6960  0A5B  0008               	return
  6961  0A5C  17D5               	bsf	___fladd@b+3,7
  6962  0A5D  0008               	return
  6963  0A5E                     __end_of___fladd:
  6964                           
  6965                           	psect	text22
  6966  1A7C                     __ptext22:	
  6967 ;; *************** function _clr *****************
  6968 ;; Defined at:
  6969 ;;		line 137 in file "main.c"
  6970 ;; Parameters:    Size  Location     Type
  6971 ;;		None
  6972 ;; Auto vars:     Size  Location     Type
  6973 ;;		None
  6974 ;; Return value:  Size  Location     Type
  6975 ;;                  1    wreg      void 
  6976 ;; Registers used:
  6977 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6978 ;; Tracked objects:
  6979 ;;		On entry : 200/800
  6980 ;;		On exit  : 300/100
  6981 ;;		Unchanged: 0/0
  6982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6983 ;;      Params:         0       0       0       0       0
  6984 ;;      Locals:         0       0       0       0       0
  6985 ;;      Temps:          1       0       0       0       0
  6986 ;;      Totals:         1       0       0       0       0
  6987 ;;Total ram usage:        1 bytes
  6988 ;; Hardware stack levels used: 1
  6989 ;; Hardware stack levels required when called: 1
  6990 ;; This function calls:
  6991 ;;		_memset
  6992 ;; This function is called by:
  6993 ;;		_calc
  6994 ;;		_append
  6995 ;; This function uses a non-reentrant model
  6996 ;;
  6997                           
  6998  1A7C                     _clr:	
  6999                           ;psect for function _clr
  7000                           
  7001                           
  7002                           ;main.c: 139:     memset(val_one, 0, 4);
  7003                           
  7004                           ;incstack = 0
  7005                           ; Regs used in _clr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7006  1A7C  3000               	movlw	0
  7007  1A7D  00F0               	movwf	memset@c
  7008  1A7E  00F1               	movwf	memset@c+1
  7009  1A7F  3004               	movlw	4
  7010  1A80  00F2               	movwf	memset@n
  7011  1A81  3000               	movlw	0
  7012  1A82  00F3               	movwf	memset@n+1
  7013  1A83  30A8               	movlw	(low (_val_one| (0+256)))& (0+255)
  7014  1A84  160A  158A  2242  160A  158A  	fcall	_memset
  7015                           
  7016                           ;main.c: 140:     memset(val_two, 0, 4);
  7017  1A89  3000               	movlw	0
  7018  1A8A  00F0               	movwf	memset@c
  7019  1A8B  00F1               	movwf	memset@c+1
  7020  1A8C  3004               	movlw	4
  7021  1A8D  00F2               	movwf	memset@n
  7022  1A8E  3000               	movlw	0
  7023  1A8F  00F3               	movwf	memset@n+1
  7024  1A90  309E               	movlw	(low (_val_two| (0+256)))& (0+255)
  7025  1A91  160A  158A  2242   	fcall	_memset
  7026                           
  7027                           ;main.c: 141:     operation = ' ';
  7028  1A94  3020               	movlw	32
  7029  1A95  00F7               	movwf	??_clr
  7030  1A96  0877               	movf	??_clr,w
  7031  1A97  1683               	bsf	3,5	;RP0=1, select bank1
  7032  1A98  1303               	bcf	3,6	;RP1=0, select bank1
  7033  1A99  00ED               	movwf	_operation^(0+128)
  7034                           
  7035                           ;main.c: 142:     c = 0;
  7036  1A9A  01E9               	clrf	_c^(0+128)
  7037  1A9B  01EA               	clrf	(_c+1)^(0+128)
  7038  1A9C  0008               	return
  7039  1A9D                     __end_of_clr:
  7040                           
  7041                           	psect	text23
  7042  1A42                     __ptext23:	
  7043 ;; *************** function _memset *****************
  7044 ;; Defined at:
  7045 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\memset.c"
  7046 ;; Parameters:    Size  Location     Type
  7047 ;;  p1              1    wreg     PTR void 
  7048 ;;		 -> val_two(10), val_one(10), 
  7049 ;;  c               2    0[COMMON] int 
  7050 ;;  n               2    2[COMMON] unsigned int 
  7051 ;; Auto vars:     Size  Location     Type
  7052 ;;  p1              1    6[COMMON] PTR void 
  7053 ;;		 -> val_two(10), val_one(10), 
  7054 ;;  p               1    5[COMMON] PTR unsigned char 
  7055 ;;		 -> val_two(10), val_one(10), 
  7056 ;; Return value:  Size  Location     Type
  7057 ;;                  1    wreg      PTR void 
  7058 ;; Registers used:
  7059 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7060 ;; Tracked objects:
  7061 ;;		On entry : 0/800
  7062 ;;		On exit  : 0/0
  7063 ;;		Unchanged: 0/0
  7064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7065 ;;      Params:         4       0       0       0       0
  7066 ;;      Locals:         2       0       0       0       0
  7067 ;;      Temps:          1       0       0       0       0
  7068 ;;      Totals:         7       0       0       0       0
  7069 ;;Total ram usage:        7 bytes
  7070 ;; Hardware stack levels used: 1
  7071 ;; This function calls:
  7072 ;;		Nothing
  7073 ;; This function is called by:
  7074 ;;		_clr
  7075 ;; This function uses a non-reentrant model
  7076 ;;
  7077                           
  7078  1A42                     _memset:	
  7079                           ;psect for function _memset
  7080                           
  7081                           
  7082                           ;incstack = 0
  7083                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0]
  7084                           ;memset@p1 stored from wreg
  7085  1A42  00F6               	movwf	memset@p1
  7086  1A43  0876               	movf	memset@p1,w
  7087  1A44  00F4               	movwf	??_memset
  7088  1A45  0874               	movf	??_memset,w
  7089  1A46  00F5               	movwf	memset@p
  7090  1A47                     l3212:
  7091  1A47  3001               	movlw	1
  7092  1A48  02F2               	subwf	memset@n,f
  7093  1A49  3000               	movlw	0
  7094  1A4A  1C03               	skipc
  7095  1A4B  03F3               	decf	memset@n+1,f
  7096  1A4C  02F3               	subwf	memset@n+1,f
  7097  1A4D  0A72               	incf	memset@n,w
  7098  1A4E  1903               	btfsc	3,2
  7099  1A4F  0A73               	incf	memset@n+1,w
  7100  1A50  1903               	btfsc	3,2
  7101  1A51  0008               	return
  7102  1A52  0870               	movf	memset@c,w
  7103  1A53  00F4               	movwf	??_memset
  7104  1A54  0875               	movf	memset@p,w
  7105  1A55  0084               	movwf	4
  7106  1A56  0874               	movf	??_memset,w
  7107  1A57  1783               	bsf	3,7	;select IRP bank2
  7108  1A58  0080               	movwf	0
  7109  1A59  3001               	movlw	1
  7110  1A5A  00F4               	movwf	??_memset
  7111  1A5B  0874               	movf	??_memset,w
  7112  1A5C  07F5               	addwf	memset@p,f
  7113  1A5D  2A47               	goto	l3212
  7114  1A5E                     __end_of_memset:
  7115                           
  7116                           	psect	text24
  7117  1B39                     __ptext24:	
  7118 ;; *************** function _LCD_Write_String *****************
  7119 ;; Defined at:
  7120 ;;		line 91 in file "main.c"
  7121 ;; Parameters:    Size  Location     Type
  7122 ;;  str             2    5[COMMON] PTR unsigned char 
  7123 ;;		 -> STR_4(18), STR_3(8), STR_2(11), calc@res(10), 
  7124 ;;		 -> val_two(10), val_one(10), 
  7125 ;; Auto vars:     Size  Location     Type
  7126 ;;  i               2   10[COMMON] int 
  7127 ;; Return value:  Size  Location     Type
  7128 ;;                  1    wreg      void 
  7129 ;; Registers used:
  7130 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7131 ;; Tracked objects:
  7132 ;;		On entry : 0/0
  7133 ;;		On exit  : 300/0
  7134 ;;		Unchanged: 0/0
  7135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7136 ;;      Params:         2       0       0       0       0
  7137 ;;      Locals:         2       0       0       0       0
  7138 ;;      Temps:          3       0       0       0       0
  7139 ;;      Totals:         7       0       0       0       0
  7140 ;;Total ram usage:        7 bytes
  7141 ;; Hardware stack levels used: 1
  7142 ;; Hardware stack levels required when called: 2
  7143 ;; This function calls:
  7144 ;;		_LCD_Write_Char
  7145 ;; This function is called by:
  7146 ;;		_calc
  7147 ;;		_show
  7148 ;;		_append
  7149 ;;		_main
  7150 ;; This function uses a non-reentrant model
  7151 ;;
  7152                           
  7153  1B39                     _LCD_Write_String:	
  7154                           ;psect for function _LCD_Write_String
  7155                           
  7156                           
  7157                           ;main.c: 91: void LCD_Write_String(char *str);main.c: 92: {;main.c: 93:   int i;;main.c:
      +                           94:   for(i=0;str[i]!='\0';i++)
  7158                           
  7159                           ;incstack = 0
  7160                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7161  1B39  01FA               	clrf	LCD_Write_String@i
  7162  1B3A  01FB               	clrf	LCD_Write_String@i+1
  7163  1B3B                     l3762:
  7164  1B3B  087A               	movf	LCD_Write_String@i,w
  7165  1B3C  0775               	addwf	LCD_Write_String@str,w
  7166  1B3D  00F8               	movwf	??_LCD_Write_String+1
  7167  1B3E  0876               	movf	LCD_Write_String@str+1,w
  7168  1B3F  00F7               	movwf	??_LCD_Write_String
  7169  1B40  1803               	skipnc
  7170  1B41  0AF7               	incf	??_LCD_Write_String,f
  7171  1B42  1BFA               	btfsc	LCD_Write_String@i,7
  7172  1B43  03F7               	decf	??_LCD_Write_String,f
  7173  1B44  0877               	movf	??_LCD_Write_String,w
  7174  1B45  00F9               	movwf	??_LCD_Write_String+2
  7175  1B46  0879               	movf	??_LCD_Write_String+2,w
  7176  1B47  1283               	bcf	3,5	;RP0=0, select bank0
  7177  1B48  1303               	bcf	3,6	;RP1=0, select bank0
  7178  1B49  00FF               	movwf	127
  7179  1B4A  0878               	movf	??_LCD_Write_String+1,w
  7180  1B4B  0084               	movwf	4
  7181  1B4C  160A  118A  2000  160A  158A  	fcall	stringtab
  7182  1B51  3A00               	xorlw	0
  7183  1B52  1903               	btfsc	3,2
  7184  1B53  0008               	return
  7185                           
  7186                           ;main.c: 95:   {;main.c: 96:     LCD_Write_Char(str[i]);
  7187  1B54  087A               	movf	LCD_Write_String@i,w
  7188  1B55  0775               	addwf	LCD_Write_String@str,w
  7189  1B56  00F8               	movwf	??_LCD_Write_String+1
  7190  1B57  0876               	movf	LCD_Write_String@str+1,w
  7191  1B58  00F7               	movwf	??_LCD_Write_String
  7192  1B59  1803               	skipnc
  7193  1B5A  0AF7               	incf	??_LCD_Write_String,f
  7194  1B5B  1BFA               	btfsc	LCD_Write_String@i,7
  7195  1B5C  03F7               	decf	??_LCD_Write_String,f
  7196  1B5D  0877               	movf	??_LCD_Write_String,w
  7197  1B5E  00F9               	movwf	??_LCD_Write_String+2
  7198  1B5F  0879               	movf	??_LCD_Write_String+2,w
  7199  1B60  1283               	bcf	3,5	;RP0=0, select bank0
  7200  1B61  1303               	bcf	3,6	;RP1=0, select bank0
  7201  1B62  00FF               	movwf	127
  7202  1B63  0878               	movf	??_LCD_Write_String+1,w
  7203  1B64  0084               	movwf	4
  7204  1B65  160A  118A  2000  160A  158A  	fcall	stringtab
  7205  1B6A  160A  158A  2376  160A  158A  	fcall	_LCD_Write_Char
  7206                           
  7207                           ;main.c: 97:   }
  7208  1B6F  3001               	movlw	1
  7209  1B70  07FA               	addwf	LCD_Write_String@i,f
  7210  1B71  1803               	skipnc
  7211  1B72  0AFB               	incf	LCD_Write_String@i+1,f
  7212  1B73  3000               	movlw	0
  7213  1B74  07FB               	addwf	LCD_Write_String@i+1,f
  7214  1B75  2B3B               	goto	l3762
  7215  1B76                     __end_of_LCD_Write_String:
  7216                           
  7217                           	psect	text25
  7218  1B76                     __ptext25:	
  7219 ;; *************** function _LCD_Write_Char *****************
  7220 ;; Defined at:
  7221 ;;		line 74 in file "main.c"
  7222 ;; Parameters:    Size  Location     Type
  7223 ;;  Data            1    wreg     unsigned char 
  7224 ;; Auto vars:     Size  Location     Type
  7225 ;;  Data            1    4[COMMON] unsigned char 
  7226 ;;  High4           1    3[COMMON] unsigned char 
  7227 ;;  Low4            1    2[COMMON] unsigned char 
  7228 ;; Return value:  Size  Location     Type
  7229 ;;                  1    wreg      void 
  7230 ;; Registers used:
  7231 ;;		wreg, status,2, status,0, pclath, cstack
  7232 ;; Tracked objects:
  7233 ;;		On entry : 200/900
  7234 ;;		On exit  : 0/0
  7235 ;;		Unchanged: 0/0
  7236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7237 ;;      Params:         0       0       0       0       0
  7238 ;;      Locals:         3       0       0       0       0
  7239 ;;      Temps:          1       0       0       0       0
  7240 ;;      Totals:         4       0       0       0       0
  7241 ;;Total ram usage:        4 bytes
  7242 ;; Hardware stack levels used: 1
  7243 ;; Hardware stack levels required when called: 1
  7244 ;; This function calls:
  7245 ;;		_LCD_DATA
  7246 ;; This function is called by:
  7247 ;;		_LCD_Write_String
  7248 ;;		_show
  7249 ;;		_append
  7250 ;; This function uses a non-reentrant model
  7251 ;;
  7252                           
  7253  1B76                     _LCD_Write_Char:	
  7254                           ;psect for function _LCD_Write_Char
  7255                           
  7256                           
  7257                           ;incstack = 0
  7258                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  7259                           ;LCD_Write_Char@Data stored from wreg
  7260  1B76  00F4               	movwf	LCD_Write_Char@Data
  7261                           
  7262                           ;main.c: 74: void LCD_Write_Char(char Data);main.c: 75: {;main.c: 76:   char Low4,High4;
      +                          ;main.c: 77:   Low4 = Data & 0x0F;
  7263  1B77  0874               	movf	LCD_Write_Char@Data,w
  7264  1B78  390F               	andlw	15
  7265  1B79  00F1               	movwf	??_LCD_Write_Char
  7266  1B7A  0871               	movf	??_LCD_Write_Char,w
  7267  1B7B  00F2               	movwf	LCD_Write_Char@Low4
  7268                           
  7269                           ;main.c: 78:   High4 = Data & 0xF0;
  7270  1B7C  0874               	movf	LCD_Write_Char@Data,w
  7271  1B7D  39F0               	andlw	240
  7272  1B7E  00F1               	movwf	??_LCD_Write_Char
  7273  1B7F  0871               	movf	??_LCD_Write_Char,w
  7274  1B80  00F3               	movwf	LCD_Write_Char@High4
  7275                           
  7276                           ;main.c: 79:   RC4 = 1;
  7277  1B81  1283               	bcf	3,5	;RP0=0, select bank0
  7278  1B82  1607               	bsf	7,4	;volatile
  7279                           
  7280                           ;main.c: 80:   LCD_DATA(High4>>4);
  7281  1B83  0873               	movf	LCD_Write_Char@High4,w
  7282  1B84  00F1               	movwf	??_LCD_Write_Char
  7283  1B85  3004               	movlw	4
  7284  1B86                     u4645:
  7285  1B86  1003               	clrc
  7286  1B87  0CF1               	rrf	??_LCD_Write_Char,f
  7287  1B88  3EFF               	addlw	-1
  7288  1B89  1D03               	skipz
  7289  1B8A  2B86               	goto	u4645
  7290  1B8B  0871               	movf	??_LCD_Write_Char,w
  7291  1B8C  160A  158A  220D  160A  158A  	fcall	_LCD_DATA
  7292                           
  7293                           ;main.c: 81:   RC5 = 1;
  7294  1B91  1687               	bsf	7,5	;volatile
  7295                           
  7296                           ;main.c: 82:   _delay((unsigned long)((500)*(4000000/4000000.0)));
  7297  1B92  30A6               	movlw	166
  7298  1B93  00F1               	movwf	??_LCD_Write_Char
  7299  1B94                     u7007:
  7300  1B94  0BF1               	decfsz	??_LCD_Write_Char,f
  7301  1B95  2B94               	goto	u7007
  7302  1B96  0000               	nop
  7303                           
  7304                           ;main.c: 83:   RC5 = 0;
  7305  1B97  1283               	bcf	3,5	;RP0=0, select bank0
  7306  1B98  1303               	bcf	3,6	;RP1=0, select bank0
  7307  1B99  1287               	bcf	7,5	;volatile
  7308                           
  7309                           ;main.c: 84:   _delay((unsigned long)((500)*(4000000/4000000.0)));
  7310  1B9A  30A6               	movlw	166
  7311  1B9B  00F1               	movwf	??_LCD_Write_Char
  7312  1B9C                     u7017:
  7313  1B9C  0BF1               	decfsz	??_LCD_Write_Char,f
  7314  1B9D  2B9C               	goto	u7017
  7315  1B9E  0000               	nop
  7316                           
  7317                           ;main.c: 85:   LCD_DATA(Low4);
  7318  1B9F  0872               	movf	LCD_Write_Char@Low4,w
  7319  1BA0  160A  158A  220D  160A  158A  	fcall	_LCD_DATA
  7320                           
  7321                           ;main.c: 86:   RC5 = 1;
  7322  1BA5  1687               	bsf	7,5	;volatile
  7323                           
  7324                           ;main.c: 87:   _delay((unsigned long)((500)*(4000000/4000000.0)));
  7325  1BA6  30A6               	movlw	166
  7326  1BA7  00F1               	movwf	??_LCD_Write_Char
  7327  1BA8                     u7027:
  7328  1BA8  0BF1               	decfsz	??_LCD_Write_Char,f
  7329  1BA9  2BA8               	goto	u7027
  7330  1BAA  0000               	nop
  7331                           
  7332                           ;main.c: 88:   RC5 = 0;
  7333  1BAB  1283               	bcf	3,5	;RP0=0, select bank0
  7334  1BAC  1303               	bcf	3,6	;RP1=0, select bank0
  7335  1BAD  1287               	bcf	7,5	;volatile
  7336                           
  7337                           ;main.c: 89:   _delay((unsigned long)((500)*(4000000/4000000.0)));
  7338  1BAE  30A6               	movlw	166
  7339  1BAF  00F1               	movwf	??_LCD_Write_Char
  7340  1BB0                     u7037:
  7341  1BB0  0BF1               	decfsz	??_LCD_Write_Char,f
  7342  1BB1  2BB0               	goto	u7037
  7343  1BB2  0000               	nop
  7344  1BB3  0008               	return
  7345  1BB4                     __end_of_LCD_Write_Char:
  7346                           
  7347                           	psect	text26
  7348  1C3B                     __ptext26:	
  7349 ;; *************** function _LCD_Set_Cursor *****************
  7350 ;; Defined at:
  7351 ;;		line 107 in file "main.c"
  7352 ;; Parameters:    Size  Location     Type
  7353 ;;  r               1    wreg     unsigned char 
  7354 ;;  c               1    3[COMMON] unsigned char 
  7355 ;; Auto vars:     Size  Location     Type
  7356 ;;  r               1    6[COMMON] unsigned char 
  7357 ;;  Temp            1    9[COMMON] unsigned char 
  7358 ;;  High4           1    8[COMMON] unsigned char 
  7359 ;;  Low4            1    7[COMMON] unsigned char 
  7360 ;; Return value:  Size  Location     Type
  7361 ;;                  1    wreg      void 
  7362 ;; Registers used:
  7363 ;;		wreg, status,2, status,0, pclath, cstack
  7364 ;; Tracked objects:
  7365 ;;		On entry : 300/0
  7366 ;;		On exit  : 300/0
  7367 ;;		Unchanged: 0/0
  7368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7369 ;;      Params:         1       0       0       0       0
  7370 ;;      Locals:         4       0       0       0       0
  7371 ;;      Temps:          2       0       0       0       0
  7372 ;;      Totals:         7       0       0       0       0
  7373 ;;Total ram usage:        7 bytes
  7374 ;; Hardware stack levels used: 1
  7375 ;; Hardware stack levels required when called: 2
  7376 ;; This function calls:
  7377 ;;		_LCD_CMD
  7378 ;; This function is called by:
  7379 ;;		_calc
  7380 ;;		_show
  7381 ;;		_append
  7382 ;;		_main
  7383 ;; This function uses a non-reentrant model
  7384 ;;
  7385                           
  7386  1C3B                     _LCD_Set_Cursor:	
  7387                           ;psect for function _LCD_Set_Cursor
  7388                           
  7389                           
  7390                           ;incstack = 0
  7391                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  7392                           ;LCD_Set_Cursor@r stored from wreg
  7393  1C3B  00F6               	movwf	LCD_Set_Cursor@r
  7394                           
  7395                           ;main.c: 107: void LCD_Set_Cursor(unsigned char r, unsigned char c);main.c: 108: {;main.
      +                          c: 109:   unsigned char Temp,Low4,High4;;main.c: 110:   if(r == 1)
  7396  1C3C  0376               	decf	LCD_Set_Cursor@r,w
  7397  1C3D  1D03               	btfss	3,2
  7398  1C3E  2C61               	goto	l3776
  7399                           
  7400                           ;main.c: 111:   {;main.c: 112:     Temp = 0x80 + c - 1;
  7401  1C3F  0873               	movf	LCD_Set_Cursor@c,w
  7402  1C40  3E7F               	addlw	127
  7403  1C41  00F4               	movwf	??_LCD_Set_Cursor
  7404  1C42  0874               	movf	??_LCD_Set_Cursor,w
  7405  1C43  00F9               	movwf	LCD_Set_Cursor@Temp
  7406                           
  7407                           ;main.c: 113:     High4 = Temp >> 4;
  7408  1C44  0879               	movf	LCD_Set_Cursor@Temp,w
  7409  1C45  00F4               	movwf	??_LCD_Set_Cursor
  7410  1C46  3004               	movlw	4
  7411  1C47                     u6155:
  7412  1C47  1003               	clrc
  7413  1C48  0CF4               	rrf	??_LCD_Set_Cursor,f
  7414  1C49  3EFF               	addlw	-1
  7415  1C4A  1D03               	skipz
  7416  1C4B  2C47               	goto	u6155
  7417  1C4C  0874               	movf	??_LCD_Set_Cursor,w
  7418  1C4D  00F5               	movwf	??_LCD_Set_Cursor+1
  7419  1C4E  0875               	movf	??_LCD_Set_Cursor+1,w
  7420  1C4F  00F8               	movwf	LCD_Set_Cursor@High4
  7421                           
  7422                           ;main.c: 114:     Low4 = Temp & 0x0F;
  7423  1C50  0879               	movf	LCD_Set_Cursor@Temp,w
  7424  1C51  390F               	andlw	15
  7425  1C52  00F4               	movwf	??_LCD_Set_Cursor
  7426  1C53  0874               	movf	??_LCD_Set_Cursor,w
  7427  1C54  00F7               	movwf	LCD_Set_Cursor@Low4
  7428                           
  7429                           ;main.c: 115:     LCD_CMD(High4);
  7430  1C55  0878               	movf	LCD_Set_Cursor@High4,w
  7431  1C56  160A  158A  21E1  160A  158A  	fcall	_LCD_CMD
  7432                           
  7433                           ;main.c: 116:     LCD_CMD(Low4);
  7434  1C5B  0877               	movf	LCD_Set_Cursor@Low4,w
  7435  1C5C  160A  158A  21E1  160A  158A  	fcall	_LCD_CMD
  7436  1C61                     l3776:
  7437                           
  7438                           ;main.c: 118:   if(r == 2)
  7439  1C61  3002               	movlw	2
  7440  1C62  0676               	xorwf	LCD_Set_Cursor@r,w
  7441  1C63  1D03               	btfss	3,2
  7442  1C64  0008               	return
  7443                           
  7444                           ;main.c: 119:   {;main.c: 120:     Temp = 0xC0 + c - 1;
  7445  1C65  0873               	movf	LCD_Set_Cursor@c,w
  7446  1C66  3EBF               	addlw	191
  7447  1C67  00F4               	movwf	??_LCD_Set_Cursor
  7448  1C68  0874               	movf	??_LCD_Set_Cursor,w
  7449  1C69  00F9               	movwf	LCD_Set_Cursor@Temp
  7450                           
  7451                           ;main.c: 121:     High4 = Temp >> 4;
  7452  1C6A  0879               	movf	LCD_Set_Cursor@Temp,w
  7453  1C6B  00F4               	movwf	??_LCD_Set_Cursor
  7454  1C6C  3004               	movlw	4
  7455  1C6D                     u6175:
  7456  1C6D  1003               	clrc
  7457  1C6E  0CF4               	rrf	??_LCD_Set_Cursor,f
  7458  1C6F  3EFF               	addlw	-1
  7459  1C70  1D03               	skipz
  7460  1C71  2C6D               	goto	u6175
  7461  1C72  0874               	movf	??_LCD_Set_Cursor,w
  7462  1C73  00F5               	movwf	??_LCD_Set_Cursor+1
  7463  1C74  0875               	movf	??_LCD_Set_Cursor+1,w
  7464  1C75  00F8               	movwf	LCD_Set_Cursor@High4
  7465                           
  7466                           ;main.c: 122:     Low4 = Temp & 0x0F;
  7467  1C76  0879               	movf	LCD_Set_Cursor@Temp,w
  7468  1C77  390F               	andlw	15
  7469  1C78  00F4               	movwf	??_LCD_Set_Cursor
  7470  1C79  0874               	movf	??_LCD_Set_Cursor,w
  7471  1C7A  00F7               	movwf	LCD_Set_Cursor@Low4
  7472                           
  7473                           ;main.c: 123:     LCD_CMD(High4);
  7474  1C7B  0878               	movf	LCD_Set_Cursor@High4,w
  7475  1C7C  160A  158A  21E1  160A  158A  	fcall	_LCD_CMD
  7476                           
  7477                           ;main.c: 124:     LCD_CMD(Low4);
  7478  1C81  0877               	movf	LCD_Set_Cursor@Low4,w
  7479  1C82  160A  158A  21E1   	fcall	_LCD_CMD
  7480  1C85  0008               	return
  7481  1C86                     __end_of_LCD_Set_Cursor:
  7482                           
  7483                           	psect	text27
  7484  19AD                     __ptext27:	
  7485 ;; *************** function _atof *****************
  7486 ;; Defined at:
  7487 ;;		line 200 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\atof.c"
  7488 ;; Parameters:    Size  Location     Type
  7489 ;;  s               1    wreg     PTR const unsigned char 
  7490 ;;		 -> val_two(10), val_one(10), 
  7491 ;; Auto vars:     Size  Location     Type
  7492 ;;  s               1   50[BANK0 ] PTR const unsigned char 
  7493 ;;		 -> val_two(10), val_one(10), 
  7494 ;; Return value:  Size  Location     Type
  7495 ;;                  4   46[BANK0 ] PTR const unsigned char 
  7496 ;; Registers used:
  7497 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7498 ;; Tracked objects:
  7499 ;;		On entry : 0/900
  7500 ;;		On exit  : 300/0
  7501 ;;		Unchanged: 0/0
  7502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7503 ;;      Params:         0       4       0       0       0
  7504 ;;      Locals:         0       1       0       0       0
  7505 ;;      Temps:          0       0       0       0       0
  7506 ;;      Totals:         0       5       0       0       0
  7507 ;;Total ram usage:        5 bytes
  7508 ;; Hardware stack levels used: 1
  7509 ;; Hardware stack levels required when called: 3
  7510 ;; This function calls:
  7511 ;;		_strtod
  7512 ;; This function is called by:
  7513 ;;		_append
  7514 ;; This function uses a non-reentrant model
  7515 ;;
  7516                           
  7517  19AD                     _atof:	
  7518                           ;psect for function _atof
  7519                           
  7520                           
  7521                           ;incstack = 0
  7522                           ; Regs used in _atof: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7523                           ;atof@s stored from wreg
  7524  19AD  1283               	bcf	3,5	;RP0=0, select bank0
  7525  19AE  1303               	bcf	3,6	;RP1=0, select bank0
  7526  19AF  00D2               	movwf	atof@s
  7527  19B0  01BE               	clrf	strtod@res
  7528  19B1  0852               	movf	atof@s,w
  7529  19B2  120A  158A  225E   	fcall	_strtod
  7530  19B5  0841               	movf	?_strtod+3,w
  7531  19B6  00D1               	movwf	?_atof+3
  7532  19B7  0840               	movf	?_strtod+2,w
  7533  19B8  00D0               	movwf	?_atof+2
  7534  19B9  083F               	movf	?_strtod+1,w
  7535  19BA  00CF               	movwf	?_atof+1
  7536  19BB  083E               	movf	?_strtod,w
  7537  19BC  00CE               	movwf	?_atof
  7538  19BD  0008               	return
  7539  19BE                     __end_of_atof:
  7540                           
  7541                           	psect	text28
  7542  0A5E                     __ptext28:	
  7543 ;; *************** function _strtod *****************
  7544 ;; Defined at:
  7545 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\atof.c"
  7546 ;; Parameters:    Size  Location     Type
  7547 ;;  s               1    wreg     PTR const unsigned char 
  7548 ;;		 -> val_two(10), val_one(10), 
  7549 ;;  res             1   30[BANK0 ] PTR PTR const unsigned c
  7550 ;;		 -> NULL(0), 
  7551 ;; Auto vars:     Size  Location     Type
  7552 ;;  s               1   45[BANK0 ] PTR const unsigned char 
  7553 ;;		 -> val_two(10), val_one(10), 
  7554 ;;  _u              4   41[BANK0 ] struct .
  7555 ;;  expon           1   40[BANK0 ] char 
  7556 ;;  flags           1   39[BANK0 ] unsigned char 
  7557 ;;  eexp            1   38[BANK0 ] char 
  7558 ;; Return value:  Size  Location     Type
  7559 ;;                  4   30[BANK0 ] char 
  7560 ;; Registers used:
  7561 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7562 ;; Tracked objects:
  7563 ;;		On entry : 300/800
  7564 ;;		On exit  : 300/0
  7565 ;;		Unchanged: 0/0
  7566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7567 ;;      Params:         0       4       0       0       0
  7568 ;;      Locals:         0       8       0       0       0
  7569 ;;      Temps:          0       4       0       0       0
  7570 ;;      Totals:         0      16       0       0       0
  7571 ;;Total ram usage:       16 bytes
  7572 ;; Hardware stack levels used: 1
  7573 ;; Hardware stack levels required when called: 2
  7574 ;; This function calls:
  7575 ;;		___bmul
  7576 ;;		___fldiv
  7577 ;;		___fleq
  7578 ;;		___flge
  7579 ;;		___flmul
  7580 ;;		___flneg
  7581 ;;		___lmul
  7582 ;;		___xxtofl
  7583 ;;		_isdigit
  7584 ;;		_isspace
  7585 ;; This function is called by:
  7586 ;;		_atof
  7587 ;; This function uses a non-reentrant model
  7588 ;;
  7589                           
  7590  0A5E                     _strtod:	
  7591                           ;psect for function _strtod
  7592                           
  7593                           
  7594                           ;incstack = 0
  7595                           ; Regs used in _strtod: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7596                           ;strtod@s stored from wreg
  7597  0A5E  00CD               	movwf	strtod@s
  7598  0A5F  083E               	movf	strtod@res,w
  7599  0A60  1903               	btfsc	3,2
  7600  0A61  2A69               	goto	l3976
  7601  0A62  084D               	movf	strtod@s,w
  7602  0A63  00C2               	movwf	??_strtod
  7603  0A64  083E               	movf	strtod@res,w
  7604  0A65  0084               	movwf	4
  7605  0A66  0842               	movf	??_strtod,w
  7606  0A67  1383               	bcf	3,7	;select IRP bank0
  7607  0A68  0080               	movwf	0
  7608  0A69                     l3976:
  7609  0A69  084D               	movf	strtod@s,w
  7610  0A6A  0084               	movwf	4
  7611  0A6B  1783               	bsf	3,7	;select IRP bank2
  7612  0A6C  0800               	movf	0,w
  7613  0A6D  00C6               	movwf	strtod@eexp
  7614  0A6E  160A  158A  21CF  120A  158A  	fcall	_isspace
  7615  0A73  1C03               	btfss	3,0
  7616  0A74  2A7A               	goto	l3978
  7617  0A75  3001               	movlw	1
  7618  0A76  00C2               	movwf	??_strtod
  7619  0A77  0842               	movf	??_strtod,w
  7620  0A78  07CD               	addwf	strtod@s,f
  7621  0A79  2A69               	goto	l3976
  7622  0A7A                     l3978:
  7623  0A7A  01C7               	clrf	strtod@flags
  7624  0A7B  302D               	movlw	45
  7625  0A7C  0646               	xorwf	strtod@eexp,w
  7626  0A7D  1D03               	btfss	3,2
  7627  0A7E  2A82               	goto	l3986
  7628  0A7F  01C7               	clrf	strtod@flags
  7629  0A80  0AC7               	incf	strtod@flags,f
  7630  0A81  2A86               	goto	l3984
  7631  0A82                     l3986:
  7632  0A82  302B               	movlw	43
  7633  0A83  0646               	xorwf	strtod@eexp,w
  7634  0A84  1D03               	btfss	3,2
  7635  0A85  2A8A               	goto	l3990
  7636  0A86                     l3984:
  7637  0A86  3001               	movlw	1
  7638  0A87  00C2               	movwf	??_strtod
  7639  0A88  0842               	movf	??_strtod,w
  7640  0A89  07CD               	addwf	strtod@s,f
  7641  0A8A                     l3990:
  7642  0A8A  01C6               	clrf	strtod@eexp
  7643  0A8B  3000               	movlw	0
  7644  0A8C  00CC               	movwf	strtod@_u+3
  7645  0A8D  3000               	movlw	0
  7646  0A8E  00CB               	movwf	strtod@_u+2
  7647  0A8F  3000               	movlw	0
  7648  0A90  00CA               	movwf	strtod@_u+1
  7649  0A91  3000               	movlw	0
  7650  0A92  00C9               	movwf	strtod@_u
  7651  0A93  01C8               	clrf	strtod@expon
  7652  0A94  2AA0               	goto	l3996
  7653  0A95                     l3998:
  7654  0A95  084D               	movf	strtod@s,w
  7655  0A96  0084               	movwf	4
  7656  0A97  302E               	movlw	46
  7657  0A98  0600               	xorwf	0,w
  7658  0A99  1D03               	btfss	3,2
  7659  0A9A  2AA2               	goto	l4004
  7660  0A9B  1647               	bsf	strtod@flags,4
  7661  0A9C                     l4002:
  7662  0A9C  3001               	movlw	1
  7663  0A9D  00C2               	movwf	??_strtod
  7664  0A9E  0842               	movf	??_strtod,w
  7665  0A9F  07CD               	addwf	strtod@s,f
  7666  0AA0                     l3996:
  7667  0AA0  1E47               	btfss	strtod@flags,4
  7668  0AA1  2A95               	goto	l3998
  7669  0AA2                     l4004:
  7670  0AA2  084D               	movf	strtod@s,w
  7671  0AA3  0084               	movwf	4
  7672  0AA4  0800               	movf	0,w
  7673  0AA5  120A  158A  2000  120A  158A  	fcall	_isdigit
  7674  0AAA  1C03               	btfss	3,0
  7675  0AAB  2AFC               	goto	l4020
  7676  0AAC  14C7               	bsf	strtod@flags,1
  7677  0AAD  3009               	movlw	9
  7678  0AAE  0646               	xorwf	strtod@eexp,w
  7679  0AAF  1903               	btfsc	3,2
  7680  0AB0  2AF5               	goto	l810
  7681  0AB1  1E47               	btfss	strtod@flags,4
  7682  0AB2  2AB7               	goto	l811
  7683  0AB3  30FF               	movlw	255
  7684  0AB4  00C2               	movwf	??_strtod
  7685  0AB5  0842               	movf	??_strtod,w
  7686  0AB6  07C8               	addwf	strtod@expon,f
  7687  0AB7                     l811:
  7688  0AB7  3001               	movlw	1
  7689  0AB8  00C2               	movwf	??_strtod
  7690  0AB9  0842               	movf	??_strtod,w
  7691  0ABA  07C6               	addwf	strtod@eexp,f
  7692  0ABB  3000               	movlw	0
  7693  0ABC  00F3               	movwf	___lmul@multiplier+3
  7694  0ABD  3000               	movlw	0
  7695  0ABE  00F2               	movwf	___lmul@multiplier+2
  7696  0ABF  3000               	movlw	0
  7697  0AC0  00F1               	movwf	___lmul@multiplier+1
  7698  0AC1  300A               	movlw	10
  7699  0AC2  00F0               	movwf	___lmul@multiplier
  7700  0AC3  084C               	movf	strtod@_u+3,w
  7701  0AC4  00F7               	movwf	___lmul@multiplicand+3
  7702  0AC5  084B               	movf	strtod@_u+2,w
  7703  0AC6  00F6               	movwf	___lmul@multiplicand+2
  7704  0AC7  084A               	movf	strtod@_u+1,w
  7705  0AC8  00F5               	movwf	___lmul@multiplicand+1
  7706  0AC9  0849               	movf	strtod@_u,w
  7707  0ACA  00F4               	movwf	___lmul@multiplicand
  7708  0ACB  160A  158A  23B4  120A  158A  	fcall	___lmul
  7709  0AD0  0873               	movf	?___lmul+3,w
  7710  0AD1  00CC               	movwf	strtod@_u+3
  7711  0AD2  0872               	movf	?___lmul+2,w
  7712  0AD3  00CB               	movwf	strtod@_u+2
  7713  0AD4  0871               	movf	?___lmul+1,w
  7714  0AD5  00CA               	movwf	strtod@_u+1
  7715  0AD6  0870               	movf	?___lmul,w
  7716  0AD7  00C9               	movwf	strtod@_u
  7717  0AD8  084D               	movf	strtod@s,w
  7718  0AD9  0084               	movwf	4
  7719  0ADA  0800               	movf	0,w
  7720  0ADB  3ED0               	addlw	208
  7721  0ADC  00C2               	movwf	??_strtod
  7722  0ADD  01C3               	clrf	??_strtod+1
  7723  0ADE  01C4               	clrf	??_strtod+2
  7724  0ADF  01C5               	clrf	??_strtod+3
  7725  0AE0  0842               	movf	??_strtod,w
  7726  0AE1  07C9               	addwf	strtod@_u,f
  7727  0AE2  0843               	movf	??_strtod+1,w
  7728  0AE3  1103               	clrz
  7729  0AE4  1803               	skipnc
  7730  0AE5  3E01               	addlw	1
  7731  0AE6  1D03               	btfss	3,2
  7732  0AE7  07CA               	addwf	strtod@_u+1,f
  7733  0AE8  0844               	movf	??_strtod+2,w
  7734  0AE9  1103               	clrz
  7735  0AEA  1803               	skipnc
  7736  0AEB  3E01               	addlw	1
  7737  0AEC  1D03               	btfss	3,2
  7738  0AED  07CB               	addwf	strtod@_u+2,f
  7739  0AEE  0845               	movf	??_strtod+3,w
  7740  0AEF  1103               	clrz
  7741  0AF0  1803               	skipnc
  7742  0AF1  3E01               	addlw	1
  7743  0AF2  1D03               	btfss	3,2
  7744  0AF3  07CC               	addwf	strtod@_u+3,f
  7745  0AF4  2A9C               	goto	l4002
  7746  0AF5                     l810:
  7747  0AF5  1A47               	btfsc	strtod@flags,4
  7748  0AF6  2A9C               	goto	l4002
  7749  0AF7  3001               	movlw	1
  7750  0AF8  00C2               	movwf	??_strtod
  7751  0AF9  0842               	movf	??_strtod,w
  7752  0AFA  07C8               	addwf	strtod@expon,f
  7753  0AFB  2A9C               	goto	l4002
  7754  0AFC                     l4020:
  7755  0AFC  01C6               	clrf	strtod@eexp
  7756  0AFD  084D               	movf	strtod@s,w
  7757  0AFE  0084               	movwf	4
  7758  0AFF  3065               	movlw	101
  7759  0B00  0600               	xorwf	0,w
  7760  0B01  1903               	btfsc	3,2
  7761  0B02  2B09               	goto	l4026
  7762  0B03  084D               	movf	strtod@s,w
  7763  0B04  0084               	movwf	4
  7764  0B05  3045               	movlw	69
  7765  0B06  0600               	xorwf	0,w
  7766  0B07  1D03               	btfss	3,2
  7767  0B08  2B79               	goto	l4060
  7768  0B09                     l4026:
  7769  0B09  3001               	movlw	1
  7770  0B0A  00C2               	movwf	??_strtod
  7771  0B0B  0842               	movf	??_strtod,w
  7772  0B0C  07CD               	addwf	strtod@s,f
  7773  0B0D  084D               	movf	strtod@s,w
  7774  0B0E  0084               	movwf	4
  7775  0B0F  302D               	movlw	45
  7776  0B10  0600               	xorwf	0,w
  7777  0B11  1D03               	btfss	3,2
  7778  0B12  2B15               	goto	l4032
  7779  0B13  15C7               	bsf	strtod@flags,3
  7780  0B14  2B21               	goto	l4030
  7781  0B15                     l4032:
  7782  0B15  084D               	movf	strtod@s,w
  7783  0B16  0084               	movwf	4
  7784  0B17  302B               	movlw	43
  7785  0B18  0600               	xorwf	0,w
  7786  0B19  1903               	btfsc	3,2
  7787  0B1A  2B21               	goto	l4030
  7788  0B1B                     l4038:
  7789  0B1B  084D               	movf	strtod@s,w
  7790  0B1C  0084               	movwf	4
  7791  0B1D  3030               	movlw	48
  7792  0B1E  0600               	xorwf	0,w
  7793  0B1F  1D03               	btfss	3,2
  7794  0B20  2B26               	goto	l4040
  7795  0B21                     l4030:
  7796  0B21  3001               	movlw	1
  7797  0B22  00C2               	movwf	??_strtod
  7798  0B23  0842               	movf	??_strtod,w
  7799  0B24  07CD               	addwf	strtod@s,f
  7800  0B25  2B1B               	goto	l4038
  7801  0B26                     l4040:
  7802  0B26  084D               	movf	strtod@s,w
  7803  0B27  0084               	movwf	4
  7804  0B28  0800               	movf	0,w
  7805  0B29  120A  158A  2000  120A  158A  	fcall	_isdigit
  7806  0B2E  1C03               	btfss	3,0
  7807  0B2F  2B75               	goto	l4056
  7808  0B30  084D               	movf	strtod@s,w
  7809  0B31  0084               	movwf	4
  7810  0B32  0800               	movf	0,w
  7811  0B33  3ED0               	addlw	208
  7812  0B34  00C2               	movwf	??_strtod
  7813  0B35  0842               	movf	??_strtod,w
  7814  0B36  00C6               	movwf	strtod@eexp
  7815  0B37  3001               	movlw	1
  7816  0B38  00C2               	movwf	??_strtod
  7817  0B39  0842               	movf	??_strtod,w
  7818  0B3A  07CD               	addwf	strtod@s,f
  7819  0B3B  084D               	movf	strtod@s,w
  7820  0B3C  0084               	movwf	4
  7821  0B3D  0800               	movf	0,w
  7822  0B3E  120A  158A  2000  120A  158A  	fcall	_isdigit
  7823  0B43  1C03               	btfss	3,0
  7824  0B44  2B75               	goto	l4056
  7825  0B45  084D               	movf	strtod@s,w
  7826  0B46  0084               	movwf	4
  7827  0B47  300A               	movlw	10
  7828  0B48  00C2               	movwf	??_strtod
  7829  0B49  0842               	movf	??_strtod,w
  7830  0B4A  00F0               	movwf	___bmul@multiplicand
  7831  0B4B  0846               	movf	strtod@eexp,w
  7832  0B4C  160A  158A  219C  120A  158A  	fcall	___bmul
  7833  0B51  0700               	addwf	0,w
  7834  0B52  3ED0               	addlw	-48
  7835  0B53  00C3               	movwf	??_strtod+1
  7836  0B54  0843               	movf	??_strtod+1,w
  7837  0B55  00C6               	movwf	strtod@eexp
  7838  0B56  3001               	movlw	1
  7839  0B57  00C2               	movwf	??_strtod
  7840  0B58  0842               	movf	??_strtod,w
  7841  0B59  07CD               	addwf	strtod@s,f
  7842  0B5A  084D               	movf	strtod@s,w
  7843  0B5B  0084               	movwf	4
  7844  0B5C  0800               	movf	0,w
  7845  0B5D  120A  158A  2000  120A  158A  	fcall	_isdigit
  7846  0B62  1C03               	btfss	3,0
  7847  0B63  2B75               	goto	l4056
  7848  0B64  084D               	movf	strtod@s,w
  7849  0B65  0084               	movwf	4
  7850  0B66  300A               	movlw	10
  7851  0B67  00C2               	movwf	??_strtod
  7852  0B68  0842               	movf	??_strtod,w
  7853  0B69  00F0               	movwf	___bmul@multiplicand
  7854  0B6A  0846               	movf	strtod@eexp,w
  7855  0B6B  160A  158A  219C  120A  158A  	fcall	___bmul
  7856  0B70  0700               	addwf	0,w
  7857  0B71  3ED0               	addlw	-48
  7858  0B72  00C3               	movwf	??_strtod+1
  7859  0B73  0843               	movf	??_strtod+1,w
  7860  0B74  00C6               	movwf	strtod@eexp
  7861  0B75                     l4056:
  7862  0B75  1DC7               	btfss	strtod@flags,3
  7863  0B76  2B79               	goto	l4060
  7864  0B77  09C6               	comf	strtod@eexp,f
  7865  0B78  0AC6               	incf	strtod@eexp,f
  7866  0B79                     l4060:
  7867  0B79  0846               	movf	strtod@eexp,w
  7868  0B7A  00C2               	movwf	??_strtod
  7869  0B7B  0842               	movf	??_strtod,w
  7870  0B7C  07C8               	addwf	strtod@expon,f
  7871  0B7D  083E               	movf	strtod@res,w
  7872  0B7E  1D03               	btfss	3,2
  7873  0B7F  1CC7               	btfss	strtod@flags,1
  7874  0B80  2B88               	goto	l4068
  7875  0B81  084D               	movf	strtod@s,w
  7876  0B82  00C2               	movwf	??_strtod
  7877  0B83  083E               	movf	strtod@res,w
  7878  0B84  0084               	movwf	4
  7879  0B85  0842               	movf	??_strtod,w
  7880  0B86  1383               	bcf	3,7	;select IRP bank0
  7881  0B87  0080               	movwf	0
  7882  0B88                     l4068:
  7883  0B88  084C               	movf	strtod@_u+3,w
  7884  0B89  00F3               	movwf	___xxtofl@val+3
  7885  0B8A  084B               	movf	strtod@_u+2,w
  7886  0B8B  00F2               	movwf	___xxtofl@val+2
  7887  0B8C  084A               	movf	strtod@_u+1,w
  7888  0B8D  00F1               	movwf	___xxtofl@val+1
  7889  0B8E  0849               	movf	strtod@_u,w
  7890  0B8F  00F0               	movwf	___xxtofl@val
  7891  0B90  3001               	movlw	1
  7892  0B91  160A  158A  275D  120A  158A  	fcall	___xxtofl
  7893  0B96  0873               	movf	?___xxtofl+3,w
  7894  0B97  1283               	bcf	3,5	;RP0=0, select bank0
  7895  0B98  00CC               	movwf	strtod@_u+3
  7896  0B99  0872               	movf	?___xxtofl+2,w
  7897  0B9A  00CB               	movwf	strtod@_u+2
  7898  0B9B  0871               	movf	?___xxtofl+1,w
  7899  0B9C  00CA               	movwf	strtod@_u+1
  7900  0B9D  0870               	movf	?___xxtofl,w
  7901  0B9E  00C9               	movwf	strtod@_u
  7902  0B9F  084C               	movf	strtod@_u+3,w
  7903  0BA0  00F3               	movwf	___fleq@ff1+3
  7904  0BA1  084B               	movf	strtod@_u+2,w
  7905  0BA2  00F2               	movwf	___fleq@ff1+2
  7906  0BA3  084A               	movf	strtod@_u+1,w
  7907  0BA4  00F1               	movwf	___fleq@ff1+1
  7908  0BA5  0849               	movf	strtod@_u,w
  7909  0BA6  00F0               	movwf	___fleq@ff1
  7910  0BA7  3000               	movlw	0
  7911  0BA8  00F7               	movwf	___fleq@ff2+3
  7912  0BA9  3000               	movlw	0
  7913  0BAA  00F6               	movwf	___fleq@ff2+2
  7914  0BAB  3000               	movlw	0
  7915  0BAC  00F5               	movwf	___fleq@ff2+1
  7916  0BAD  3000               	movlw	0
  7917  0BAE  00F4               	movwf	___fleq@ff2
  7918  0BAF  160A  158A  23F3  120A  158A  	fcall	___fleq
  7919  0BB4  1C03               	btfss	3,0
  7920  0BB5  2BC0               	goto	l828
  7921  0BB6  3000               	movlw	0
  7922  0BB7  1283               	bcf	3,5	;RP0=0, select bank0
  7923  0BB8  00C1               	movwf	?_strtod+3
  7924  0BB9  3000               	movlw	0
  7925  0BBA  00C0               	movwf	?_strtod+2
  7926  0BBB  3000               	movlw	0
  7927  0BBC  00BF               	movwf	?_strtod+1
  7928  0BBD  3000               	movlw	0
  7929  0BBE  00BE               	movwf	?_strtod
  7930  0BBF  0008               	return
  7931  0BC0                     l828:
  7932  0BC0  1283               	bcf	3,5	;RP0=0, select bank0
  7933  0BC1  1FC8               	btfss	strtod@expon,7
  7934  0BC2  2C3C               	goto	l4102
  7935  0BC3  09C8               	comf	strtod@expon,f
  7936  0BC4  0AC8               	incf	strtod@expon,f
  7937  0BC5                     l4082:
  7938  0BC5  0848               	movf	strtod@expon,w
  7939  0BC6  3A80               	xorlw	128
  7940  0BC7  3E76               	addlw	-138
  7941  0BC8  1C03               	btfss	3,0
  7942  0BC9  2C0D               	goto	l4088
  7943  0BCA  3050               	movlw	80
  7944  0BCB  00F3               	movwf	___fldiv@a+3
  7945  0BCC  3015               	movlw	21
  7946  0BCD  00F2               	movwf	___fldiv@a+2
  7947  0BCE  3002               	movlw	2
  7948  0BCF  00F1               	movwf	___fldiv@a+1
  7949  0BD0  30F9               	movlw	249
  7950  0BD1  00F0               	movwf	___fldiv@a
  7951  0BD2  084C               	movf	strtod@_u+3,w
  7952  0BD3  00F7               	movwf	___fldiv@b+3
  7953  0BD4  084B               	movf	strtod@_u+2,w
  7954  0BD5  00F6               	movwf	___fldiv@b+2
  7955  0BD6  084A               	movf	strtod@_u+1,w
  7956  0BD7  00F5               	movwf	___fldiv@b+1
  7957  0BD8  0849               	movf	strtod@_u,w
  7958  0BD9  00F4               	movwf	___fldiv@b
  7959  0BDA  160A  118A  2495  120A  158A  	fcall	___fldiv
  7960  0BDF  0873               	movf	?___fldiv+3,w
  7961  0BE0  00CC               	movwf	strtod@_u+3
  7962  0BE1  0872               	movf	?___fldiv+2,w
  7963  0BE2  00CB               	movwf	strtod@_u+2
  7964  0BE3  0871               	movf	?___fldiv+1,w
  7965  0BE4  00CA               	movwf	strtod@_u+1
  7966  0BE5  0870               	movf	?___fldiv,w
  7967  0BE6  00C9               	movwf	strtod@_u
  7968  0BE7  30F6               	movlw	246
  7969  0BE8  00C2               	movwf	??_strtod
  7970  0BE9  0842               	movf	??_strtod,w
  7971  0BEA  07C8               	addwf	strtod@expon,f
  7972  0BEB  2BC5               	goto	l4082
  7973  0BEC                     l4084:
  7974  0BEC  3041               	movlw	65
  7975  0BED  00F3               	movwf	___fldiv@a+3
  7976  0BEE  3020               	movlw	32
  7977  0BEF  00F2               	movwf	___fldiv@a+2
  7978  0BF0  3000               	movlw	0
  7979  0BF1  00F1               	movwf	___fldiv@a+1
  7980  0BF2  3000               	movlw	0
  7981  0BF3  00F0               	movwf	___fldiv@a
  7982  0BF4  084C               	movf	strtod@_u+3,w
  7983  0BF5  00F7               	movwf	___fldiv@b+3
  7984  0BF6  084B               	movf	strtod@_u+2,w
  7985  0BF7  00F6               	movwf	___fldiv@b+2
  7986  0BF8  084A               	movf	strtod@_u+1,w
  7987  0BF9  00F5               	movwf	___fldiv@b+1
  7988  0BFA  0849               	movf	strtod@_u,w
  7989  0BFB  00F4               	movwf	___fldiv@b
  7990  0BFC  160A  118A  2495  120A  158A  	fcall	___fldiv
  7991  0C01  0873               	movf	?___fldiv+3,w
  7992  0C02  00CC               	movwf	strtod@_u+3
  7993  0C03  0872               	movf	?___fldiv+2,w
  7994  0C04  00CB               	movwf	strtod@_u+2
  7995  0C05  0871               	movf	?___fldiv+1,w
  7996  0C06  00CA               	movwf	strtod@_u+1
  7997  0C07  0870               	movf	?___fldiv,w
  7998  0C08  00C9               	movwf	strtod@_u
  7999  0C09  30FF               	movlw	255
  8000  0C0A  00C2               	movwf	??_strtod
  8001  0C0B  0842               	movf	??_strtod,w
  8002  0C0C  07C8               	addwf	strtod@expon,f
  8003  0C0D                     l4088:
  8004  0C0D  0848               	movf	strtod@expon,w
  8005  0C0E  1D03               	btfss	3,2
  8006  0C0F  2BEC               	goto	l4084
  8007  0C10  084C               	movf	strtod@_u+3,w
  8008  0C11  00F3               	movwf	___flge@ff1+3
  8009  0C12  084B               	movf	strtod@_u+2,w
  8010  0C13  00F2               	movwf	___flge@ff1+2
  8011  0C14  084A               	movf	strtod@_u+1,w
  8012  0C15  00F1               	movwf	___flge@ff1+1
  8013  0C16  0849               	movf	strtod@_u,w
  8014  0C17  00F0               	movwf	___flge@ff1
  8015  0C18  3000               	movlw	0
  8016  0C19  00F7               	movwf	___flge@ff2+3
  8017  0C1A  3080               	movlw	128
  8018  0C1B  00F6               	movwf	___flge@ff2+2
  8019  0C1C  3000               	movlw	0
  8020  0C1D  00F5               	movwf	___flge@ff2+1
  8021  0C1E  3000               	movlw	0
  8022  0C1F  00F4               	movwf	___flge@ff2
  8023  0C20  160A  158A  2634  120A  158A  	fcall	___flge
  8024  0C25  1803               	btfsc	3,0
  8025  0C26  2CB8               	goto	l839
  8026  0C27  1283               	bcf	3,5	;RP0=0, select bank0
  8027  0C28  1C47               	btfss	strtod@flags,0
  8028  0C29  2C33               	goto	l4098
  8029  0C2A  3080               	movlw	128
  8030  0C2B  00C1               	movwf	?_strtod+3
  8031  0C2C  3080               	movlw	128
  8032  0C2D  00C0               	movwf	?_strtod+2
  8033  0C2E  3000               	movlw	0
  8034  0C2F  00BF               	movwf	?_strtod+1
  8035  0C30  3000               	movlw	0
  8036  0C31  00BE               	movwf	?_strtod
  8037  0C32  0008               	return
  8038  0C33                     l4098:
  8039  0C33  3000               	movlw	0
  8040  0C34  00C1               	movwf	?_strtod+3
  8041  0C35  3080               	movlw	128
  8042  0C36  00C0               	movwf	?_strtod+2
  8043  0C37  3000               	movlw	0
  8044  0C38  00BF               	movwf	?_strtod+1
  8045  0C39  3000               	movlw	0
  8046  0C3A  00BE               	movwf	?_strtod
  8047  0C3B  0008               	return
  8048  0C3C                     l4102:
  8049  0C3C  0848               	movf	strtod@expon,w
  8050  0C3D  3A80               	xorlw	128
  8051  0C3E  3E7F               	addlw	-129
  8052  0C3F  1803               	btfsc	3,0
  8053  0C40  2C63               	goto	l4110
  8054  0C41  2CB8               	goto	l839
  8055  0C42                     l4106:
  8056  0C42  3050               	movlw	80
  8057  0C43  00A7               	movwf	___flmul@b+3
  8058  0C44  3015               	movlw	21
  8059  0C45  00A6               	movwf	___flmul@b+2
  8060  0C46  3002               	movlw	2
  8061  0C47  00A5               	movwf	___flmul@b+1
  8062  0C48  30F9               	movlw	249
  8063  0C49  00A4               	movwf	___flmul@b
  8064  0C4A  084C               	movf	strtod@_u+3,w
  8065  0C4B  00AB               	movwf	___flmul@a+3
  8066  0C4C  084B               	movf	strtod@_u+2,w
  8067  0C4D  00AA               	movwf	___flmul@a+2
  8068  0C4E  084A               	movf	strtod@_u+1,w
  8069  0C4F  00A9               	movwf	___flmul@a+1
  8070  0C50  0849               	movf	strtod@_u,w
  8071  0C51  00A8               	movwf	___flmul@a
  8072  0C52  120A  118A  2028  120A  158A  	fcall	___flmul
  8073  0C57  0827               	movf	?___flmul+3,w
  8074  0C58  00CC               	movwf	strtod@_u+3
  8075  0C59  0826               	movf	?___flmul+2,w
  8076  0C5A  00CB               	movwf	strtod@_u+2
  8077  0C5B  0825               	movf	?___flmul+1,w
  8078  0C5C  00CA               	movwf	strtod@_u+1
  8079  0C5D  0824               	movf	?___flmul,w
  8080  0C5E  00C9               	movwf	strtod@_u
  8081  0C5F  30F6               	movlw	246
  8082  0C60  00C2               	movwf	??_strtod
  8083  0C61  0842               	movf	??_strtod,w
  8084  0C62  07C8               	addwf	strtod@expon,f
  8085  0C63                     l4110:
  8086  0C63  300A               	movlw	10
  8087  0C64  0248               	subwf	strtod@expon,w
  8088  0C65  1C03               	btfss	3,0
  8089  0C66  2C89               	goto	l4116
  8090  0C67  2C42               	goto	l4106
  8091  0C68                     l4112:
  8092  0C68  3041               	movlw	65
  8093  0C69  00A7               	movwf	___flmul@b+3
  8094  0C6A  3020               	movlw	32
  8095  0C6B  00A6               	movwf	___flmul@b+2
  8096  0C6C  3000               	movlw	0
  8097  0C6D  00A5               	movwf	___flmul@b+1
  8098  0C6E  3000               	movlw	0
  8099  0C6F  00A4               	movwf	___flmul@b
  8100  0C70  084C               	movf	strtod@_u+3,w
  8101  0C71  00AB               	movwf	___flmul@a+3
  8102  0C72  084B               	movf	strtod@_u+2,w
  8103  0C73  00AA               	movwf	___flmul@a+2
  8104  0C74  084A               	movf	strtod@_u+1,w
  8105  0C75  00A9               	movwf	___flmul@a+1
  8106  0C76  0849               	movf	strtod@_u,w
  8107  0C77  00A8               	movwf	___flmul@a
  8108  0C78  120A  118A  2028  120A  158A  	fcall	___flmul
  8109  0C7D  0827               	movf	?___flmul+3,w
  8110  0C7E  00CC               	movwf	strtod@_u+3
  8111  0C7F  0826               	movf	?___flmul+2,w
  8112  0C80  00CB               	movwf	strtod@_u+2
  8113  0C81  0825               	movf	?___flmul+1,w
  8114  0C82  00CA               	movwf	strtod@_u+1
  8115  0C83  0824               	movf	?___flmul,w
  8116  0C84  00C9               	movwf	strtod@_u
  8117  0C85  30FF               	movlw	255
  8118  0C86  00C2               	movwf	??_strtod
  8119  0C87  0842               	movf	??_strtod,w
  8120  0C88  07C8               	addwf	strtod@expon,f
  8121  0C89                     l4116:
  8122  0C89  0848               	movf	strtod@expon,w
  8123  0C8A  1D03               	btfss	3,2
  8124  0C8B  2C68               	goto	l4112
  8125  0C8C  307F               	movlw	127
  8126  0C8D  00F3               	movwf	___flge@ff1+3
  8127  0C8E  307F               	movlw	127
  8128  0C8F  00F2               	movwf	___flge@ff1+2
  8129  0C90  30FF               	movlw	255
  8130  0C91  00F1               	movwf	___flge@ff1+1
  8131  0C92  30FF               	movlw	255
  8132  0C93  00F0               	movwf	___flge@ff1
  8133  0C94  084C               	movf	strtod@_u+3,w
  8134  0C95  00F7               	movwf	___flge@ff2+3
  8135  0C96  084B               	movf	strtod@_u+2,w
  8136  0C97  00F6               	movwf	___flge@ff2+2
  8137  0C98  084A               	movf	strtod@_u+1,w
  8138  0C99  00F5               	movwf	___flge@ff2+1
  8139  0C9A  0849               	movf	strtod@_u,w
  8140  0C9B  00F4               	movwf	___flge@ff2
  8141  0C9C  160A  158A  2634  120A  158A  	fcall	___flge
  8142  0CA1  1803               	btfsc	3,0
  8143  0CA2  2CB8               	goto	l839
  8144  0CA3  1283               	bcf	3,5	;RP0=0, select bank0
  8145  0CA4  1C47               	btfss	strtod@flags,0
  8146  0CA5  2CAF               	goto	l4126
  8147  0CA6  3080               	movlw	128
  8148  0CA7  00C1               	movwf	?_strtod+3
  8149  0CA8  3080               	movlw	128
  8150  0CA9  00C0               	movwf	?_strtod+2
  8151  0CAA  3000               	movlw	0
  8152  0CAB  00BF               	movwf	?_strtod+1
  8153  0CAC  3000               	movlw	0
  8154  0CAD  00BE               	movwf	?_strtod
  8155  0CAE  0008               	return
  8156  0CAF                     l4126:
  8157  0CAF  3000               	movlw	0
  8158  0CB0  00C1               	movwf	?_strtod+3
  8159  0CB1  3080               	movlw	128
  8160  0CB2  00C0               	movwf	?_strtod+2
  8161  0CB3  3000               	movlw	0
  8162  0CB4  00BF               	movwf	?_strtod+1
  8163  0CB5  3000               	movlw	0
  8164  0CB6  00BE               	movwf	?_strtod
  8165  0CB7  0008               	return
  8166  0CB8                     l839:
  8167  0CB8  1283               	bcf	3,5	;RP0=0, select bank0
  8168  0CB9  1C47               	btfss	strtod@flags,0
  8169  0CBA  2CCF               	goto	l4132
  8170  0CBB  084C               	movf	strtod@_u+3,w
  8171  0CBC  00F3               	movwf	___flneg@f1+3
  8172  0CBD  084B               	movf	strtod@_u+2,w
  8173  0CBE  00F2               	movwf	___flneg@f1+2
  8174  0CBF  084A               	movf	strtod@_u+1,w
  8175  0CC0  00F1               	movwf	___flneg@f1+1
  8176  0CC1  0849               	movf	strtod@_u,w
  8177  0CC2  00F0               	movwf	___flneg@f1
  8178  0CC3  160A  158A  2193   	fcall	___flneg
  8179  0CC6  0873               	movf	?___flneg+3,w
  8180  0CC7  1283               	bcf	3,5	;RP0=0, select bank0
  8181  0CC8  00CC               	movwf	strtod@_u+3
  8182  0CC9  0872               	movf	?___flneg+2,w
  8183  0CCA  00CB               	movwf	strtod@_u+2
  8184  0CCB  0871               	movf	?___flneg+1,w
  8185  0CCC  00CA               	movwf	strtod@_u+1
  8186  0CCD  0870               	movf	?___flneg,w
  8187  0CCE  00C9               	movwf	strtod@_u
  8188  0CCF                     l4132:
  8189  0CCF  084C               	movf	strtod@_u+3,w
  8190  0CD0  00C1               	movwf	?_strtod+3
  8191  0CD1  084B               	movf	strtod@_u+2,w
  8192  0CD2  00C0               	movwf	?_strtod+2
  8193  0CD3  084A               	movf	strtod@_u+1,w
  8194  0CD4  00BF               	movwf	?_strtod+1
  8195  0CD5  0849               	movf	strtod@_u,w
  8196  0CD6  00BE               	movwf	?_strtod
  8197  0CD7  0008               	return
  8198  0CD8                     __end_of_strtod:
  8199                           
  8200                           	psect	text29
  8201  19CF                     __ptext29:	
  8202 ;; *************** function _isspace *****************
  8203 ;; Defined at:
  8204 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\isspace.c"
  8205 ;; Parameters:    Size  Location     Type
  8206 ;;  c               1    wreg     unsigned char 
  8207 ;; Auto vars:     Size  Location     Type
  8208 ;;  c               1    1[COMMON] unsigned char 
  8209 ;; Return value:  Size  Location     Type
  8210 ;;		None               void
  8211 ;; Registers used:
  8212 ;;		wreg, status,2, status,0
  8213 ;; Tracked objects:
  8214 ;;		On entry : B00/800
  8215 ;;		On exit  : B00/800
  8216 ;;		Unchanged: B00/0
  8217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8218 ;;      Params:         0       0       0       0       0
  8219 ;;      Locals:         2       0       0       0       0
  8220 ;;      Temps:          0       0       0       0       0
  8221 ;;      Totals:         2       0       0       0       0
  8222 ;;Total ram usage:        2 bytes
  8223 ;; Hardware stack levels used: 1
  8224 ;; This function calls:
  8225 ;;		Nothing
  8226 ;; This function is called by:
  8227 ;;		_strtod
  8228 ;; This function uses a non-reentrant model
  8229 ;;
  8230                           
  8231  19CF                     _isspace:	
  8232                           ;psect for function _isspace
  8233                           
  8234                           
  8235                           ;incstack = 0
  8236                           ; Regs used in _isspace: [wreg+status,2+status,0]
  8237                           ;isspace@c stored from wreg
  8238  19CF  00F1               	movwf	isspace@c
  8239  19D0  01F0               	clrf	_isspace$669
  8240  19D1  0AF0               	incf	_isspace$669,f
  8241  19D2  3020               	movlw	32
  8242  19D3  0671               	xorwf	isspace@c,w
  8243  19D4  1903               	btfsc	3,2
  8244  19D5  29DF               	goto	l3740
  8245  19D6  300E               	movlw	14
  8246  19D7  0271               	subwf	isspace@c,w
  8247  19D8  1803               	skipnc
  8248  19D9  29DE               	goto	l3738
  8249  19DA  3009               	movlw	9
  8250  19DB  0271               	subwf	isspace@c,w
  8251  19DC  1803               	skipnc
  8252  19DD  29DF               	goto	l3740
  8253  19DE                     l3738:
  8254  19DE  01F0               	clrf	_isspace$669
  8255  19DF                     l3740:
  8256  19DF  0C70               	rrf	_isspace$669,w
  8257  19E0  0008               	return
  8258  19E1                     __end_of_isspace:
  8259                           
  8260                           	psect	text30
  8261  0800                     __ptext30:	
  8262 ;; *************** function _isdigit *****************
  8263 ;; Defined at:
  8264 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\isdigit.c"
  8265 ;; Parameters:    Size  Location     Type
  8266 ;;  c               1    wreg     unsigned char 
  8267 ;; Auto vars:     Size  Location     Type
  8268 ;;  c               1    1[COMMON] unsigned char 
  8269 ;; Return value:  Size  Location     Type
  8270 ;;		None               void
  8271 ;; Registers used:
  8272 ;;		wreg, status,2, status,0
  8273 ;; Tracked objects:
  8274 ;;		On entry : B00/800
  8275 ;;		On exit  : B00/800
  8276 ;;		Unchanged: B00/0
  8277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8278 ;;      Params:         0       0       0       0       0
  8279 ;;      Locals:         2       0       0       0       0
  8280 ;;      Temps:          0       0       0       0       0
  8281 ;;      Totals:         2       0       0       0       0
  8282 ;;Total ram usage:        2 bytes
  8283 ;; Hardware stack levels used: 1
  8284 ;; This function calls:
  8285 ;;		Nothing
  8286 ;; This function is called by:
  8287 ;;		_strtod
  8288 ;; This function uses a non-reentrant model
  8289 ;;
  8290                           
  8291  0800                     _isdigit:	
  8292                           ;psect for function _isdigit
  8293                           
  8294                           
  8295                           ;incstack = 0
  8296                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  8297                           ;isdigit@c stored from wreg
  8298  0800  00F1               	movwf	isdigit@c
  8299  0801  01F0               	clrf	_isdigit$666
  8300  0802  303A               	movlw	58
  8301  0803  0271               	subwf	isdigit@c,w
  8302  0804  1803               	skipnc
  8303  0805  280C               	goto	l3752
  8304  0806  3030               	movlw	48
  8305  0807  0271               	subwf	isdigit@c,w
  8306  0808  1C03               	skipc
  8307  0809  280C               	goto	l3752
  8308  080A  01F0               	clrf	_isdigit$666
  8309  080B  0AF0               	incf	_isdigit$666,f
  8310  080C                     l3752:
  8311  080C  0C70               	rrf	_isdigit$666,w
  8312  080D  0008               	return
  8313  080E                     __end_of_isdigit:
  8314                           
  8315                           	psect	text31
  8316  1F5D                     __ptext31:	
  8317 ;; *************** function ___xxtofl *****************
  8318 ;; Defined at:
  8319 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\xxtofl.c"
  8320 ;; Parameters:    Size  Location     Type
  8321 ;;  sign            1    wreg     unsigned char 
  8322 ;;  val             4    0[COMMON] long 
  8323 ;; Auto vars:     Size  Location     Type
  8324 ;;  sign            1    8[COMMON] unsigned char 
  8325 ;;  arg             4   10[COMMON] unsigned long 
  8326 ;;  exp             1    9[COMMON] unsigned char 
  8327 ;; Return value:  Size  Location     Type
  8328 ;;                  4    0[COMMON] unsigned char 
  8329 ;; Registers used:
  8330 ;;		wreg, status,2, status,0
  8331 ;; Tracked objects:
  8332 ;;		On entry : 200/100
  8333 ;;		On exit  : 200/0
  8334 ;;		Unchanged: 200/0
  8335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8336 ;;      Params:         4       0       0       0       0
  8337 ;;      Locals:         6       0       0       0       0
  8338 ;;      Temps:          4       0       0       0       0
  8339 ;;      Totals:        14       0       0       0       0
  8340 ;;Total ram usage:       14 bytes
  8341 ;; Hardware stack levels used: 1
  8342 ;; This function calls:
  8343 ;;		Nothing
  8344 ;; This function is called by:
  8345 ;;		_sprintf
  8346 ;;		_strtod
  8347 ;; This function uses a non-reentrant model
  8348 ;;
  8349                           
  8350  1F5D                     ___xxtofl:	
  8351                           ;psect for function ___xxtofl
  8352                           
  8353                           
  8354                           ;incstack = 0
  8355                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8356                           ;___xxtofl@sign stored from wreg
  8357  1F5D  00F8               	movwf	___xxtofl@sign
  8358  1F5E  0878               	movf	___xxtofl@sign,w
  8359  1F5F  1D03               	btfss	3,2
  8360  1F60  1FF3               	btfss	___xxtofl@val+3,7
  8361  1F61  2F72               	goto	l3692
  8362  1F62  0970               	comf	___xxtofl@val,w
  8363  1F63  00FA               	movwf	___xxtofl@arg
  8364  1F64  0971               	comf	___xxtofl@val+1,w
  8365  1F65  00FB               	movwf	___xxtofl@arg+1
  8366  1F66  0972               	comf	___xxtofl@val+2,w
  8367  1F67  00FC               	movwf	___xxtofl@arg+2
  8368  1F68  0973               	comf	___xxtofl@val+3,w
  8369  1F69  00FD               	movwf	___xxtofl@arg+3
  8370  1F6A  0AFA               	incf	___xxtofl@arg,f
  8371  1F6B  1903               	skipnz
  8372  1F6C  0AFB               	incf	___xxtofl@arg+1,f
  8373  1F6D  1903               	skipnz
  8374  1F6E  0AFC               	incf	___xxtofl@arg+2,f
  8375  1F6F  1903               	skipnz
  8376  1F70  0AFD               	incf	___xxtofl@arg+3,f
  8377  1F71  2F7A               	goto	l776
  8378  1F72                     l3692:
  8379  1F72  0873               	movf	___xxtofl@val+3,w
  8380  1F73  00FD               	movwf	___xxtofl@arg+3
  8381  1F74  0872               	movf	___xxtofl@val+2,w
  8382  1F75  00FC               	movwf	___xxtofl@arg+2
  8383  1F76  0871               	movf	___xxtofl@val+1,w
  8384  1F77  00FB               	movwf	___xxtofl@arg+1
  8385  1F78  0870               	movf	___xxtofl@val,w
  8386  1F79  00FA               	movwf	___xxtofl@arg
  8387  1F7A                     l776:
  8388  1F7A  0873               	movf	___xxtofl@val+3,w
  8389  1F7B  0472               	iorwf	___xxtofl@val+2,w
  8390  1F7C  0471               	iorwf	___xxtofl@val+1,w
  8391  1F7D  0470               	iorwf	___xxtofl@val,w
  8392  1F7E  1D03               	skipz
  8393  1F7F  2F89               	goto	l3698
  8394  1F80  3000               	movlw	0
  8395  1F81  00F3               	movwf	?___xxtofl+3
  8396  1F82  3000               	movlw	0
  8397  1F83  00F2               	movwf	?___xxtofl+2
  8398  1F84  3000               	movlw	0
  8399  1F85  00F1               	movwf	?___xxtofl+1
  8400  1F86  3000               	movlw	0
  8401  1F87  00F0               	movwf	?___xxtofl
  8402  1F88  0008               	return
  8403  1F89                     l3698:
  8404  1F89  3096               	movlw	150
  8405  1F8A  00F4               	movwf	??___xxtofl
  8406  1F8B  0874               	movf	??___xxtofl,w
  8407  1F8C  00F9               	movwf	___xxtofl@exp
  8408  1F8D                     l3702:
  8409  1F8D  30FE               	movlw	254
  8410  1F8E  057D               	andwf	___xxtofl@arg+3,w
  8411  1F8F  1903               	btfsc	3,2
  8412  1F90  2FBA               	goto	l782
  8413  1F91  3001               	movlw	1
  8414  1F92  00F4               	movwf	??___xxtofl
  8415  1F93  0874               	movf	??___xxtofl,w
  8416  1F94  07F9               	addwf	___xxtofl@exp,f
  8417  1F95  3001               	movlw	1
  8418  1F96                     u5955:
  8419  1F96  1003               	clrc
  8420  1F97  0CFD               	rrf	___xxtofl@arg+3,f
  8421  1F98  0CFC               	rrf	___xxtofl@arg+2,f
  8422  1F99  0CFB               	rrf	___xxtofl@arg+1,f
  8423  1F9A  0CFA               	rrf	___xxtofl@arg,f
  8424  1F9B  3EFF               	addlw	-1
  8425  1F9C  1D03               	skipz
  8426  1F9D  2F96               	goto	u5955
  8427  1F9E  2F8D               	goto	l3702
  8428  1F9F                     l3704:
  8429  1F9F  3001               	movlw	1
  8430  1FA0  00F4               	movwf	??___xxtofl
  8431  1FA1  0874               	movf	??___xxtofl,w
  8432  1FA2  07F9               	addwf	___xxtofl@exp,f
  8433  1FA3  3001               	movlw	1
  8434  1FA4  07FA               	addwf	___xxtofl@arg,f
  8435  1FA5  3000               	movlw	0
  8436  1FA6  1803               	skipnc
  8437  1FA7  3001               	movlw	1
  8438  1FA8  07FB               	addwf	___xxtofl@arg+1,f
  8439  1FA9  3000               	movlw	0
  8440  1FAA  1803               	skipnc
  8441  1FAB  3001               	movlw	1
  8442  1FAC  07FC               	addwf	___xxtofl@arg+2,f
  8443  1FAD  3000               	movlw	0
  8444  1FAE  1803               	skipnc
  8445  1FAF  3001               	movlw	1
  8446  1FB0  07FD               	addwf	___xxtofl@arg+3,f
  8447  1FB1  3001               	movlw	1
  8448  1FB2                     u5975:
  8449  1FB2  1003               	clrc
  8450  1FB3  0CFD               	rrf	___xxtofl@arg+3,f
  8451  1FB4  0CFC               	rrf	___xxtofl@arg+2,f
  8452  1FB5  0CFB               	rrf	___xxtofl@arg+1,f
  8453  1FB6  0CFA               	rrf	___xxtofl@arg,f
  8454  1FB7  3EFF               	addlw	-1
  8455  1FB8  1D03               	skipz
  8456  1FB9  2FB2               	goto	u5975
  8457  1FBA                     l782:
  8458  1FBA  30FF               	movlw	255
  8459  1FBB  057D               	andwf	___xxtofl@arg+3,w
  8460  1FBC  1903               	btfsc	3,2
  8461  1FBD  2FCE               	goto	l3712
  8462  1FBE  2F9F               	goto	l3704
  8463  1FBF                     l3714:
  8464  1FBF  3002               	movlw	2
  8465  1FC0  0279               	subwf	___xxtofl@exp,w
  8466  1FC1  1C03               	btfss	3,0
  8467  1FC2  2FD0               	goto	l789
  8468  1FC3  3001               	movlw	1
  8469  1FC4  02F9               	subwf	___xxtofl@exp,f
  8470  1FC5  3001               	movlw	1
  8471  1FC6  00F4               	movwf	??___xxtofl
  8472  1FC7                     u5995:
  8473  1FC7  1003               	clrc
  8474  1FC8  0DFA               	rlf	___xxtofl@arg,f
  8475  1FC9  0DFB               	rlf	___xxtofl@arg+1,f
  8476  1FCA  0DFC               	rlf	___xxtofl@arg+2,f
  8477  1FCB  0DFD               	rlf	___xxtofl@arg+3,f
  8478  1FCC  0BF4               	decfsz	??___xxtofl,f
  8479  1FCD  2FC7               	goto	u5995
  8480  1FCE                     l3712:
  8481  1FCE  1FFC               	btfss	___xxtofl@arg+2,7
  8482  1FCF  2FBF               	goto	l3714
  8483  1FD0                     l789:
  8484  1FD0  1879               	btfsc	___xxtofl@exp,0
  8485  1FD1  2FDA               	goto	l790
  8486  1FD2  30FF               	movlw	255
  8487  1FD3  05FA               	andwf	___xxtofl@arg,f
  8488  1FD4  30FF               	movlw	255
  8489  1FD5  05FB               	andwf	___xxtofl@arg+1,f
  8490  1FD6  307F               	movlw	127
  8491  1FD7  05FC               	andwf	___xxtofl@arg+2,f
  8492  1FD8  30FF               	movlw	255
  8493  1FD9  05FD               	andwf	___xxtofl@arg+3,f
  8494  1FDA                     l790:
  8495  1FDA  1003               	clrc
  8496  1FDB  0CF9               	rrf	___xxtofl@exp,f
  8497  1FDC  0879               	movf	___xxtofl@exp,w
  8498  1FDD  00F4               	movwf	??___xxtofl
  8499  1FDE  01F5               	clrf	??___xxtofl+1
  8500  1FDF  01F6               	clrf	??___xxtofl+2
  8501  1FE0  01F7               	clrf	??___xxtofl+3
  8502  1FE1  3018               	movlw	24
  8503  1FE2                     u6035:
  8504  1FE2  1003               	clrc
  8505  1FE3  0DF4               	rlf	??___xxtofl,f
  8506  1FE4  0DF5               	rlf	??___xxtofl+1,f
  8507  1FE5  0DF6               	rlf	??___xxtofl+2,f
  8508  1FE6  0DF7               	rlf	??___xxtofl+3,f
  8509  1FE7  3EFF               	addlw	-1
  8510  1FE8  1D03               	skipz
  8511  1FE9  2FE2               	goto	u6035
  8512  1FEA  0874               	movf	??___xxtofl,w
  8513  1FEB  04FA               	iorwf	___xxtofl@arg,f
  8514  1FEC  0875               	movf	??___xxtofl+1,w
  8515  1FED  04FB               	iorwf	___xxtofl@arg+1,f
  8516  1FEE  0876               	movf	??___xxtofl+2,w
  8517  1FEF  04FC               	iorwf	___xxtofl@arg+2,f
  8518  1FF0  0877               	movf	??___xxtofl+3,w
  8519  1FF1  04FD               	iorwf	___xxtofl@arg+3,f
  8520  1FF2  0878               	movf	___xxtofl@sign,w
  8521  1FF3  1D03               	btfss	3,2
  8522  1FF4  1FF3               	btfss	___xxtofl@val+3,7
  8523  1FF5  2FF7               	goto	l3726
  8524  1FF6  17FD               	bsf	___xxtofl@arg+3,7
  8525  1FF7                     l3726:
  8526  1FF7  087D               	movf	___xxtofl@arg+3,w
  8527  1FF8  00F3               	movwf	?___xxtofl+3
  8528  1FF9  087C               	movf	___xxtofl@arg+2,w
  8529  1FFA  00F2               	movwf	?___xxtofl+2
  8530  1FFB  087B               	movf	___xxtofl@arg+1,w
  8531  1FFC  00F1               	movwf	?___xxtofl+1
  8532  1FFD  087A               	movf	___xxtofl@arg,w
  8533  1FFE  00F0               	movwf	?___xxtofl
  8534  1FFF  0008               	return
  8535  2000                     __end_of___xxtofl:
  8536                           
  8537                           	psect	text32
  8538  1BB4                     __ptext32:	
  8539 ;; *************** function ___lmul *****************
  8540 ;; Defined at:
  8541 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul32.c"
  8542 ;; Parameters:    Size  Location     Type
  8543 ;;  multiplier      4    0[COMMON] unsigned long 
  8544 ;;  multiplicand    4    4[COMMON] unsigned long 
  8545 ;; Auto vars:     Size  Location     Type
  8546 ;;  product         4    9[COMMON] unsigned long 
  8547 ;; Return value:  Size  Location     Type
  8548 ;;                  4    0[COMMON] unsigned long 
  8549 ;; Registers used:
  8550 ;;		wreg, status,2, status,0
  8551 ;; Tracked objects:
  8552 ;;		On entry : B00/800
  8553 ;;		On exit  : B00/800
  8554 ;;		Unchanged: B00/0
  8555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8556 ;;      Params:         8       0       0       0       0
  8557 ;;      Locals:         4       0       0       0       0
  8558 ;;      Temps:          1       0       0       0       0
  8559 ;;      Totals:        13       0       0       0       0
  8560 ;;Total ram usage:       13 bytes
  8561 ;; Hardware stack levels used: 1
  8562 ;; This function calls:
  8563 ;;		Nothing
  8564 ;; This function is called by:
  8565 ;;		_strtod
  8566 ;; This function uses a non-reentrant model
  8567 ;;
  8568                           
  8569  1BB4                     ___lmul:	
  8570                           ;psect for function ___lmul
  8571                           
  8572                           
  8573                           ;incstack = 0
  8574                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  8575  1BB4  3000               	movlw	0
  8576  1BB5  00FC               	movwf	___lmul@product+3
  8577  1BB6  3000               	movlw	0
  8578  1BB7  00FB               	movwf	___lmul@product+2
  8579  1BB8  3000               	movlw	0
  8580  1BB9  00FA               	movwf	___lmul@product+1
  8581  1BBA  3000               	movlw	0
  8582  1BBB  00F9               	movwf	___lmul@product
  8583  1BBC                     l3392:
  8584  1BBC  1C70               	btfss	___lmul@multiplier,0
  8585  1BBD  2BD2               	goto	l3396
  8586  1BBE  0874               	movf	___lmul@multiplicand,w
  8587  1BBF  07F9               	addwf	___lmul@product,f
  8588  1BC0  0875               	movf	___lmul@multiplicand+1,w
  8589  1BC1  1103               	clrz
  8590  1BC2  1803               	skipnc
  8591  1BC3  3E01               	addlw	1
  8592  1BC4  1D03               	btfss	3,2
  8593  1BC5  07FA               	addwf	___lmul@product+1,f
  8594  1BC6  0876               	movf	___lmul@multiplicand+2,w
  8595  1BC7  1103               	clrz
  8596  1BC8  1803               	skipnc
  8597  1BC9  3E01               	addlw	1
  8598  1BCA  1D03               	btfss	3,2
  8599  1BCB  07FB               	addwf	___lmul@product+2,f
  8600  1BCC  0877               	movf	___lmul@multiplicand+3,w
  8601  1BCD  1103               	clrz
  8602  1BCE  1803               	skipnc
  8603  1BCF  3E01               	addlw	1
  8604  1BD0  1D03               	btfss	3,2
  8605  1BD1  07FC               	addwf	___lmul@product+3,f
  8606  1BD2                     l3396:
  8607  1BD2  3001               	movlw	1
  8608  1BD3  00F8               	movwf	??___lmul
  8609  1BD4                     u5235:
  8610  1BD4  1003               	clrc
  8611  1BD5  0DF4               	rlf	___lmul@multiplicand,f
  8612  1BD6  0DF5               	rlf	___lmul@multiplicand+1,f
  8613  1BD7  0DF6               	rlf	___lmul@multiplicand+2,f
  8614  1BD8  0DF7               	rlf	___lmul@multiplicand+3,f
  8615  1BD9  0BF8               	decfsz	??___lmul,f
  8616  1BDA  2BD4               	goto	u5235
  8617  1BDB  3001               	movlw	1
  8618  1BDC                     u5245:
  8619  1BDC  1003               	clrc
  8620  1BDD  0CF3               	rrf	___lmul@multiplier+3,f
  8621  1BDE  0CF2               	rrf	___lmul@multiplier+2,f
  8622  1BDF  0CF1               	rrf	___lmul@multiplier+1,f
  8623  1BE0  0CF0               	rrf	___lmul@multiplier,f
  8624  1BE1  3EFF               	addlw	-1
  8625  1BE2  1D03               	skipz
  8626  1BE3  2BDC               	goto	u5245
  8627  1BE4  0873               	movf	___lmul@multiplier+3,w
  8628  1BE5  0472               	iorwf	___lmul@multiplier+2,w
  8629  1BE6  0471               	iorwf	___lmul@multiplier+1,w
  8630  1BE7  0470               	iorwf	___lmul@multiplier,w
  8631  1BE8  1D03               	skipz
  8632  1BE9  2BBC               	goto	l3392
  8633  1BEA  087C               	movf	___lmul@product+3,w
  8634  1BEB  00F3               	movwf	?___lmul+3
  8635  1BEC  087B               	movf	___lmul@product+2,w
  8636  1BED  00F2               	movwf	?___lmul+2
  8637  1BEE  087A               	movf	___lmul@product+1,w
  8638  1BEF  00F1               	movwf	?___lmul+1
  8639  1BF0  0879               	movf	___lmul@product,w
  8640  1BF1  00F0               	movwf	?___lmul
  8641  1BF2  0008               	return
  8642  1BF3                     __end_of___lmul:
  8643                           
  8644                           	psect	text33
  8645  1993                     __ptext33:	
  8646 ;; *************** function ___flneg *****************
  8647 ;; Defined at:
  8648 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\flneg.c"
  8649 ;; Parameters:    Size  Location     Type
  8650 ;;  f1              4    0[COMMON] unsigned long 
  8651 ;; Auto vars:     Size  Location     Type
  8652 ;;		None
  8653 ;; Return value:  Size  Location     Type
  8654 ;;                  4    0[COMMON] unsigned long 
  8655 ;; Registers used:
  8656 ;;		wreg
  8657 ;; Tracked objects:
  8658 ;;		On entry : 200/100
  8659 ;;		On exit  : 200/0
  8660 ;;		Unchanged: 200/0
  8661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8662 ;;      Params:         4       0       0       0       0
  8663 ;;      Locals:         0       0       0       0       0
  8664 ;;      Temps:          0       0       0       0       0
  8665 ;;      Totals:         4       0       0       0       0
  8666 ;;Total ram usage:        4 bytes
  8667 ;; Hardware stack levels used: 1
  8668 ;; This function calls:
  8669 ;;		Nothing
  8670 ;; This function is called by:
  8671 ;;		_sprintf
  8672 ;;		_strtod
  8673 ;; This function uses a non-reentrant model
  8674 ;;
  8675                           
  8676  1993                     ___flneg:	
  8677                           ;psect for function ___flneg
  8678                           
  8679                           
  8680                           ;incstack = 0
  8681                           ; Regs used in ___flneg: [wreg]
  8682  1993  0873               	movf	___flneg@f1+3,w
  8683  1994  0472               	iorwf	___flneg@f1+2,w
  8684  1995  0471               	iorwf	___flneg@f1+1,w
  8685  1996  0470               	iorwf	___flneg@f1,w
  8686  1997  1903               	skipnz
  8687  1998  0008               	return
  8688  1999  3080               	movlw	128
  8689  199A  06F3               	xorwf	___flneg@f1+3,f
  8690  199B  0008               	return
  8691  199C                     __end_of___flneg:
  8692                           
  8693                           	psect	text34
  8694  0028                     __ptext34:	
  8695 ;; *************** function ___flmul *****************
  8696 ;; Defined at:
  8697 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcmul.c"
  8698 ;; Parameters:    Size  Location     Type
  8699 ;;  b               4    4[BANK0 ] unsigned long 
  8700 ;;  a               4    8[BANK0 ] unsigned long 
  8701 ;; Auto vars:     Size  Location     Type
  8702 ;;  prod            4   24[BANK0 ] struct .
  8703 ;;  grs             4   19[BANK0 ] unsigned long 
  8704 ;;  temp            2   28[BANK0 ] struct .
  8705 ;;  bexp            1   23[BANK0 ] unsigned char 
  8706 ;;  aexp            1   18[BANK0 ] unsigned char 
  8707 ;;  sign            1   17[BANK0 ] unsigned char 
  8708 ;; Return value:  Size  Location     Type
  8709 ;;                  4    4[BANK0 ] unsigned char 
  8710 ;; Registers used:
  8711 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8712 ;; Tracked objects:
  8713 ;;		On entry : 300/0
  8714 ;;		On exit  : 300/0
  8715 ;;		Unchanged: 0/0
  8716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8717 ;;      Params:         0       8       0       0       0
  8718 ;;      Locals:         0      13       0       0       0
  8719 ;;      Temps:          0       5       0       0       0
  8720 ;;      Totals:         0      26       0       0       0
  8721 ;;Total ram usage:       26 bytes
  8722 ;; Hardware stack levels used: 1
  8723 ;; Hardware stack levels required when called: 1
  8724 ;; This function calls:
  8725 ;;		__Umul8_16
  8726 ;; This function is called by:
  8727 ;;		_calc
  8728 ;;		_fround
  8729 ;;		_scale
  8730 ;;		_sprintf
  8731 ;;		_strtod
  8732 ;; This function uses a non-reentrant model
  8733 ;;
  8734                           
  8735  0028                     ___flmul:	
  8736                           ;psect for function ___flmul
  8737                           
  8738                           
  8739                           ;incstack = 0
  8740                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8741  0028  0827               	movf	___flmul@b+3,w
  8742  0029  3980               	andlw	128
  8743  002A  00AC               	movwf	??___flmul
  8744  002B  082C               	movf	??___flmul,w
  8745  002C  00B1               	movwf	___flmul@sign
  8746  002D  0827               	movf	___flmul@b+3,w
  8747  002E  00AC               	movwf	??___flmul
  8748  002F  072C               	addwf	??___flmul,w
  8749  0030  00AD               	movwf	??___flmul+1
  8750  0031  082D               	movf	??___flmul+1,w
  8751  0032  00B7               	movwf	___flmul@bexp
  8752  0033  1BA6               	btfsc	___flmul@b+2,7
  8753  0034  1437               	bsf	___flmul@bexp,0
  8754  0035  0837               	movf	___flmul@bexp,w
  8755  0036  1903               	btfsc	3,2
  8756  0037  2845               	goto	l3048
  8757  0038  0A37               	incf	___flmul@bexp,w
  8758  0039  1D03               	btfss	3,2
  8759  003A  2843               	goto	l3046
  8760  003B  3000               	movlw	0
  8761  003C  00A7               	movwf	___flmul@b+3
  8762  003D  3000               	movlw	0
  8763  003E  00A6               	movwf	___flmul@b+2
  8764  003F  3000               	movlw	0
  8765  0040  00A5               	movwf	___flmul@b+1
  8766  0041  3000               	movlw	0
  8767  0042  00A4               	movwf	___flmul@b
  8768  0043                     l3046:
  8769  0043  17A6               	bsf	___flmul@b+2,7
  8770  0044  284D               	goto	l3050
  8771  0045                     l3048:
  8772  0045  3000               	movlw	0
  8773  0046  00A7               	movwf	___flmul@b+3
  8774  0047  3000               	movlw	0
  8775  0048  00A6               	movwf	___flmul@b+2
  8776  0049  3000               	movlw	0
  8777  004A  00A5               	movwf	___flmul@b+1
  8778  004B  3000               	movlw	0
  8779  004C  00A4               	movwf	___flmul@b
  8780  004D                     l3050:
  8781  004D  082B               	movf	___flmul@a+3,w
  8782  004E  3980               	andlw	128
  8783  004F  00AC               	movwf	??___flmul
  8784  0050  082C               	movf	??___flmul,w
  8785  0051  06B1               	xorwf	___flmul@sign,f
  8786  0052  082B               	movf	___flmul@a+3,w
  8787  0053  00AC               	movwf	??___flmul
  8788  0054  072C               	addwf	??___flmul,w
  8789  0055  00AD               	movwf	??___flmul+1
  8790  0056  082D               	movf	??___flmul+1,w
  8791  0057  00B2               	movwf	___flmul@aexp
  8792  0058  1BAA               	btfsc	___flmul@a+2,7
  8793  0059  1432               	bsf	___flmul@aexp,0
  8794  005A  0832               	movf	___flmul@aexp,w
  8795  005B  1903               	btfsc	3,2
  8796  005C  286A               	goto	l3066
  8797  005D  0A32               	incf	___flmul@aexp,w
  8798  005E  1D03               	btfss	3,2
  8799  005F  2868               	goto	l3064
  8800  0060  3000               	movlw	0
  8801  0061  00AB               	movwf	___flmul@a+3
  8802  0062  3000               	movlw	0
  8803  0063  00AA               	movwf	___flmul@a+2
  8804  0064  3000               	movlw	0
  8805  0065  00A9               	movwf	___flmul@a+1
  8806  0066  3000               	movlw	0
  8807  0067  00A8               	movwf	___flmul@a
  8808  0068                     l3064:
  8809  0068  17AA               	bsf	___flmul@a+2,7
  8810  0069  2872               	goto	l3068
  8811  006A                     l3066:
  8812  006A  3000               	movlw	0
  8813  006B  00AB               	movwf	___flmul@a+3
  8814  006C  3000               	movlw	0
  8815  006D  00AA               	movwf	___flmul@a+2
  8816  006E  3000               	movlw	0
  8817  006F  00A9               	movwf	___flmul@a+1
  8818  0070  3000               	movlw	0
  8819  0071  00A8               	movwf	___flmul@a
  8820  0072                     l3068:
  8821  0072  0832               	movf	___flmul@aexp,w
  8822  0073  1D03               	btfss	3,2
  8823  0074  0837               	movf	___flmul@bexp,w
  8824  0075  1D03               	btfss	3,2
  8825  0076  2880               	goto	l3076
  8826  0077  3000               	movlw	0
  8827  0078  00A7               	movwf	?___flmul+3
  8828  0079  3000               	movlw	0
  8829  007A  00A6               	movwf	?___flmul+2
  8830  007B  3000               	movlw	0
  8831  007C  00A5               	movwf	?___flmul+1
  8832  007D  3000               	movlw	0
  8833  007E  00A4               	movwf	?___flmul
  8834  007F  0008               	return
  8835  0080                     l3076:
  8836  0080  0824               	movf	___flmul@b,w
  8837  0081  00AC               	movwf	??___flmul
  8838  0082  082C               	movf	??___flmul,w
  8839  0083  00F0               	movwf	__Umul8_16@multiplicand
  8840  0084  082A               	movf	___flmul@a+2,w
  8841  0085  160A  158A  22DF  120A  118A  	fcall	__Umul8_16
  8842  008A  0871               	movf	?__Umul8_16+1,w
  8843  008B  00BD               	movwf	___flmul@temp+1
  8844  008C  0870               	movf	?__Umul8_16,w
  8845  008D  00BC               	movwf	___flmul@temp
  8846  008E  083C               	movf	___flmul@temp,w
  8847  008F  00AC               	movwf	??___flmul
  8848  0090  01AD               	clrf	??___flmul+1
  8849  0091  01AE               	clrf	??___flmul+2
  8850  0092  01AF               	clrf	??___flmul+3
  8851  0093  082F               	movf	??___flmul+3,w
  8852  0094  00B6               	movwf	___flmul@grs+3
  8853  0095  082E               	movf	??___flmul+2,w
  8854  0096  00B5               	movwf	___flmul@grs+2
  8855  0097  082D               	movf	??___flmul+1,w
  8856  0098  00B4               	movwf	___flmul@grs+1
  8857  0099  082C               	movf	??___flmul,w
  8858  009A  00B3               	movwf	___flmul@grs
  8859  009B  083D               	movf	___flmul@temp+1,w
  8860  009C  00AC               	movwf	??___flmul
  8861  009D  01AD               	clrf	??___flmul+1
  8862  009E  01AE               	clrf	??___flmul+2
  8863  009F  01AF               	clrf	??___flmul+3
  8864  00A0  082F               	movf	??___flmul+3,w
  8865  00A1  00BB               	movwf	___flmul@prod+3
  8866  00A2  082E               	movf	??___flmul+2,w
  8867  00A3  00BA               	movwf	___flmul@prod+2
  8868  00A4  082D               	movf	??___flmul+1,w
  8869  00A5  00B9               	movwf	___flmul@prod+1
  8870  00A6  082C               	movf	??___flmul,w
  8871  00A7  00B8               	movwf	___flmul@prod
  8872  00A8  0825               	movf	___flmul@b+1,w
  8873  00A9  00AC               	movwf	??___flmul
  8874  00AA  082C               	movf	??___flmul,w
  8875  00AB  00F0               	movwf	__Umul8_16@multiplicand
  8876  00AC  0829               	movf	___flmul@a+1,w
  8877  00AD  160A  158A  22DF  120A  118A  	fcall	__Umul8_16
  8878  00B2  0871               	movf	?__Umul8_16+1,w
  8879  00B3  00BD               	movwf	___flmul@temp+1
  8880  00B4  0870               	movf	?__Umul8_16,w
  8881  00B5  00BC               	movwf	___flmul@temp
  8882  00B6  083C               	movf	___flmul@temp,w
  8883  00B7  00AC               	movwf	??___flmul
  8884  00B8  01AD               	clrf	??___flmul+1
  8885  00B9  01AE               	clrf	??___flmul+2
  8886  00BA  01AF               	clrf	??___flmul+3
  8887  00BB  082C               	movf	??___flmul,w
  8888  00BC  07B3               	addwf	___flmul@grs,f
  8889  00BD  082D               	movf	??___flmul+1,w
  8890  00BE  1103               	clrz
  8891  00BF  1803               	skipnc
  8892  00C0  3E01               	addlw	1
  8893  00C1  1D03               	btfss	3,2
  8894  00C2  07B4               	addwf	___flmul@grs+1,f
  8895  00C3  082E               	movf	??___flmul+2,w
  8896  00C4  1103               	clrz
  8897  00C5  1803               	skipnc
  8898  00C6  3E01               	addlw	1
  8899  00C7  1D03               	btfss	3,2
  8900  00C8  07B5               	addwf	___flmul@grs+2,f
  8901  00C9  082F               	movf	??___flmul+3,w
  8902  00CA  1103               	clrz
  8903  00CB  1803               	skipnc
  8904  00CC  3E01               	addlw	1
  8905  00CD  1D03               	btfss	3,2
  8906  00CE  07B6               	addwf	___flmul@grs+3,f
  8907  00CF  083D               	movf	___flmul@temp+1,w
  8908  00D0  00AC               	movwf	??___flmul
  8909  00D1  01AD               	clrf	??___flmul+1
  8910  00D2  01AE               	clrf	??___flmul+2
  8911  00D3  01AF               	clrf	??___flmul+3
  8912  00D4  082C               	movf	??___flmul,w
  8913  00D5  07B8               	addwf	___flmul@prod,f
  8914  00D6  082D               	movf	??___flmul+1,w
  8915  00D7  1103               	clrz
  8916  00D8  1803               	skipnc
  8917  00D9  3E01               	addlw	1
  8918  00DA  1D03               	btfss	3,2
  8919  00DB  07B9               	addwf	___flmul@prod+1,f
  8920  00DC  082E               	movf	??___flmul+2,w
  8921  00DD  1103               	clrz
  8922  00DE  1803               	skipnc
  8923  00DF  3E01               	addlw	1
  8924  00E0  1D03               	btfss	3,2
  8925  00E1  07BA               	addwf	___flmul@prod+2,f
  8926  00E2  082F               	movf	??___flmul+3,w
  8927  00E3  1103               	clrz
  8928  00E4  1803               	skipnc
  8929  00E5  3E01               	addlw	1
  8930  00E6  1D03               	btfss	3,2
  8931  00E7  07BB               	addwf	___flmul@prod+3,f
  8932  00E8  0826               	movf	___flmul@b+2,w
  8933  00E9  00AC               	movwf	??___flmul
  8934  00EA  082C               	movf	??___flmul,w
  8935  00EB  00F0               	movwf	__Umul8_16@multiplicand
  8936  00EC  0828               	movf	___flmul@a,w
  8937  00ED  160A  158A  22DF  120A  118A  	fcall	__Umul8_16
  8938  00F2  0871               	movf	?__Umul8_16+1,w
  8939  00F3  00BD               	movwf	___flmul@temp+1
  8940  00F4  0870               	movf	?__Umul8_16,w
  8941  00F5  00BC               	movwf	___flmul@temp
  8942  00F6  083C               	movf	___flmul@temp,w
  8943  00F7  00AC               	movwf	??___flmul
  8944  00F8  01AD               	clrf	??___flmul+1
  8945  00F9  01AE               	clrf	??___flmul+2
  8946  00FA  01AF               	clrf	??___flmul+3
  8947  00FB  082C               	movf	??___flmul,w
  8948  00FC  07B3               	addwf	___flmul@grs,f
  8949  00FD  082D               	movf	??___flmul+1,w
  8950  00FE  1103               	clrz
  8951  00FF  1803               	skipnc
  8952  0100  3E01               	addlw	1
  8953  0101  1D03               	btfss	3,2
  8954  0102  07B4               	addwf	___flmul@grs+1,f
  8955  0103  082E               	movf	??___flmul+2,w
  8956  0104  1103               	clrz
  8957  0105  1803               	skipnc
  8958  0106  3E01               	addlw	1
  8959  0107  1D03               	btfss	3,2
  8960  0108  07B5               	addwf	___flmul@grs+2,f
  8961  0109  082F               	movf	??___flmul+3,w
  8962  010A  1103               	clrz
  8963  010B  1803               	skipnc
  8964  010C  3E01               	addlw	1
  8965  010D  1D03               	btfss	3,2
  8966  010E  07B6               	addwf	___flmul@grs+3,f
  8967  010F  083D               	movf	___flmul@temp+1,w
  8968  0110  00AC               	movwf	??___flmul
  8969  0111  01AD               	clrf	??___flmul+1
  8970  0112  01AE               	clrf	??___flmul+2
  8971  0113  01AF               	clrf	??___flmul+3
  8972  0114  082C               	movf	??___flmul,w
  8973  0115  07B8               	addwf	___flmul@prod,f
  8974  0116  082D               	movf	??___flmul+1,w
  8975  0117  1103               	clrz
  8976  0118  1803               	skipnc
  8977  0119  3E01               	addlw	1
  8978  011A  1D03               	btfss	3,2
  8979  011B  07B9               	addwf	___flmul@prod+1,f
  8980  011C  082E               	movf	??___flmul+2,w
  8981  011D  1103               	clrz
  8982  011E  1803               	skipnc
  8983  011F  3E01               	addlw	1
  8984  0120  1D03               	btfss	3,2
  8985  0121  07BA               	addwf	___flmul@prod+2,f
  8986  0122  082F               	movf	??___flmul+3,w
  8987  0123  1103               	clrz
  8988  0124  1803               	skipnc
  8989  0125  3E01               	addlw	1
  8990  0126  1D03               	btfss	3,2
  8991  0127  07BB               	addwf	___flmul@prod+3,f
  8992  0128  3008               	movlw	8
  8993  0129  00AC               	movwf	??___flmul
  8994  012A                     u4405:
  8995  012A  1003               	clrc
  8996  012B  0DB3               	rlf	___flmul@grs,f
  8997  012C  0DB4               	rlf	___flmul@grs+1,f
  8998  012D  0DB5               	rlf	___flmul@grs+2,f
  8999  012E  0DB6               	rlf	___flmul@grs+3,f
  9000  012F  0BAC               	decfsz	??___flmul,f
  9001  0130  292A               	goto	u4405
  9002  0131  0825               	movf	___flmul@b+1,w
  9003  0132  00AC               	movwf	??___flmul
  9004  0133  082C               	movf	??___flmul,w
  9005  0134  00F0               	movwf	__Umul8_16@multiplicand
  9006  0135  0828               	movf	___flmul@a,w
  9007  0136  160A  158A  22DF  120A  118A  	fcall	__Umul8_16
  9008  013B  0871               	movf	?__Umul8_16+1,w
  9009  013C  00BD               	movwf	___flmul@temp+1
  9010  013D  0870               	movf	?__Umul8_16,w
  9011  013E  00BC               	movwf	___flmul@temp
  9012  013F  083C               	movf	___flmul@temp,w
  9013  0140  00AC               	movwf	??___flmul
  9014  0141  083D               	movf	___flmul@temp+1,w
  9015  0142  00AD               	movwf	??___flmul+1
  9016  0143  01AE               	clrf	??___flmul+2
  9017  0144  01AF               	clrf	??___flmul+3
  9018  0145  082C               	movf	??___flmul,w
  9019  0146  07B3               	addwf	___flmul@grs,f
  9020  0147  082D               	movf	??___flmul+1,w
  9021  0148  1103               	clrz
  9022  0149  1803               	skipnc
  9023  014A  3E01               	addlw	1
  9024  014B  1D03               	btfss	3,2
  9025  014C  07B4               	addwf	___flmul@grs+1,f
  9026  014D  082E               	movf	??___flmul+2,w
  9027  014E  1103               	clrz
  9028  014F  1803               	skipnc
  9029  0150  3E01               	addlw	1
  9030  0151  1D03               	btfss	3,2
  9031  0152  07B5               	addwf	___flmul@grs+2,f
  9032  0153  082F               	movf	??___flmul+3,w
  9033  0154  1103               	clrz
  9034  0155  1803               	skipnc
  9035  0156  3E01               	addlw	1
  9036  0157  1D03               	btfss	3,2
  9037  0158  07B6               	addwf	___flmul@grs+3,f
  9038  0159  0824               	movf	___flmul@b,w
  9039  015A  00AC               	movwf	??___flmul
  9040  015B  082C               	movf	??___flmul,w
  9041  015C  00F0               	movwf	__Umul8_16@multiplicand
  9042  015D  0829               	movf	___flmul@a+1,w
  9043  015E  160A  158A  22DF  120A  118A  	fcall	__Umul8_16
  9044  0163  0871               	movf	?__Umul8_16+1,w
  9045  0164  00BD               	movwf	___flmul@temp+1
  9046  0165  0870               	movf	?__Umul8_16,w
  9047  0166  00BC               	movwf	___flmul@temp
  9048  0167  083C               	movf	___flmul@temp,w
  9049  0168  00AC               	movwf	??___flmul
  9050  0169  083D               	movf	___flmul@temp+1,w
  9051  016A  00AD               	movwf	??___flmul+1
  9052  016B  01AE               	clrf	??___flmul+2
  9053  016C  01AF               	clrf	??___flmul+3
  9054  016D  082C               	movf	??___flmul,w
  9055  016E  07B3               	addwf	___flmul@grs,f
  9056  016F  082D               	movf	??___flmul+1,w
  9057  0170  1103               	clrz
  9058  0171  1803               	skipnc
  9059  0172  3E01               	addlw	1
  9060  0173  1D03               	btfss	3,2
  9061  0174  07B4               	addwf	___flmul@grs+1,f
  9062  0175  082E               	movf	??___flmul+2,w
  9063  0176  1103               	clrz
  9064  0177  1803               	skipnc
  9065  0178  3E01               	addlw	1
  9066  0179  1D03               	btfss	3,2
  9067  017A  07B5               	addwf	___flmul@grs+2,f
  9068  017B  082F               	movf	??___flmul+3,w
  9069  017C  1103               	clrz
  9070  017D  1803               	skipnc
  9071  017E  3E01               	addlw	1
  9072  017F  1D03               	btfss	3,2
  9073  0180  07B6               	addwf	___flmul@grs+3,f
  9074  0181  3008               	movlw	8
  9075  0182  00AC               	movwf	??___flmul
  9076  0183                     u4435:
  9077  0183  1003               	clrc
  9078  0184  0DB3               	rlf	___flmul@grs,f
  9079  0185  0DB4               	rlf	___flmul@grs+1,f
  9080  0186  0DB5               	rlf	___flmul@grs+2,f
  9081  0187  0DB6               	rlf	___flmul@grs+3,f
  9082  0188  0BAC               	decfsz	??___flmul,f
  9083  0189  2983               	goto	u4435
  9084  018A  0824               	movf	___flmul@b,w
  9085  018B  00AC               	movwf	??___flmul
  9086  018C  082C               	movf	??___flmul,w
  9087  018D  00F0               	movwf	__Umul8_16@multiplicand
  9088  018E  0828               	movf	___flmul@a,w
  9089  018F  160A  158A  22DF  120A  118A  	fcall	__Umul8_16
  9090  0194  0871               	movf	?__Umul8_16+1,w
  9091  0195  00BD               	movwf	___flmul@temp+1
  9092  0196  0870               	movf	?__Umul8_16,w
  9093  0197  00BC               	movwf	___flmul@temp
  9094  0198  083C               	movf	___flmul@temp,w
  9095  0199  00AC               	movwf	??___flmul
  9096  019A  083D               	movf	___flmul@temp+1,w
  9097  019B  00AD               	movwf	??___flmul+1
  9098  019C  01AE               	clrf	??___flmul+2
  9099  019D  01AF               	clrf	??___flmul+3
  9100  019E  082C               	movf	??___flmul,w
  9101  019F  07B3               	addwf	___flmul@grs,f
  9102  01A0  082D               	movf	??___flmul+1,w
  9103  01A1  1103               	clrz
  9104  01A2  1803               	skipnc
  9105  01A3  3E01               	addlw	1
  9106  01A4  1D03               	btfss	3,2
  9107  01A5  07B4               	addwf	___flmul@grs+1,f
  9108  01A6  082E               	movf	??___flmul+2,w
  9109  01A7  1103               	clrz
  9110  01A8  1803               	skipnc
  9111  01A9  3E01               	addlw	1
  9112  01AA  1D03               	btfss	3,2
  9113  01AB  07B5               	addwf	___flmul@grs+2,f
  9114  01AC  082F               	movf	??___flmul+3,w
  9115  01AD  1103               	clrz
  9116  01AE  1803               	skipnc
  9117  01AF  3E01               	addlw	1
  9118  01B0  1D03               	btfss	3,2
  9119  01B1  07B6               	addwf	___flmul@grs+3,f
  9120  01B2  0825               	movf	___flmul@b+1,w
  9121  01B3  00AC               	movwf	??___flmul
  9122  01B4  082C               	movf	??___flmul,w
  9123  01B5  00F0               	movwf	__Umul8_16@multiplicand
  9124  01B6  082A               	movf	___flmul@a+2,w
  9125  01B7  160A  158A  22DF  120A  118A  	fcall	__Umul8_16
  9126  01BC  0871               	movf	?__Umul8_16+1,w
  9127  01BD  00BD               	movwf	___flmul@temp+1
  9128  01BE  0870               	movf	?__Umul8_16,w
  9129  01BF  00BC               	movwf	___flmul@temp
  9130  01C0  083C               	movf	___flmul@temp,w
  9131  01C1  00AC               	movwf	??___flmul
  9132  01C2  083D               	movf	___flmul@temp+1,w
  9133  01C3  00AD               	movwf	??___flmul+1
  9134  01C4  01AE               	clrf	??___flmul+2
  9135  01C5  01AF               	clrf	??___flmul+3
  9136  01C6  082C               	movf	??___flmul,w
  9137  01C7  07B8               	addwf	___flmul@prod,f
  9138  01C8  082D               	movf	??___flmul+1,w
  9139  01C9  1103               	clrz
  9140  01CA  1803               	skipnc
  9141  01CB  3E01               	addlw	1
  9142  01CC  1D03               	btfss	3,2
  9143  01CD  07B9               	addwf	___flmul@prod+1,f
  9144  01CE  082E               	movf	??___flmul+2,w
  9145  01CF  1103               	clrz
  9146  01D0  1803               	skipnc
  9147  01D1  3E01               	addlw	1
  9148  01D2  1D03               	btfss	3,2
  9149  01D3  07BA               	addwf	___flmul@prod+2,f
  9150  01D4  082F               	movf	??___flmul+3,w
  9151  01D5  1103               	clrz
  9152  01D6  1803               	skipnc
  9153  01D7  3E01               	addlw	1
  9154  01D8  1D03               	btfss	3,2
  9155  01D9  07BB               	addwf	___flmul@prod+3,f
  9156  01DA  0826               	movf	___flmul@b+2,w
  9157  01DB  00AC               	movwf	??___flmul
  9158  01DC  082C               	movf	??___flmul,w
  9159  01DD  00F0               	movwf	__Umul8_16@multiplicand
  9160  01DE  0829               	movf	___flmul@a+1,w
  9161  01DF  160A  158A  22DF  120A  118A  	fcall	__Umul8_16
  9162  01E4  0871               	movf	?__Umul8_16+1,w
  9163  01E5  00BD               	movwf	___flmul@temp+1
  9164  01E6  0870               	movf	?__Umul8_16,w
  9165  01E7  00BC               	movwf	___flmul@temp
  9166  01E8  083C               	movf	___flmul@temp,w
  9167  01E9  00AC               	movwf	??___flmul
  9168  01EA  083D               	movf	___flmul@temp+1,w
  9169  01EB  00AD               	movwf	??___flmul+1
  9170  01EC  01AE               	clrf	??___flmul+2
  9171  01ED  01AF               	clrf	??___flmul+3
  9172  01EE  082C               	movf	??___flmul,w
  9173  01EF  07B8               	addwf	___flmul@prod,f
  9174  01F0  082D               	movf	??___flmul+1,w
  9175  01F1  1103               	clrz
  9176  01F2  1803               	skipnc
  9177  01F3  3E01               	addlw	1
  9178  01F4  1D03               	btfss	3,2
  9179  01F5  07B9               	addwf	___flmul@prod+1,f
  9180  01F6  082E               	movf	??___flmul+2,w
  9181  01F7  1103               	clrz
  9182  01F8  1803               	skipnc
  9183  01F9  3E01               	addlw	1
  9184  01FA  1D03               	btfss	3,2
  9185  01FB  07BA               	addwf	___flmul@prod+2,f
  9186  01FC  082F               	movf	??___flmul+3,w
  9187  01FD  1103               	clrz
  9188  01FE  1803               	skipnc
  9189  01FF  3E01               	addlw	1
  9190  0200  1D03               	btfss	3,2
  9191  0201  07BB               	addwf	___flmul@prod+3,f
  9192  0202  0826               	movf	___flmul@b+2,w
  9193  0203  00AC               	movwf	??___flmul
  9194  0204  082C               	movf	??___flmul,w
  9195  0205  00F0               	movwf	__Umul8_16@multiplicand
  9196  0206  082A               	movf	___flmul@a+2,w
  9197  0207  160A  158A  22DF  120A  118A  	fcall	__Umul8_16
  9198  020C  0871               	movf	?__Umul8_16+1,w
  9199  020D  00BD               	movwf	___flmul@temp+1
  9200  020E  0870               	movf	?__Umul8_16,w
  9201  020F  00BC               	movwf	___flmul@temp
  9202  0210  083C               	movf	___flmul@temp,w
  9203  0211  00AC               	movwf	??___flmul
  9204  0212  083D               	movf	___flmul@temp+1,w
  9205  0213  00AD               	movwf	??___flmul+1
  9206  0214  01AE               	clrf	??___flmul+2
  9207  0215  01AF               	clrf	??___flmul+3
  9208  0216  3008               	movlw	8
  9209  0217                     u4475:
  9210  0217  1003               	clrc
  9211  0218  0DAC               	rlf	??___flmul,f
  9212  0219  0DAD               	rlf	??___flmul+1,f
  9213  021A  0DAE               	rlf	??___flmul+2,f
  9214  021B  0DAF               	rlf	??___flmul+3,f
  9215  021C  3EFF               	addlw	-1
  9216  021D  1D03               	skipz
  9217  021E  2A17               	goto	u4475
  9218  021F  082C               	movf	??___flmul,w
  9219  0220  07B8               	addwf	___flmul@prod,f
  9220  0221  082D               	movf	??___flmul+1,w
  9221  0222  1103               	clrz
  9222  0223  1803               	skipnc
  9223  0224  3E01               	addlw	1
  9224  0225  1D03               	btfss	3,2
  9225  0226  07B9               	addwf	___flmul@prod+1,f
  9226  0227  082E               	movf	??___flmul+2,w
  9227  0228  1103               	clrz
  9228  0229  1803               	skipnc
  9229  022A  3E01               	addlw	1
  9230  022B  1D03               	btfss	3,2
  9231  022C  07BA               	addwf	___flmul@prod+2,f
  9232  022D  082F               	movf	??___flmul+3,w
  9233  022E  1103               	clrz
  9234  022F  1803               	skipnc
  9235  0230  3E01               	addlw	1
  9236  0231  1D03               	btfss	3,2
  9237  0232  07BB               	addwf	___flmul@prod+3,f
  9238  0233  0836               	movf	___flmul@grs+3,w
  9239  0234  00AC               	movwf	??___flmul
  9240  0235  01AD               	clrf	??___flmul+1
  9241  0236  01AE               	clrf	??___flmul+2
  9242  0237  01AF               	clrf	??___flmul+3
  9243  0238  082C               	movf	??___flmul,w
  9244  0239  07B8               	addwf	___flmul@prod,f
  9245  023A  082D               	movf	??___flmul+1,w
  9246  023B  1103               	clrz
  9247  023C  1803               	skipnc
  9248  023D  3E01               	addlw	1
  9249  023E  1D03               	btfss	3,2
  9250  023F  07B9               	addwf	___flmul@prod+1,f
  9251  0240  082E               	movf	??___flmul+2,w
  9252  0241  1103               	clrz
  9253  0242  1803               	skipnc
  9254  0243  3E01               	addlw	1
  9255  0244  1D03               	btfss	3,2
  9256  0245  07BA               	addwf	___flmul@prod+2,f
  9257  0246  082F               	movf	??___flmul+3,w
  9258  0247  1103               	clrz
  9259  0248  1803               	skipnc
  9260  0249  3E01               	addlw	1
  9261  024A  1D03               	btfss	3,2
  9262  024B  07BB               	addwf	___flmul@prod+3,f
  9263  024C  3008               	movlw	8
  9264  024D  00AC               	movwf	??___flmul
  9265  024E                     u4505:
  9266  024E  1003               	clrc
  9267  024F  0DB3               	rlf	___flmul@grs,f
  9268  0250  0DB4               	rlf	___flmul@grs+1,f
  9269  0251  0DB5               	rlf	___flmul@grs+2,f
  9270  0252  0DB6               	rlf	___flmul@grs+3,f
  9271  0253  0BAC               	decfsz	??___flmul,f
  9272  0254  2A4E               	goto	u4505
  9273  0255  0837               	movf	___flmul@bexp,w
  9274  0256  0732               	addwf	___flmul@aexp,w
  9275  0257  00AC               	movwf	??___flmul
  9276  0258  01AD               	clrf	??___flmul+1
  9277  0259  0DAD               	rlf	??___flmul+1,f
  9278  025A  082C               	movf	??___flmul,w
  9279  025B  3E82               	addlw	130
  9280  025C  00BC               	movwf	___flmul@temp
  9281  025D  082D               	movf	??___flmul+1,w
  9282  025E  1803               	skipnc
  9283  025F  3E01               	addlw	1
  9284  0260  3EFF               	addlw	255
  9285  0261  00BD               	movwf	___flmul@temp+1
  9286  0262                     l3128:
  9287  0262  1BBA               	btfsc	___flmul@prod+2,7
  9288  0263  2A7F               	goto	l3130
  9289  0264  3001               	movlw	1
  9290  0265  00AC               	movwf	??___flmul
  9291  0266                     u4515:
  9292  0266  1003               	clrc
  9293  0267  0DB8               	rlf	___flmul@prod,f
  9294  0268  0DB9               	rlf	___flmul@prod+1,f
  9295  0269  0DBA               	rlf	___flmul@prod+2,f
  9296  026A  0DBB               	rlf	___flmul@prod+3,f
  9297  026B  0BAC               	decfsz	??___flmul,f
  9298  026C  2A66               	goto	u4515
  9299  026D  1BB6               	btfsc	___flmul@grs+3,7
  9300  026E  1438               	bsf	___flmul@prod,0
  9301  026F  3001               	movlw	1
  9302  0270  00AC               	movwf	??___flmul
  9303  0271                     u4535:
  9304  0271  1003               	clrc
  9305  0272  0DB3               	rlf	___flmul@grs,f
  9306  0273  0DB4               	rlf	___flmul@grs+1,f
  9307  0274  0DB5               	rlf	___flmul@grs+2,f
  9308  0275  0DB6               	rlf	___flmul@grs+3,f
  9309  0276  0BAC               	decfsz	??___flmul,f
  9310  0277  2A71               	goto	u4535
  9311  0278  30FF               	movlw	255
  9312  0279  07BC               	addwf	___flmul@temp,f
  9313  027A  1803               	skipnc
  9314  027B  0ABD               	incf	___flmul@temp+1,f
  9315  027C  30FF               	movlw	255
  9316  027D  07BD               	addwf	___flmul@temp+1,f
  9317  027E  2A62               	goto	l3128
  9318  027F                     l3130:
  9319  027F  01B2               	clrf	___flmul@aexp
  9320  0280  1FB6               	btfss	___flmul@grs+3,7
  9321  0281  2A98               	goto	l3140
  9322  0282  30FF               	movlw	255
  9323  0283  0533               	andwf	___flmul@grs,w
  9324  0284  00AC               	movwf	??___flmul
  9325  0285  30FF               	movlw	255
  9326  0286  0534               	andwf	___flmul@grs+1,w
  9327  0287  00AD               	movwf	??___flmul+1
  9328  0288  30FF               	movlw	255
  9329  0289  0535               	andwf	___flmul@grs+2,w
  9330  028A  00AE               	movwf	??___flmul+2
  9331  028B  307F               	movlw	127
  9332  028C  0536               	andwf	___flmul@grs+3,w
  9333  028D  00AF               	movwf	??___flmul+3
  9334  028E  082F               	movf	??___flmul+3,w
  9335  028F  042E               	iorwf	??___flmul+2,w
  9336  0290  042D               	iorwf	??___flmul+1,w
  9337  0291  042C               	iorwf	??___flmul,w
  9338  0292  1903               	skipnz
  9339  0293  1838               	btfsc	___flmul@prod,0
  9340  0294  2A96               	goto	l3136
  9341  0295  2A98               	goto	l3140
  9342  0296                     l3136:
  9343  0296  01B2               	clrf	___flmul@aexp
  9344  0297  0AB2               	incf	___flmul@aexp,f
  9345  0298                     l3140:
  9346  0298  0832               	movf	___flmul@aexp,w
  9347  0299  1903               	btfsc	3,2
  9348  029A  2ACA               	goto	l3150
  9349  029B  3001               	movlw	1
  9350  029C  07B8               	addwf	___flmul@prod,f
  9351  029D  3000               	movlw	0
  9352  029E  1803               	skipnc
  9353  029F  3001               	movlw	1
  9354  02A0  07B9               	addwf	___flmul@prod+1,f
  9355  02A1  3000               	movlw	0
  9356  02A2  1803               	skipnc
  9357  02A3  3001               	movlw	1
  9358  02A4  07BA               	addwf	___flmul@prod+2,f
  9359  02A5  3000               	movlw	0
  9360  02A6  1803               	skipnc
  9361  02A7  3001               	movlw	1
  9362  02A8  07BB               	addwf	___flmul@prod+3,f
  9363  02A9  1C3B               	btfss	___flmul@prod+3,0
  9364  02AA  2ACA               	goto	l3150
  9365  02AB  0838               	movf	___flmul@prod,w
  9366  02AC  00AC               	movwf	??___flmul
  9367  02AD  0839               	movf	___flmul@prod+1,w
  9368  02AE  00AD               	movwf	??___flmul+1
  9369  02AF  083A               	movf	___flmul@prod+2,w
  9370  02B0  00AE               	movwf	??___flmul+2
  9371  02B1  083B               	movf	___flmul@prod+3,w
  9372  02B2  00AF               	movwf	??___flmul+3
  9373  02B3  3001               	movlw	1
  9374  02B4  00B0               	movwf	??___flmul+4
  9375  02B5                     u4605:
  9376  02B5  0D2F               	rlf	??___flmul+3,w
  9377  02B6  0CAF               	rrf	??___flmul+3,f
  9378  02B7  0CAE               	rrf	??___flmul+2,f
  9379  02B8  0CAD               	rrf	??___flmul+1,f
  9380  02B9  0CAC               	rrf	??___flmul,f
  9381  02BA  0BB0               	decfsz	??___flmul+4,f
  9382  02BB  2AB5               	goto	u4605
  9383  02BC  082F               	movf	??___flmul+3,w
  9384  02BD  00BB               	movwf	___flmul@prod+3
  9385  02BE  082E               	movf	??___flmul+2,w
  9386  02BF  00BA               	movwf	___flmul@prod+2
  9387  02C0  082D               	movf	??___flmul+1,w
  9388  02C1  00B9               	movwf	___flmul@prod+1
  9389  02C2  082C               	movf	??___flmul,w
  9390  02C3  00B8               	movwf	___flmul@prod
  9391  02C4  3001               	movlw	1
  9392  02C5  07BC               	addwf	___flmul@temp,f
  9393  02C6  1803               	skipnc
  9394  02C7  0ABD               	incf	___flmul@temp+1,f
  9395  02C8  3000               	movlw	0
  9396  02C9  07BD               	addwf	___flmul@temp+1,f
  9397  02CA                     l3150:
  9398  02CA  083D               	movf	___flmul@temp+1,w
  9399  02CB  3A80               	xorlw	128
  9400  02CC  00FF               	movwf	127
  9401  02CD  3080               	movlw	128
  9402  02CE  027F               	subwf	127,w
  9403  02CF  1D03               	skipz
  9404  02D0  2AD3               	goto	u4615
  9405  02D1  30FF               	movlw	255
  9406  02D2  023C               	subwf	___flmul@temp,w
  9407  02D3                     u4615:
  9408  02D3  1C03               	skipc
  9409  02D4  2AE0               	goto	l3154
  9410  02D5  307F               	movlw	127
  9411  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  9412  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  9413  02D8  00BB               	movwf	___flmul@prod+3
  9414  02D9  3080               	movlw	128
  9415  02DA  00BA               	movwf	___flmul@prod+2
  9416  02DB  3000               	movlw	0
  9417  02DC  00B9               	movwf	___flmul@prod+1
  9418  02DD  3000               	movlw	0
  9419  02DE  00B8               	movwf	___flmul@prod
  9420  02DF  2B10               	goto	l744
  9421  02E0                     l3154:
  9422  02E0  1283               	bcf	3,5	;RP0=0, select bank0
  9423  02E1  1303               	bcf	3,6	;RP1=0, select bank0
  9424  02E2  083D               	movf	___flmul@temp+1,w
  9425  02E3  3A80               	xorlw	128
  9426  02E4  00FF               	movwf	127
  9427  02E5  3080               	movlw	128
  9428  02E6  027F               	subwf	127,w
  9429  02E7  1D03               	skipz
  9430  02E8  2AEB               	goto	u4625
  9431  02E9  3001               	movlw	1
  9432  02EA  023C               	subwf	___flmul@temp,w
  9433  02EB                     u4625:
  9434  02EB  1803               	skipnc
  9435  02EC  2AF9               	goto	l3160
  9436  02ED  3000               	movlw	0
  9437  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  9438  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  9439  02F0  00BB               	movwf	___flmul@prod+3
  9440  02F1  3000               	movlw	0
  9441  02F2  00BA               	movwf	___flmul@prod+2
  9442  02F3  3000               	movlw	0
  9443  02F4  00B9               	movwf	___flmul@prod+1
  9444  02F5  3000               	movlw	0
  9445  02F6  00B8               	movwf	___flmul@prod
  9446  02F7  01B1               	clrf	___flmul@sign
  9447  02F8  2B10               	goto	l744
  9448  02F9                     l3160:
  9449  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  9450  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  9451  02FB  083C               	movf	___flmul@temp,w
  9452  02FC  00AC               	movwf	??___flmul
  9453  02FD  082C               	movf	??___flmul,w
  9454  02FE  00B7               	movwf	___flmul@bexp
  9455  02FF  30FF               	movlw	255
  9456  0300  05B8               	andwf	___flmul@prod,f
  9457  0301  30FF               	movlw	255
  9458  0302  05B9               	andwf	___flmul@prod+1,f
  9459  0303  307F               	movlw	127
  9460  0304  05BA               	andwf	___flmul@prod+2,f
  9461  0305  3000               	movlw	0
  9462  0306  05BB               	andwf	___flmul@prod+3,f
  9463  0307  1837               	btfsc	___flmul@bexp,0
  9464  0308  17BA               	bsf	___flmul@prod+2,7
  9465  0309  0837               	movf	___flmul@bexp,w
  9466  030A  00AC               	movwf	??___flmul
  9467  030B  1003               	clrc
  9468  030C  0C2C               	rrf	??___flmul,w
  9469  030D  00AD               	movwf	??___flmul+1
  9470  030E  082D               	movf	??___flmul+1,w
  9471  030F  00BB               	movwf	___flmul@prod+3
  9472  0310                     l744:
  9473  0310  0831               	movf	___flmul@sign,w
  9474  0311  00AC               	movwf	??___flmul
  9475  0312  082C               	movf	??___flmul,w
  9476  0313  04BB               	iorwf	___flmul@prod+3,f
  9477  0314  083B               	movf	___flmul@prod+3,w
  9478  0315  00A7               	movwf	?___flmul+3
  9479  0316  083A               	movf	___flmul@prod+2,w
  9480  0317  00A6               	movwf	?___flmul+2
  9481  0318  0839               	movf	___flmul@prod+1,w
  9482  0319  00A5               	movwf	?___flmul+1
  9483  031A  0838               	movf	___flmul@prod,w
  9484  031B  00A4               	movwf	?___flmul
  9485  031C  0008               	return
  9486  031D                     __end_of___flmul:
  9487                           
  9488                           	psect	text35
  9489  1ADF                     __ptext35:	
  9490 ;; *************** function __Umul8_16 *****************
  9491 ;; Defined at:
  9492 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul8_16.c"
  9493 ;; Parameters:    Size  Location     Type
  9494 ;;  multiplier      1    wreg     unsigned char 
  9495 ;;  multiplicand    1    0[COMMON] unsigned char 
  9496 ;; Auto vars:     Size  Location     Type
  9497 ;;  multiplier      1    8[COMMON] unsigned char 
  9498 ;;  word_mpld       2    6[COMMON] unsigned int 
  9499 ;;  product         2    4[COMMON] unsigned int 
  9500 ;; Return value:  Size  Location     Type
  9501 ;;                  2    0[COMMON] unsigned int 
  9502 ;; Registers used:
  9503 ;;		wreg, status,2, status,0
  9504 ;; Tracked objects:
  9505 ;;		On entry : 300/0
  9506 ;;		On exit  : 300/0
  9507 ;;		Unchanged: 300/0
  9508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9509 ;;      Params:         2       0       0       0       0
  9510 ;;      Locals:         5       0       0       0       0
  9511 ;;      Temps:          2       0       0       0       0
  9512 ;;      Totals:         9       0       0       0       0
  9513 ;;Total ram usage:        9 bytes
  9514 ;; Hardware stack levels used: 1
  9515 ;; This function calls:
  9516 ;;		Nothing
  9517 ;; This function is called by:
  9518 ;;		___flmul
  9519 ;; This function uses a non-reentrant model
  9520 ;;
  9521                           
  9522  1ADF                     __Umul8_16:	
  9523                           ;psect for function __Umul8_16
  9524                           
  9525                           
  9526                           ;incstack = 0
  9527                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9528                           ;__Umul8_16@multiplier stored from wreg
  9529  1ADF  00F8               	movwf	__Umul8_16@multiplier
  9530  1AE0  01F4               	clrf	__Umul8_16@product
  9531  1AE1  01F5               	clrf	__Umul8_16@product+1
  9532  1AE2  0870               	movf	__Umul8_16@multiplicand,w
  9533  1AE3  00F2               	movwf	??__Umul8_16
  9534  1AE4  01F3               	clrf	??__Umul8_16+1
  9535  1AE5  0872               	movf	??__Umul8_16,w
  9536  1AE6  00F6               	movwf	__Umul8_16@word_mpld
  9537  1AE7  0873               	movf	??__Umul8_16+1,w
  9538  1AE8  00F7               	movwf	__Umul8_16@word_mpld+1
  9539  1AE9                     l2694:
  9540  1AE9  1C78               	btfss	__Umul8_16@multiplier,0
  9541  1AEA  2AF1               	goto	l751
  9542  1AEB  0876               	movf	__Umul8_16@word_mpld,w
  9543  1AEC  07F4               	addwf	__Umul8_16@product,f
  9544  1AED  1803               	skipnc
  9545  1AEE  0AF5               	incf	__Umul8_16@product+1,f
  9546  1AEF  0877               	movf	__Umul8_16@word_mpld+1,w
  9547  1AF0  07F5               	addwf	__Umul8_16@product+1,f
  9548  1AF1                     l751:
  9549  1AF1  3001               	movlw	1
  9550  1AF2                     u3505:
  9551  1AF2  1003               	clrc
  9552  1AF3  0DF6               	rlf	__Umul8_16@word_mpld,f
  9553  1AF4  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  9554  1AF5  3EFF               	addlw	-1
  9555  1AF6  1D03               	skipz
  9556  1AF7  2AF2               	goto	u3505
  9557  1AF8  1003               	clrc
  9558  1AF9  0CF8               	rrf	__Umul8_16@multiplier,f
  9559  1AFA  0878               	movf	__Umul8_16@multiplier,w
  9560  1AFB  1D03               	btfss	3,2
  9561  1AFC  2AE9               	goto	l2694
  9562  1AFD  0875               	movf	__Umul8_16@product+1,w
  9563  1AFE  00F1               	movwf	?__Umul8_16+1
  9564  1AFF  0874               	movf	__Umul8_16@product,w
  9565  1B00  00F0               	movwf	?__Umul8_16
  9566  1B01  0008               	return
  9567  1B02                     __end_of__Umul8_16:
  9568                           
  9569                           	psect	text36
  9570  1E34                     __ptext36:	
  9571 ;; *************** function ___flge *****************
  9572 ;; Defined at:
  9573 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\flge.c"
  9574 ;; Parameters:    Size  Location     Type
  9575 ;;  ff1             4    0[COMMON] unsigned int 
  9576 ;;  ff2             4    4[COMMON] unsigned int 
  9577 ;; Auto vars:     Size  Location     Type
  9578 ;;		None
  9579 ;; Return value:  Size  Location     Type
  9580 ;;		None               void
  9581 ;; Registers used:
  9582 ;;		wreg, status,2, status,0
  9583 ;; Tracked objects:
  9584 ;;		On entry : 200/100
  9585 ;;		On exit  : 200/0
  9586 ;;		Unchanged: 200/0
  9587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9588 ;;      Params:         8       0       0       0       0
  9589 ;;      Locals:         0       0       0       0       0
  9590 ;;      Temps:          4       0       0       0       0
  9591 ;;      Totals:        12       0       0       0       0
  9592 ;;Total ram usage:       12 bytes
  9593 ;; Hardware stack levels used: 1
  9594 ;; This function calls:
  9595 ;;		Nothing
  9596 ;; This function is called by:
  9597 ;;		_sprintf
  9598 ;;		_strtod
  9599 ;; This function uses a non-reentrant model
  9600 ;;
  9601                           
  9602  1E34                     ___flge:	
  9603                           ;psect for function ___flge
  9604                           
  9605                           
  9606                           ;incstack = 0
  9607                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9608  1E34  3000               	movlw	0
  9609  1E35  0570               	andwf	___flge@ff1,w
  9610  1E36  00F8               	movwf	??___flge
  9611  1E37  3000               	movlw	0
  9612  1E38  0571               	andwf	___flge@ff1+1,w
  9613  1E39  00F9               	movwf	??___flge+1
  9614  1E3A  3080               	movlw	128
  9615  1E3B  0572               	andwf	___flge@ff1+2,w
  9616  1E3C  00FA               	movwf	??___flge+2
  9617  1E3D  307F               	movlw	127
  9618  1E3E  0573               	andwf	___flge@ff1+3,w
  9619  1E3F  00FB               	movwf	??___flge+3
  9620  1E40  087B               	movf	??___flge+3,w
  9621  1E41  047A               	iorwf	??___flge+2,w
  9622  1E42  0479               	iorwf	??___flge+1,w
  9623  1E43  0478               	iorwf	??___flge,w
  9624  1E44  1D03               	skipz
  9625  1E45  2E4E               	goto	l500
  9626  1E46  3000               	movlw	0
  9627  1E47  00F3               	movwf	___flge@ff1+3
  9628  1E48  3000               	movlw	0
  9629  1E49  00F2               	movwf	___flge@ff1+2
  9630  1E4A  3000               	movlw	0
  9631  1E4B  00F1               	movwf	___flge@ff1+1
  9632  1E4C  3000               	movlw	0
  9633  1E4D  00F0               	movwf	___flge@ff1
  9634  1E4E                     l500:
  9635  1E4E  3000               	movlw	0
  9636  1E4F  0574               	andwf	___flge@ff2,w
  9637  1E50  00F8               	movwf	??___flge
  9638  1E51  3000               	movlw	0
  9639  1E52  0575               	andwf	___flge@ff2+1,w
  9640  1E53  00F9               	movwf	??___flge+1
  9641  1E54  3080               	movlw	128
  9642  1E55  0576               	andwf	___flge@ff2+2,w
  9643  1E56  00FA               	movwf	??___flge+2
  9644  1E57  307F               	movlw	127
  9645  1E58  0577               	andwf	___flge@ff2+3,w
  9646  1E59  00FB               	movwf	??___flge+3
  9647  1E5A  087B               	movf	??___flge+3,w
  9648  1E5B  047A               	iorwf	??___flge+2,w
  9649  1E5C  0479               	iorwf	??___flge+1,w
  9650  1E5D  0478               	iorwf	??___flge,w
  9651  1E5E  1D03               	skipz
  9652  1E5F  2E68               	goto	l3460
  9653  1E60  3000               	movlw	0
  9654  1E61  00F7               	movwf	___flge@ff2+3
  9655  1E62  3000               	movlw	0
  9656  1E63  00F6               	movwf	___flge@ff2+2
  9657  1E64  3000               	movlw	0
  9658  1E65  00F5               	movwf	___flge@ff2+1
  9659  1E66  3000               	movlw	0
  9660  1E67  00F4               	movwf	___flge@ff2
  9661  1E68                     l3460:
  9662  1E68  1FF3               	btfss	___flge@ff1+3,7
  9663  1E69  2E8E               	goto	l3464
  9664  1E6A  3000               	movlw	0
  9665  1E6B  00F8               	movwf	??___flge
  9666  1E6C  3000               	movlw	0
  9667  1E6D  00F9               	movwf	??___flge+1
  9668  1E6E  3000               	movlw	0
  9669  1E6F  00FA               	movwf	??___flge+2
  9670  1E70  3080               	movlw	128
  9671  1E71  00FB               	movwf	??___flge+3
  9672  1E72  0870               	movf	___flge@ff1,w
  9673  1E73  02F8               	subwf	??___flge,f
  9674  1E74  0871               	movf	___flge@ff1+1,w
  9675  1E75  1C03               	skipc
  9676  1E76  0F71               	incfsz	___flge@ff1+1,w
  9677  1E77  2E79               	goto	u5411
  9678  1E78  2E7A               	goto	u5412
  9679  1E79                     u5411:
  9680  1E79  02F9               	subwf	??___flge+1,f
  9681  1E7A                     u5412:
  9682  1E7A  0872               	movf	___flge@ff1+2,w
  9683  1E7B  1C03               	skipc
  9684  1E7C  0F72               	incfsz	___flge@ff1+2,w
  9685  1E7D  2E7F               	goto	u5413
  9686  1E7E  2E80               	goto	u5414
  9687  1E7F                     u5413:
  9688  1E7F  02FA               	subwf	??___flge+2,f
  9689  1E80                     u5414:
  9690  1E80  0873               	movf	___flge@ff1+3,w
  9691  1E81  1C03               	skipc
  9692  1E82  0F73               	incfsz	___flge@ff1+3,w
  9693  1E83  2E85               	goto	u5415
  9694  1E84  2E86               	goto	u5416
  9695  1E85                     u5415:
  9696  1E85  02FB               	subwf	??___flge+3,f
  9697  1E86                     u5416:
  9698  1E86  087B               	movf	??___flge+3,w
  9699  1E87  00F3               	movwf	___flge@ff1+3
  9700  1E88  087A               	movf	??___flge+2,w
  9701  1E89  00F2               	movwf	___flge@ff1+2
  9702  1E8A  0879               	movf	??___flge+1,w
  9703  1E8B  00F1               	movwf	___flge@ff1+1
  9704  1E8C  0878               	movf	??___flge,w
  9705  1E8D  00F0               	movwf	___flge@ff1
  9706  1E8E                     l3464:
  9707  1E8E  1FF7               	btfss	___flge@ff2+3,7
  9708  1E8F  2EB4               	goto	l503
  9709  1E90  3000               	movlw	0
  9710  1E91  00F8               	movwf	??___flge
  9711  1E92  3000               	movlw	0
  9712  1E93  00F9               	movwf	??___flge+1
  9713  1E94  3000               	movlw	0
  9714  1E95  00FA               	movwf	??___flge+2
  9715  1E96  3080               	movlw	128
  9716  1E97  00FB               	movwf	??___flge+3
  9717  1E98  0874               	movf	___flge@ff2,w
  9718  1E99  02F8               	subwf	??___flge,f
  9719  1E9A  0875               	movf	___flge@ff2+1,w
  9720  1E9B  1C03               	skipc
  9721  1E9C  0F75               	incfsz	___flge@ff2+1,w
  9722  1E9D  2E9F               	goto	u5431
  9723  1E9E  2EA0               	goto	u5432
  9724  1E9F                     u5431:
  9725  1E9F  02F9               	subwf	??___flge+1,f
  9726  1EA0                     u5432:
  9727  1EA0  0876               	movf	___flge@ff2+2,w
  9728  1EA1  1C03               	skipc
  9729  1EA2  0F76               	incfsz	___flge@ff2+2,w
  9730  1EA3  2EA5               	goto	u5433
  9731  1EA4  2EA6               	goto	u5434
  9732  1EA5                     u5433:
  9733  1EA5  02FA               	subwf	??___flge+2,f
  9734  1EA6                     u5434:
  9735  1EA6  0877               	movf	___flge@ff2+3,w
  9736  1EA7  1C03               	skipc
  9737  1EA8  0F77               	incfsz	___flge@ff2+3,w
  9738  1EA9  2EAB               	goto	u5435
  9739  1EAA  2EAC               	goto	u5436
  9740  1EAB                     u5435:
  9741  1EAB  02FB               	subwf	??___flge+3,f
  9742  1EAC                     u5436:
  9743  1EAC  087B               	movf	??___flge+3,w
  9744  1EAD  00F7               	movwf	___flge@ff2+3
  9745  1EAE  087A               	movf	??___flge+2,w
  9746  1EAF  00F6               	movwf	___flge@ff2+2
  9747  1EB0  0879               	movf	??___flge+1,w
  9748  1EB1  00F5               	movwf	___flge@ff2+1
  9749  1EB2  0878               	movf	??___flge,w
  9750  1EB3  00F4               	movwf	___flge@ff2
  9751  1EB4                     l503:
  9752  1EB4  3080               	movlw	128
  9753  1EB5  06F3               	xorwf	___flge@ff1+3,f
  9754  1EB6  3080               	movlw	128
  9755  1EB7  06F7               	xorwf	___flge@ff2+3,f
  9756  1EB8  0877               	movf	___flge@ff2+3,w
  9757  1EB9  0273               	subwf	___flge@ff1+3,w
  9758  1EBA  1D03               	skipz
  9759  1EBB  0008               	return
  9760  1EBC  0876               	movf	___flge@ff2+2,w
  9761  1EBD  0272               	subwf	___flge@ff1+2,w
  9762  1EBE  1D03               	skipz
  9763  1EBF  0008               	return
  9764  1EC0  0875               	movf	___flge@ff2+1,w
  9765  1EC1  0271               	subwf	___flge@ff1+1,w
  9766  1EC2  1D03               	skipz
  9767  1EC3  0008               	return
  9768  1EC4  0874               	movf	___flge@ff2,w
  9769  1EC5  0270               	subwf	___flge@ff1,w
  9770  1EC6  0008               	return
  9771  1EC7                     __end_of___flge:
  9772                           
  9773                           	psect	text37
  9774  1BF3                     __ptext37:	
  9775 ;; *************** function ___fleq *****************
  9776 ;; Defined at:
  9777 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fleq.c"
  9778 ;; Parameters:    Size  Location     Type
  9779 ;;  ff1             4    0[COMMON] unsigned int 
  9780 ;;  ff2             4    4[COMMON] unsigned int 
  9781 ;; Auto vars:     Size  Location     Type
  9782 ;;		None
  9783 ;; Return value:  Size  Location     Type
  9784 ;;		None               void
  9785 ;; Registers used:
  9786 ;;		wreg, status,2, status,0
  9787 ;; Tracked objects:
  9788 ;;		On entry : 200/100
  9789 ;;		On exit  : 200/0
  9790 ;;		Unchanged: 200/0
  9791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9792 ;;      Params:         8       0       0       0       0
  9793 ;;      Locals:         0       0       0       0       0
  9794 ;;      Temps:          4       0       0       0       0
  9795 ;;      Totals:        12       0       0       0       0
  9796 ;;Total ram usage:       12 bytes
  9797 ;; Hardware stack levels used: 1
  9798 ;; This function calls:
  9799 ;;		Nothing
  9800 ;; This function is called by:
  9801 ;;		_sprintf
  9802 ;;		_strtod
  9803 ;; This function uses a non-reentrant model
  9804 ;;
  9805                           
  9806  1BF3                     ___fleq:	
  9807                           ;psect for function ___fleq
  9808                           
  9809                           
  9810                           ;incstack = 0
  9811                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9812  1BF3  3000               	movlw	0
  9813  1BF4  0570               	andwf	___fleq@ff1,w
  9814  1BF5  00F8               	movwf	??___fleq
  9815  1BF6  3000               	movlw	0
  9816  1BF7  0571               	andwf	___fleq@ff1+1,w
  9817  1BF8  00F9               	movwf	??___fleq+1
  9818  1BF9  3080               	movlw	128
  9819  1BFA  0572               	andwf	___fleq@ff1+2,w
  9820  1BFB  00FA               	movwf	??___fleq+2
  9821  1BFC  307F               	movlw	127
  9822  1BFD  0573               	andwf	___fleq@ff1+3,w
  9823  1BFE  00FB               	movwf	??___fleq+3
  9824  1BFF  087B               	movf	??___fleq+3,w
  9825  1C00  047A               	iorwf	??___fleq+2,w
  9826  1C01  0479               	iorwf	??___fleq+1,w
  9827  1C02  0478               	iorwf	??___fleq,w
  9828  1C03  1D03               	skipz
  9829  1C04  2C0D               	goto	l495
  9830  1C05  3000               	movlw	0
  9831  1C06  00F3               	movwf	___fleq@ff1+3
  9832  1C07  3000               	movlw	0
  9833  1C08  00F2               	movwf	___fleq@ff1+2
  9834  1C09  3000               	movlw	0
  9835  1C0A  00F1               	movwf	___fleq@ff1+1
  9836  1C0B  3000               	movlw	0
  9837  1C0C  00F0               	movwf	___fleq@ff1
  9838  1C0D                     l495:
  9839  1C0D  3000               	movlw	0
  9840  1C0E  0574               	andwf	___fleq@ff2,w
  9841  1C0F  00F8               	movwf	??___fleq
  9842  1C10  3000               	movlw	0
  9843  1C11  0575               	andwf	___fleq@ff2+1,w
  9844  1C12  00F9               	movwf	??___fleq+1
  9845  1C13  3080               	movlw	128
  9846  1C14  0576               	andwf	___fleq@ff2+2,w
  9847  1C15  00FA               	movwf	??___fleq+2
  9848  1C16  307F               	movlw	127
  9849  1C17  0577               	andwf	___fleq@ff2+3,w
  9850  1C18  00FB               	movwf	??___fleq+3
  9851  1C19  087B               	movf	??___fleq+3,w
  9852  1C1A  047A               	iorwf	??___fleq+2,w
  9853  1C1B  0479               	iorwf	??___fleq+1,w
  9854  1C1C  0478               	iorwf	??___fleq,w
  9855  1C1D  1D03               	skipz
  9856  1C1E  2C27               	goto	l496
  9857  1C1F  3000               	movlw	0
  9858  1C20  00F7               	movwf	___fleq@ff2+3
  9859  1C21  3000               	movlw	0
  9860  1C22  00F6               	movwf	___fleq@ff2+2
  9861  1C23  3000               	movlw	0
  9862  1C24  00F5               	movwf	___fleq@ff2+1
  9863  1C25  3000               	movlw	0
  9864  1C26  00F4               	movwf	___fleq@ff2
  9865  1C27                     l496:
  9866  1C27  0877               	movf	___fleq@ff2+3,w
  9867  1C28  0673               	xorwf	___fleq@ff1+3,w
  9868  1C29  1D03               	skipz
  9869  1C2A  2C35               	goto	u5375
  9870  1C2B  0876               	movf	___fleq@ff2+2,w
  9871  1C2C  0672               	xorwf	___fleq@ff1+2,w
  9872  1C2D  1D03               	skipz
  9873  1C2E  2C35               	goto	u5375
  9874  1C2F  0875               	movf	___fleq@ff2+1,w
  9875  1C30  0671               	xorwf	___fleq@ff1+1,w
  9876  1C31  1D03               	skipz
  9877  1C32  2C35               	goto	u5375
  9878  1C33  0874               	movf	___fleq@ff2,w
  9879  1C34  0670               	xorwf	___fleq@ff1,w
  9880  1C35                     u5375:
  9881  1C35  1903               	skipnz
  9882  1C36  2C39               	goto	l3450
  9883  1C37  1003               	clrc
  9884  1C38  0008               	return
  9885  1C39                     l3450:
  9886  1C39  1403               	setc
  9887  1C3A  0008               	return
  9888  1C3B                     __end_of___fleq:
  9889                           
  9890                           	psect	text38
  9891  1495                     __ptext38:	
  9892 ;; *************** function ___fldiv *****************
  9893 ;; Defined at:
  9894 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcdiv.c"
  9895 ;; Parameters:    Size  Location     Type
  9896 ;;  a               4    0[COMMON] unsigned int 
  9897 ;;  b               4    4[COMMON] unsigned int 
  9898 ;; Auto vars:     Size  Location     Type
  9899 ;;  grs             4    7[BANK0 ] unsigned long 
  9900 ;;  rem             4    0[BANK0 ] unsigned long 
  9901 ;;  new_exp         2    5[BANK0 ] int 
  9902 ;;  aexp            1   12[BANK0 ] unsigned char 
  9903 ;;  bexp            1   11[BANK0 ] unsigned char 
  9904 ;;  sign            1    4[BANK0 ] unsigned char 
  9905 ;; Return value:  Size  Location     Type
  9906 ;;                  4    0[COMMON] unsigned char 
  9907 ;; Registers used:
  9908 ;;		wreg, status,2, status,0, btemp+1
  9909 ;; Tracked objects:
  9910 ;;		On entry : 200/100
  9911 ;;		On exit  : 300/0
  9912 ;;		Unchanged: 0/0
  9913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9914 ;;      Params:         8       0       0       0       0
  9915 ;;      Locals:         0      13       0       0       0
  9916 ;;      Temps:          5       0       0       0       0
  9917 ;;      Totals:        13      13       0       0       0
  9918 ;;Total ram usage:       26 bytes
  9919 ;; Hardware stack levels used: 1
  9920 ;; This function calls:
  9921 ;;		Nothing
  9922 ;; This function is called by:
  9923 ;;		_calc
  9924 ;;		_strtod
  9925 ;; This function uses a non-reentrant model
  9926 ;;
  9927                           
  9928  1495                     ___fldiv:	
  9929                           ;psect for function ___fldiv
  9930                           
  9931                           
  9932                           ;incstack = 0
  9933                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  9934  1495  0877               	movf	___fldiv@b+3,w
  9935  1496  3980               	andlw	128
  9936  1497  00F8               	movwf	??___fldiv
  9937  1498  0878               	movf	??___fldiv,w
  9938  1499  1283               	bcf	3,5	;RP0=0, select bank0
  9939  149A  00A4               	movwf	___fldiv@sign
  9940  149B  0877               	movf	___fldiv@b+3,w
  9941  149C  00F8               	movwf	??___fldiv
  9942  149D  0778               	addwf	??___fldiv,w
  9943  149E  00F9               	movwf	??___fldiv+1
  9944  149F  0879               	movf	??___fldiv+1,w
  9945  14A0  00AB               	movwf	___fldiv@bexp
  9946  14A1  1BF6               	btfsc	___fldiv@b+2,7
  9947  14A2  142B               	bsf	___fldiv@bexp,0
  9948  14A3  082B               	movf	___fldiv@bexp,w
  9949  14A4  1903               	btfsc	3,2
  9950  14A5  2CB4               	goto	l3562
  9951  14A6  0A2B               	incf	___fldiv@bexp,w
  9952  14A7  1D03               	btfss	3,2
  9953  14A8  2CB1               	goto	l3558
  9954  14A9  3000               	movlw	0
  9955  14AA  00F7               	movwf	___fldiv@b+3
  9956  14AB  3000               	movlw	0
  9957  14AC  00F6               	movwf	___fldiv@b+2
  9958  14AD  3000               	movlw	0
  9959  14AE  00F5               	movwf	___fldiv@b+1
  9960  14AF  3000               	movlw	0
  9961  14B0  00F4               	movwf	___fldiv@b
  9962  14B1                     l3558:
  9963  14B1  17F6               	bsf	___fldiv@b+2,7
  9964  14B2  01F7               	clrf	___fldiv@b+3
  9965  14B3  2CBC               	goto	l3564
  9966  14B4                     l3562:
  9967  14B4  3000               	movlw	0
  9968  14B5  00F7               	movwf	___fldiv@b+3
  9969  14B6  3000               	movlw	0
  9970  14B7  00F6               	movwf	___fldiv@b+2
  9971  14B8  3000               	movlw	0
  9972  14B9  00F5               	movwf	___fldiv@b+1
  9973  14BA  3000               	movlw	0
  9974  14BB  00F4               	movwf	___fldiv@b
  9975  14BC                     l3564:
  9976  14BC  0873               	movf	___fldiv@a+3,w
  9977  14BD  3980               	andlw	128
  9978  14BE  00F8               	movwf	??___fldiv
  9979  14BF  0878               	movf	??___fldiv,w
  9980  14C0  06A4               	xorwf	___fldiv@sign,f
  9981  14C1  0873               	movf	___fldiv@a+3,w
  9982  14C2  00F8               	movwf	??___fldiv
  9983  14C3  0778               	addwf	??___fldiv,w
  9984  14C4  00F9               	movwf	??___fldiv+1
  9985  14C5  0879               	movf	??___fldiv+1,w
  9986  14C6  00AC               	movwf	___fldiv@aexp
  9987  14C7  1BF2               	btfsc	___fldiv@a+2,7
  9988  14C8  142C               	bsf	___fldiv@aexp,0
  9989  14C9  082C               	movf	___fldiv@aexp,w
  9990  14CA  1903               	btfsc	3,2
  9991  14CB  2CDA               	goto	l3582
  9992  14CC  0A2C               	incf	___fldiv@aexp,w
  9993  14CD  1D03               	btfss	3,2
  9994  14CE  2CD7               	goto	l3578
  9995  14CF  3000               	movlw	0
  9996  14D0  00F3               	movwf	___fldiv@a+3
  9997  14D1  3000               	movlw	0
  9998  14D2  00F2               	movwf	___fldiv@a+2
  9999  14D3  3000               	movlw	0
 10000  14D4  00F1               	movwf	___fldiv@a+1
 10001  14D5  3000               	movlw	0
 10002  14D6  00F0               	movwf	___fldiv@a
 10003  14D7                     l3578:
 10004  14D7  17F2               	bsf	___fldiv@a+2,7
 10005  14D8  01F3               	clrf	___fldiv@a+3
 10006  14D9  2CE2               	goto	l692
 10007  14DA                     l3582:
 10008  14DA  3000               	movlw	0
 10009  14DB  00F3               	movwf	___fldiv@a+3
 10010  14DC  3000               	movlw	0
 10011  14DD  00F2               	movwf	___fldiv@a+2
 10012  14DE  3000               	movlw	0
 10013  14DF  00F1               	movwf	___fldiv@a+1
 10014  14E0  3000               	movlw	0
 10015  14E1  00F0               	movwf	___fldiv@a
 10016  14E2                     l692:
 10017  14E2  0873               	movf	___fldiv@a+3,w
 10018  14E3  0472               	iorwf	___fldiv@a+2,w
 10019  14E4  0471               	iorwf	___fldiv@a+1,w
 10020  14E5  0470               	iorwf	___fldiv@a,w
 10021  14E6  1D03               	skipz
 10022  14E7  2D01               	goto	l3592
 10023  14E8  3000               	movlw	0
 10024  14E9  00F7               	movwf	___fldiv@b+3
 10025  14EA  3000               	movlw	0
 10026  14EB  00F6               	movwf	___fldiv@b+2
 10027  14EC  3000               	movlw	0
 10028  14ED  00F5               	movwf	___fldiv@b+1
 10029  14EE  3000               	movlw	0
 10030  14EF  00F4               	movwf	___fldiv@b
 10031  14F0  3080               	movlw	128
 10032  14F1  04F6               	iorwf	___fldiv@b+2,f
 10033  14F2  307F               	movlw	127
 10034  14F3  04F7               	iorwf	___fldiv@b+3,f
 10035  14F4                     L14:
 10036  14F4  0824               	movf	___fldiv@sign,w
 10037  14F5  00F8               	movwf	??___fldiv
 10038  14F6  0878               	movf	??___fldiv,w
 10039  14F7  04F7               	iorwf	___fldiv@b+3,f
 10040  14F8  0877               	movf	___fldiv@b+3,w
 10041  14F9  00F3               	movwf	?___fldiv+3
 10042  14FA  0876               	movf	___fldiv@b+2,w
 10043  14FB  00F2               	movwf	?___fldiv+2
 10044  14FC  0875               	movf	___fldiv@b+1,w
 10045  14FD  00F1               	movwf	?___fldiv+1
 10046  14FE  0874               	movf	___fldiv@b,w
 10047  14FF  00F0               	movwf	?___fldiv
 10048  1500  0008               	return
 10049  1501                     l3592:
 10050  1501  082B               	movf	___fldiv@bexp,w
 10051  1502  1D03               	btfss	3,2
 10052  1503  2D0D               	goto	l3598
 10053  1504  3000               	movlw	0
 10054  1505  00F3               	movwf	?___fldiv+3
 10055  1506  3000               	movlw	0
 10056  1507  00F2               	movwf	?___fldiv+2
 10057  1508  3000               	movlw	0
 10058  1509  00F1               	movwf	?___fldiv+1
 10059  150A  3000               	movlw	0
 10060  150B  00F0               	movwf	?___fldiv
 10061  150C  0008               	return
 10062  150D                     l3598:
 10063  150D  082B               	movf	___fldiv@bexp,w
 10064  150E  00F8               	movwf	??___fldiv
 10065  150F  01F9               	clrf	??___fldiv+1
 10066  1510  0879               	movf	??___fldiv+1,w
 10067  1511  00FB               	movwf	??___fldiv+3
 10068  1512  082C               	movf	___fldiv@aexp,w
 10069  1513  0278               	subwf	??___fldiv,w
 10070  1514  00FA               	movwf	??___fldiv+2
 10071  1515  1C03               	skipc
 10072  1516  03FB               	decf	??___fldiv+3,f
 10073  1517  087A               	movf	??___fldiv+2,w
 10074  1518  3E7F               	addlw	127
 10075  1519  00A5               	movwf	___fldiv@new_exp
 10076  151A  087B               	movf	??___fldiv+3,w
 10077  151B  1803               	skipnc
 10078  151C  3E01               	addlw	1
 10079  151D  3E00               	addlw	0
 10080  151E  00A6               	movwf	___fldiv@new_exp+1
 10081  151F  0877               	movf	___fldiv@b+3,w
 10082  1520  00A3               	movwf	___fldiv@rem+3
 10083  1521  0876               	movf	___fldiv@b+2,w
 10084  1522  00A2               	movwf	___fldiv@rem+2
 10085  1523  0875               	movf	___fldiv@b+1,w
 10086  1524  00A1               	movwf	___fldiv@rem+1
 10087  1525  0874               	movf	___fldiv@b,w
 10088  1526  00A0               	movwf	___fldiv@rem
 10089  1527  3000               	movlw	0
 10090  1528  00F7               	movwf	___fldiv@b+3
 10091  1529  3000               	movlw	0
 10092  152A  00F6               	movwf	___fldiv@b+2
 10093  152B  3000               	movlw	0
 10094  152C  00F5               	movwf	___fldiv@b+1
 10095  152D  3000               	movlw	0
 10096  152E  00F4               	movwf	___fldiv@b
 10097  152F  3000               	movlw	0
 10098  1530  00AA               	movwf	___fldiv@grs+3
 10099  1531  3000               	movlw	0
 10100  1532  00A9               	movwf	___fldiv@grs+2
 10101  1533  3000               	movlw	0
 10102  1534  00A8               	movwf	___fldiv@grs+1
 10103  1535  3000               	movlw	0
 10104  1536  00A7               	movwf	___fldiv@grs
 10105  1537  01AC               	clrf	___fldiv@aexp
 10106  1538                     l3626:
 10107  1538  301A               	movlw	26
 10108  1539  022C               	subwf	___fldiv@aexp,w
 10109  153A  1803               	btfsc	3,0
 10110  153B  2D86               	goto	l3628
 10111  153C  082C               	movf	___fldiv@aexp,w
 10112  153D  1903               	btfsc	3,2
 10113  153E  2D5C               	goto	l3618
 10114  153F  3001               	movlw	1
 10115  1540  00F8               	movwf	??___fldiv
 10116  1541                     u5715:
 10117  1541  1003               	clrc
 10118  1542  0DA0               	rlf	___fldiv@rem,f
 10119  1543  0DA1               	rlf	___fldiv@rem+1,f
 10120  1544  0DA2               	rlf	___fldiv@rem+2,f
 10121  1545  0DA3               	rlf	___fldiv@rem+3,f
 10122  1546  0BF8               	decfsz	??___fldiv,f
 10123  1547  2D41               	goto	u5715
 10124  1548  3001               	movlw	1
 10125  1549  00F8               	movwf	??___fldiv
 10126  154A                     u5725:
 10127  154A  1003               	clrc
 10128  154B  0DF4               	rlf	___fldiv@b,f
 10129  154C  0DF5               	rlf	___fldiv@b+1,f
 10130  154D  0DF6               	rlf	___fldiv@b+2,f
 10131  154E  0DF7               	rlf	___fldiv@b+3,f
 10132  154F  0BF8               	decfsz	??___fldiv,f
 10133  1550  2D4A               	goto	u5725
 10134  1551  1BAA               	btfsc	___fldiv@grs+3,7
 10135  1552  1474               	bsf	___fldiv@b,0
 10136  1553  3001               	movlw	1
 10137  1554  00F8               	movwf	??___fldiv
 10138  1555                     u5745:
 10139  1555  1003               	clrc
 10140  1556  0DA7               	rlf	___fldiv@grs,f
 10141  1557  0DA8               	rlf	___fldiv@grs+1,f
 10142  1558  0DA9               	rlf	___fldiv@grs+2,f
 10143  1559  0DAA               	rlf	___fldiv@grs+3,f
 10144  155A  0BF8               	decfsz	??___fldiv,f
 10145  155B  2D55               	goto	u5745
 10146  155C                     l3618:
 10147  155C  0873               	movf	___fldiv@a+3,w
 10148  155D  0223               	subwf	___fldiv@rem+3,w
 10149  155E  1D03               	skipz
 10150  155F  2D6A               	goto	u5755
 10151  1560  0872               	movf	___fldiv@a+2,w
 10152  1561  0222               	subwf	___fldiv@rem+2,w
 10153  1562  1D03               	skipz
 10154  1563  2D6A               	goto	u5755
 10155  1564  0871               	movf	___fldiv@a+1,w
 10156  1565  0221               	subwf	___fldiv@rem+1,w
 10157  1566  1D03               	skipz
 10158  1567  2D6A               	goto	u5755
 10159  1568  0870               	movf	___fldiv@a,w
 10160  1569  0220               	subwf	___fldiv@rem,w
 10161  156A                     u5755:
 10162  156A  1C03               	skipc
 10163  156B  2D81               	goto	l3624
 10164  156C  172A               	bsf	___fldiv@grs+3,6
 10165  156D  0870               	movf	___fldiv@a,w
 10166  156E  02A0               	subwf	___fldiv@rem,f
 10167  156F  0871               	movf	___fldiv@a+1,w
 10168  1570  1C03               	skipc
 10169  1571  0F71               	incfsz	___fldiv@a+1,w
 10170  1572  2D74               	goto	u5765
 10171  1573  2D75               	goto	u5766
 10172  1574                     u5765:
 10173  1574  02A1               	subwf	___fldiv@rem+1,f
 10174  1575                     u5766:
 10175  1575  0872               	movf	___fldiv@a+2,w
 10176  1576  1C03               	skipc
 10177  1577  0F72               	incfsz	___fldiv@a+2,w
 10178  1578  2D7A               	goto	u5767
 10179  1579  2D7B               	goto	u5768
 10180  157A                     u5767:
 10181  157A  02A2               	subwf	___fldiv@rem+2,f
 10182  157B                     u5768:
 10183  157B  0873               	movf	___fldiv@a+3,w
 10184  157C  1C03               	skipc
 10185  157D  0F73               	incfsz	___fldiv@a+3,w
 10186  157E  2D80               	goto	u5769
 10187  157F  2D81               	goto	l3624
 10188  1580                     u5769:
 10189  1580  02A3               	subwf	___fldiv@rem+3,f
 10190  1581                     l3624:
 10191  1581  3001               	movlw	1
 10192  1582  00F8               	movwf	??___fldiv
 10193  1583  0878               	movf	??___fldiv,w
 10194  1584  07AC               	addwf	___fldiv@aexp,f
 10195  1585  2D38               	goto	l3626
 10196  1586                     l3628:
 10197  1586  0823               	movf	___fldiv@rem+3,w
 10198  1587  0422               	iorwf	___fldiv@rem+2,w
 10199  1588  0421               	iorwf	___fldiv@rem+1,w
 10200  1589  0420               	iorwf	___fldiv@rem,w
 10201  158A  1D03               	btfss	3,2
 10202  158B  1427               	bsf	___fldiv@grs,0
 10203  158C                     l3642:
 10204  158C  1BF6               	btfsc	___fldiv@b+2,7
 10205  158D  2DA9               	goto	l3644
 10206  158E  3001               	movlw	1
 10207  158F  00F8               	movwf	??___fldiv
 10208  1590                     u5795:
 10209  1590  1003               	clrc
 10210  1591  0DF4               	rlf	___fldiv@b,f
 10211  1592  0DF5               	rlf	___fldiv@b+1,f
 10212  1593  0DF6               	rlf	___fldiv@b+2,f
 10213  1594  0DF7               	rlf	___fldiv@b+3,f
 10214  1595  0BF8               	decfsz	??___fldiv,f
 10215  1596  2D90               	goto	u5795
 10216  1597  1BAA               	btfsc	___fldiv@grs+3,7
 10217  1598  1474               	bsf	___fldiv@b,0
 10218  1599  3001               	movlw	1
 10219  159A  00F8               	movwf	??___fldiv
 10220  159B                     u5815:
 10221  159B  1003               	clrc
 10222  159C  0DA7               	rlf	___fldiv@grs,f
 10223  159D  0DA8               	rlf	___fldiv@grs+1,f
 10224  159E  0DA9               	rlf	___fldiv@grs+2,f
 10225  159F  0DAA               	rlf	___fldiv@grs+3,f
 10226  15A0  0BF8               	decfsz	??___fldiv,f
 10227  15A1  2D9B               	goto	u5815
 10228  15A2  30FF               	movlw	255
 10229  15A3  07A5               	addwf	___fldiv@new_exp,f
 10230  15A4  1803               	skipnc
 10231  15A5  0AA6               	incf	___fldiv@new_exp+1,f
 10232  15A6  30FF               	movlw	255
 10233  15A7  07A6               	addwf	___fldiv@new_exp+1,f
 10234  15A8  2D8C               	goto	l3642
 10235  15A9                     l3644:
 10236  15A9  01AC               	clrf	___fldiv@aexp
 10237  15AA  1FAA               	btfss	___fldiv@grs+3,7
 10238  15AB  2DC2               	goto	l3654
 10239  15AC  30FF               	movlw	255
 10240  15AD  0527               	andwf	___fldiv@grs,w
 10241  15AE  00F8               	movwf	??___fldiv
 10242  15AF  30FF               	movlw	255
 10243  15B0  0528               	andwf	___fldiv@grs+1,w
 10244  15B1  00F9               	movwf	??___fldiv+1
 10245  15B2  30FF               	movlw	255
 10246  15B3  0529               	andwf	___fldiv@grs+2,w
 10247  15B4  00FA               	movwf	??___fldiv+2
 10248  15B5  307F               	movlw	127
 10249  15B6  052A               	andwf	___fldiv@grs+3,w
 10250  15B7  00FB               	movwf	??___fldiv+3
 10251  15B8  087B               	movf	??___fldiv+3,w
 10252  15B9  047A               	iorwf	??___fldiv+2,w
 10253  15BA  0479               	iorwf	??___fldiv+1,w
 10254  15BB  0478               	iorwf	??___fldiv,w
 10255  15BC  1903               	skipnz
 10256  15BD  1874               	btfsc	___fldiv@b,0
 10257  15BE  2DC0               	goto	l3650
 10258  15BF  2DC2               	goto	l3654
 10259  15C0                     l3650:
 10260  15C0  01AC               	clrf	___fldiv@aexp
 10261  15C1  0AAC               	incf	___fldiv@aexp,f
 10262  15C2                     l3654:
 10263  15C2  082C               	movf	___fldiv@aexp,w
 10264  15C3  1903               	btfsc	3,2
 10265  15C4  2DF4               	goto	l3664
 10266  15C5  3001               	movlw	1
 10267  15C6  07F4               	addwf	___fldiv@b,f
 10268  15C7  3000               	movlw	0
 10269  15C8  1803               	skipnc
 10270  15C9  3001               	movlw	1
 10271  15CA  07F5               	addwf	___fldiv@b+1,f
 10272  15CB  3000               	movlw	0
 10273  15CC  1803               	skipnc
 10274  15CD  3001               	movlw	1
 10275  15CE  07F6               	addwf	___fldiv@b+2,f
 10276  15CF  3000               	movlw	0
 10277  15D0  1803               	skipnc
 10278  15D1  3001               	movlw	1
 10279  15D2  07F7               	addwf	___fldiv@b+3,f
 10280  15D3  1C77               	btfss	___fldiv@b+3,0
 10281  15D4  2DF4               	goto	l3664
 10282  15D5  0874               	movf	___fldiv@b,w
 10283  15D6  00F8               	movwf	??___fldiv
 10284  15D7  0875               	movf	___fldiv@b+1,w
 10285  15D8  00F9               	movwf	??___fldiv+1
 10286  15D9  0876               	movf	___fldiv@b+2,w
 10287  15DA  00FA               	movwf	??___fldiv+2
 10288  15DB  0877               	movf	___fldiv@b+3,w
 10289  15DC  00FB               	movwf	??___fldiv+3
 10290  15DD  3001               	movlw	1
 10291  15DE  00FC               	movwf	??___fldiv+4
 10292  15DF                     u5885:
 10293  15DF  0D7B               	rlf	??___fldiv+3,w
 10294  15E0  0CFB               	rrf	??___fldiv+3,f
 10295  15E1  0CFA               	rrf	??___fldiv+2,f
 10296  15E2  0CF9               	rrf	??___fldiv+1,f
 10297  15E3  0CF8               	rrf	??___fldiv,f
 10298  15E4  0BFC               	decfsz	??___fldiv+4,f
 10299  15E5  2DDF               	goto	u5885
 10300  15E6  087B               	movf	??___fldiv+3,w
 10301  15E7  00F7               	movwf	___fldiv@b+3
 10302  15E8  087A               	movf	??___fldiv+2,w
 10303  15E9  00F6               	movwf	___fldiv@b+2
 10304  15EA  0879               	movf	??___fldiv+1,w
 10305  15EB  00F5               	movwf	___fldiv@b+1
 10306  15EC  0878               	movf	??___fldiv,w
 10307  15ED  00F4               	movwf	___fldiv@b
 10308  15EE  3001               	movlw	1
 10309  15EF  07A5               	addwf	___fldiv@new_exp,f
 10310  15F0  1803               	skipnc
 10311  15F1  0AA6               	incf	___fldiv@new_exp+1,f
 10312  15F2  3000               	movlw	0
 10313  15F3  07A6               	addwf	___fldiv@new_exp+1,f
 10314  15F4                     l3664:
 10315  15F4  0826               	movf	___fldiv@new_exp+1,w
 10316  15F5  3A80               	xorlw	128
 10317  15F6  00FF               	movwf	127
 10318  15F7  3080               	movlw	128
 10319  15F8  027F               	subwf	127,w
 10320  15F9  1D03               	skipz
 10321  15FA  2DFD               	goto	u5895
 10322  15FB  30FF               	movlw	255
 10323  15FC  0225               	subwf	___fldiv@new_exp,w
 10324  15FD                     u5895:
 10325  15FD  1C03               	skipc
 10326  15FE  2E0D               	goto	l3668
 10327  15FF  30FF               	movlw	255
 10328  1600  1283               	bcf	3,5	;RP0=0, select bank0
 10329  1601  1303               	bcf	3,6	;RP1=0, select bank0
 10330  1602  00A5               	movwf	___fldiv@new_exp
 10331  1603  3000               	movlw	0
 10332  1604  00A6               	movwf	___fldiv@new_exp+1
 10333  1605  3000               	movlw	0
 10334  1606  00F7               	movwf	___fldiv@b+3
 10335  1607  3000               	movlw	0
 10336  1608  00F6               	movwf	___fldiv@b+2
 10337  1609  3000               	movlw	0
 10338  160A  00F5               	movwf	___fldiv@b+1
 10339  160B  3000               	movlw	0
 10340  160C  00F4               	movwf	___fldiv@b
 10341  160D                     l3668:
 10342  160D  1283               	bcf	3,5	;RP0=0, select bank0
 10343  160E  1303               	bcf	3,6	;RP1=0, select bank0
 10344  160F  0826               	movf	___fldiv@new_exp+1,w
 10345  1610  3A80               	xorlw	128
 10346  1611  00FF               	movwf	127
 10347  1612  3080               	movlw	128
 10348  1613  027F               	subwf	127,w
 10349  1614  1D03               	skipz
 10350  1615  2E18               	goto	u5905
 10351  1616  3001               	movlw	1
 10352  1617  0225               	subwf	___fldiv@new_exp,w
 10353  1618                     u5905:
 10354  1618  1803               	skipnc
 10355  1619  2E27               	goto	l714
 10356  161A  1283               	bcf	3,5	;RP0=0, select bank0
 10357  161B  1303               	bcf	3,6	;RP1=0, select bank0
 10358  161C  01A5               	clrf	___fldiv@new_exp
 10359  161D  01A6               	clrf	___fldiv@new_exp+1
 10360  161E  3000               	movlw	0
 10361  161F  00F7               	movwf	___fldiv@b+3
 10362  1620  3000               	movlw	0
 10363  1621  00F6               	movwf	___fldiv@b+2
 10364  1622  3000               	movlw	0
 10365  1623  00F5               	movwf	___fldiv@b+1
 10366  1624  3000               	movlw	0
 10367  1625  00F4               	movwf	___fldiv@b
 10368  1626  01A4               	clrf	___fldiv@sign
 10369  1627                     l714:
 10370  1627  1283               	bcf	3,5	;RP0=0, select bank0
 10371  1628  1303               	bcf	3,6	;RP1=0, select bank0
 10372  1629  0825               	movf	___fldiv@new_exp,w
 10373  162A  00F8               	movwf	??___fldiv
 10374  162B  0878               	movf	??___fldiv,w
 10375  162C  00AB               	movwf	___fldiv@bexp
 10376  162D  1C2B               	btfss	___fldiv@bexp,0
 10377  162E  2E31               	goto	l3680
 10378  162F  17F6               	bsf	___fldiv@b+2,7
 10379  1630  2E35               	goto	l716
 10380  1631                     l3680:
 10381  1631  307F               	movlw	127
 10382  1632  00F8               	movwf	??___fldiv
 10383  1633  0878               	movf	??___fldiv,w
 10384  1634  05F6               	andwf	___fldiv@b+2,f
 10385  1635                     l716:
 10386  1635  082B               	movf	___fldiv@bexp,w
 10387  1636  00F8               	movwf	??___fldiv
 10388  1637  1003               	clrc
 10389  1638  0C78               	rrf	??___fldiv,w
 10390  1639  00F9               	movwf	??___fldiv+1
 10391  163A  0879               	movf	??___fldiv+1,w
 10392  163B  00F7               	movwf	___fldiv@b+3
 10393  163C  2CF4               	goto	L14
 10394  163D                     __end_of___fldiv:
 10395                           
 10396                           	psect	text39
 10397  199C                     __ptext39:	
 10398 ;; *************** function ___bmul *****************
 10399 ;; Defined at:
 10400 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul8.c"
 10401 ;; Parameters:    Size  Location     Type
 10402 ;;  multiplier      1    wreg     unsigned char 
 10403 ;;  multiplicand    1    0[COMMON] unsigned char 
 10404 ;; Auto vars:     Size  Location     Type
 10405 ;;  multiplier      1    3[COMMON] unsigned char 
 10406 ;;  product         1    2[COMMON] unsigned char 
 10407 ;; Return value:  Size  Location     Type
 10408 ;;                  1    wreg      unsigned char 
 10409 ;; Registers used:
 10410 ;;		wreg, status,2, status,0
 10411 ;; Tracked objects:
 10412 ;;		On entry : B00/800
 10413 ;;		On exit  : B00/800
 10414 ;;		Unchanged: B00/0
 10415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10416 ;;      Params:         1       0       0       0       0
 10417 ;;      Locals:         2       0       0       0       0
 10418 ;;      Temps:          1       0       0       0       0
 10419 ;;      Totals:         4       0       0       0       0
 10420 ;;Total ram usage:        4 bytes
 10421 ;; Hardware stack levels used: 1
 10422 ;; This function calls:
 10423 ;;		Nothing
 10424 ;; This function is called by:
 10425 ;;		_strtod
 10426 ;; This function uses a non-reentrant model
 10427 ;;
 10428                           
 10429  199C                     ___bmul:	
 10430                           ;psect for function ___bmul
 10431                           
 10432                           
 10433                           ;incstack = 0
 10434                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 10435                           ;___bmul@multiplier stored from wreg
 10436  199C  00F3               	movwf	___bmul@multiplier
 10437  199D  01F2               	clrf	___bmul@product
 10438  199E                     l3406:
 10439  199E  1C73               	btfss	___bmul@multiplier,0
 10440  199F  29A4               	goto	l3410
 10441  19A0  0870               	movf	___bmul@multiplicand,w
 10442  19A1  00F1               	movwf	??___bmul
 10443  19A2  0871               	movf	??___bmul,w
 10444  19A3  07F2               	addwf	___bmul@product,f
 10445  19A4                     l3410:
 10446  19A4  1003               	clrc
 10447  19A5  0DF0               	rlf	___bmul@multiplicand,f
 10448  19A6  1003               	clrc
 10449  19A7  0CF3               	rrf	___bmul@multiplier,f
 10450  19A8  0873               	movf	___bmul@multiplier,w
 10451  19A9  1D03               	btfss	3,2
 10452  19AA  299E               	goto	l3406
 10453  19AB  0872               	movf	___bmul@product,w
 10454  19AC  0008               	return
 10455  19AD                     __end_of___bmul:
 10456                           
 10457                           	psect	text40
 10458  1DD5                     __ptext40:	
 10459 ;; *************** function _LCD_Init *****************
 10460 ;; Defined at:
 10461 ;;		line 50 in file "main.c"
 10462 ;; Parameters:    Size  Location     Type
 10463 ;;		None
 10464 ;; Auto vars:     Size  Location     Type
 10465 ;;		None
 10466 ;; Return value:  Size  Location     Type
 10467 ;;                  1    wreg      void 
 10468 ;; Registers used:
 10469 ;;		wreg, status,2, status,0, pclath, cstack
 10470 ;; Tracked objects:
 10471 ;;		On entry : B00/0
 10472 ;;		On exit  : 300/0
 10473 ;;		Unchanged: 0/0
 10474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10475 ;;      Params:         0       0       0       0       0
 10476 ;;      Locals:         0       0       0       0       0
 10477 ;;      Temps:          2       0       0       0       0
 10478 ;;      Totals:         2       0       0       0       0
 10479 ;;Total ram usage:        2 bytes
 10480 ;; Hardware stack levels used: 1
 10481 ;; Hardware stack levels required when called: 2
 10482 ;; This function calls:
 10483 ;;		_LCD_CMD
 10484 ;;		_LCD_DATA
 10485 ;; This function is called by:
 10486 ;;		_main
 10487 ;; This function uses a non-reentrant model
 10488 ;;
 10489                           
 10490  1DD5                     _LCD_Init:	
 10491                           ;psect for function _LCD_Init
 10492                           
 10493                           
 10494                           ;main.c: 53:   TRISC = 0x00;
 10495                           
 10496                           ;incstack = 0
 10497                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
 10498  1DD5  1683               	bsf	3,5	;RP0=1, select bank1
 10499  1DD6  0187               	clrf	7	;volatile
 10500                           
 10501                           ;main.c: 54:   TRISC4 = 0;
 10502  1DD7  1207               	bcf	7,4	;volatile
 10503                           
 10504                           ;main.c: 55:   TRISC5 = 0;
 10505  1DD8  1287               	bcf	7,5	;volatile
 10506                           
 10507                           ;main.c: 57:   LCD_DATA(0x00);
 10508  1DD9  3000               	movlw	0
 10509  1DDA  160A  158A  220D  160A  158A  	fcall	_LCD_DATA
 10510                           
 10511                           ;main.c: 58:   _delay((unsigned long)((30)*(4000000/4000.0)));
 10512  1DDF  3027               	movlw	39
 10513  1DE0  00F4               	movwf	??_LCD_Init+1
 10514  1DE1  30F5               	movlw	245
 10515  1DE2  00F3               	movwf	??_LCD_Init
 10516  1DE3                     u7047:
 10517  1DE3  0BF3               	decfsz	??_LCD_Init,f
 10518  1DE4  2DE3               	goto	u7047
 10519  1DE5  0BF4               	decfsz	??_LCD_Init+1,f
 10520  1DE6  2DE3               	goto	u7047
 10521                           
 10522                           ;main.c: 59:   _delay((unsigned long)((500)*(4000000/4000000.0)));
 10523  1DE7  30A6               	movlw	166
 10524  1DE8  00F3               	movwf	??_LCD_Init
 10525  1DE9                     u7057:
 10526  1DE9  0BF3               	decfsz	??_LCD_Init,f
 10527  1DEA  2DE9               	goto	u7057
 10528  1DEB  0000               	nop
 10529                           
 10530                           ;main.c: 60:   LCD_CMD(0x03);
 10531  1DEC  3003               	movlw	3
 10532  1DED  160A  158A  21E1  160A  158A  	fcall	_LCD_CMD
 10533                           
 10534                           ;main.c: 61:   _delay((unsigned long)((5)*(4000000/4000.0)));
 10535  1DF2  3007               	movlw	7
 10536  1DF3  00F4               	movwf	??_LCD_Init+1
 10537  1DF4  307D               	movlw	125
 10538  1DF5  00F3               	movwf	??_LCD_Init
 10539  1DF6                     u7067:
 10540  1DF6  0BF3               	decfsz	??_LCD_Init,f
 10541  1DF7  2DF6               	goto	u7067
 10542  1DF8  0BF4               	decfsz	??_LCD_Init+1,f
 10543  1DF9  2DF6               	goto	u7067
 10544                           
 10545                           ;main.c: 62:   LCD_CMD(0x03);
 10546  1DFA  3003               	movlw	3
 10547  1DFB  160A  158A  21E1  160A  158A  	fcall	_LCD_CMD
 10548                           
 10549                           ;main.c: 63:   _delay((unsigned long)((150)*(4000000/4000000.0)));
 10550  1E00  3031               	movlw	49
 10551  1E01  00F3               	movwf	??_LCD_Init
 10552  1E02                     u7077:
 10553  1E02  0BF3               	decfsz	??_LCD_Init,f
 10554  1E03  2E02               	goto	u7077
 10555  1E04  2E05               	nop2
 10556                           
 10557                           ;main.c: 64:   LCD_CMD(0x03);
 10558  1E05  3003               	movlw	3
 10559  1E06  160A  158A  21E1  160A  158A  	fcall	_LCD_CMD
 10560                           
 10561                           ;main.c: 65:   LCD_CMD(0x02);
 10562  1E0B  3002               	movlw	2
 10563  1E0C  160A  158A  21E1  160A  158A  	fcall	_LCD_CMD
 10564                           
 10565                           ;main.c: 66:   LCD_CMD(0x02);
 10566  1E11  3002               	movlw	2
 10567  1E12  160A  158A  21E1  160A  158A  	fcall	_LCD_CMD
 10568                           
 10569                           ;main.c: 67:   LCD_CMD(0x08);
 10570  1E17  3008               	movlw	8
 10571  1E18  160A  158A  21E1  160A  158A  	fcall	_LCD_CMD
 10572                           
 10573                           ;main.c: 68:   LCD_CMD(0x00);
 10574  1E1D  3000               	movlw	0
 10575  1E1E  160A  158A  21E1  160A  158A  	fcall	_LCD_CMD
 10576                           
 10577                           ;main.c: 69:   LCD_CMD(0x0C);
 10578  1E23  300C               	movlw	12
 10579  1E24  160A  158A  21E1  160A  158A  	fcall	_LCD_CMD
 10580                           
 10581                           ;main.c: 70:   LCD_CMD(0x00);
 10582  1E29  3000               	movlw	0
 10583  1E2A  160A  158A  21E1  160A  158A  	fcall	_LCD_CMD
 10584                           
 10585                           ;main.c: 71:   LCD_CMD(0x06);
 10586  1E2F  3006               	movlw	6
 10587  1E30  160A  158A  21E1   	fcall	_LCD_CMD
 10588  1E33  0008               	return
 10589  1E34                     __end_of_LCD_Init:
 10590                           
 10591                           	psect	text41
 10592  19E1                     __ptext41:	
 10593 ;; *************** function _LCD_CMD *****************
 10594 ;; Defined at:
 10595 ;;		line 39 in file "main.c"
 10596 ;; Parameters:    Size  Location     Type
 10597 ;;  CMD             1    wreg     unsigned char 
 10598 ;; Auto vars:     Size  Location     Type
 10599 ;;  CMD             1    2[COMMON] unsigned char 
 10600 ;; Return value:  Size  Location     Type
 10601 ;;                  1    wreg      void 
 10602 ;; Registers used:
 10603 ;;		wreg, status,2, status,0, pclath, cstack
 10604 ;; Tracked objects:
 10605 ;;		On entry : 0/0
 10606 ;;		On exit  : 300/0
 10607 ;;		Unchanged: 0/0
 10608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10609 ;;      Params:         0       0       0       0       0
 10610 ;;      Locals:         1       0       0       0       0
 10611 ;;      Temps:          1       0       0       0       0
 10612 ;;      Totals:         2       0       0       0       0
 10613 ;;Total ram usage:        2 bytes
 10614 ;; Hardware stack levels used: 1
 10615 ;; Hardware stack levels required when called: 1
 10616 ;; This function calls:
 10617 ;;		_LCD_DATA
 10618 ;; This function is called by:
 10619 ;;		_LCD_Init
 10620 ;;		_LCD_Clear
 10621 ;;		_LCD_Set_Cursor
 10622 ;; This function uses a non-reentrant model
 10623 ;;
 10624                           
 10625  19E1                     _LCD_CMD:	
 10626                           ;psect for function _LCD_CMD
 10627                           
 10628                           
 10629                           ;incstack = 0
 10630                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
 10631                           ;LCD_CMD@CMD stored from wreg
 10632  19E1  00F2               	movwf	LCD_CMD@CMD
 10633                           
 10634                           ;main.c: 39: void LCD_CMD(unsigned char CMD);main.c: 40: {;main.c: 42:   RC4 = 0;
 10635  19E2  1283               	bcf	3,5	;RP0=0, select bank0
 10636  19E3  1303               	bcf	3,6	;RP1=0, select bank0
 10637  19E4  1207               	bcf	7,4	;volatile
 10638                           
 10639                           ;main.c: 44:   LCD_DATA(CMD);
 10640  19E5  0872               	movf	LCD_CMD@CMD,w
 10641  19E6  160A  158A  220D  160A  158A  	fcall	_LCD_DATA
 10642                           
 10643                           ;main.c: 46:   RC5 = 1;
 10644  19EB  1687               	bsf	7,5	;volatile
 10645                           
 10646                           ;main.c: 47:   _delay((unsigned long)((500)*(4000000/4000000.0)));
 10647  19EC  30A6               	movlw	166
 10648  19ED  00F1               	movwf	??_LCD_CMD
 10649  19EE                     u7087:
 10650  19EE  0BF1               	decfsz	??_LCD_CMD,f
 10651  19EF  29EE               	goto	u7087
 10652  19F0  0000               	nop
 10653                           
 10654                           ;main.c: 48:   RC5 = 0;
 10655  19F1  1283               	bcf	3,5	;RP0=0, select bank0
 10656  19F2  1303               	bcf	3,6	;RP1=0, select bank0
 10657  19F3  1287               	bcf	7,5	;volatile
 10658  19F4  0008               	return
 10659  19F5                     __end_of_LCD_CMD:
 10660                           
 10661                           	psect	text42
 10662  1A0D                     __ptext42:	
 10663 ;; *************** function _LCD_DATA *****************
 10664 ;; Defined at:
 10665 ;;		line 19 in file "main.c"
 10666 ;; Parameters:    Size  Location     Type
 10667 ;;  Data            1    wreg     unsigned char 
 10668 ;; Auto vars:     Size  Location     Type
 10669 ;;  Data            1    0[COMMON] unsigned char 
 10670 ;; Return value:  Size  Location     Type
 10671 ;;                  1    wreg      void 
 10672 ;; Registers used:
 10673 ;;		wreg
 10674 ;; Tracked objects:
 10675 ;;		On entry : 0/800
 10676 ;;		On exit  : 300/0
 10677 ;;		Unchanged: 0/0
 10678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10679 ;;      Params:         0       0       0       0       0
 10680 ;;      Locals:         1       0       0       0       0
 10681 ;;      Temps:          0       0       0       0       0
 10682 ;;      Totals:         1       0       0       0       0
 10683 ;;Total ram usage:        1 bytes
 10684 ;; Hardware stack levels used: 1
 10685 ;; This function calls:
 10686 ;;		Nothing
 10687 ;; This function is called by:
 10688 ;;		_LCD_CMD
 10689 ;;		_LCD_Init
 10690 ;;		_LCD_Write_Char
 10691 ;; This function uses a non-reentrant model
 10692 ;;
 10693                           
 10694  1A0D                     _LCD_DATA:	
 10695                           ;psect for function _LCD_DATA
 10696                           
 10697                           
 10698                           ;incstack = 0
 10699                           ; Regs used in _LCD_DATA: [wreg]
 10700                           ;LCD_DATA@Data stored from wreg
 10701  1A0D  00F0               	movwf	LCD_DATA@Data
 10702                           
 10703                           ;main.c: 19: void LCD_DATA(unsigned char Data);main.c: 20: {;main.c: 21:   if(Data & 1)
 10704  1A0E  1C70               	btfss	LCD_DATA@Data,0
 10705  1A0F  2A14               	goto	l57
 10706                           
 10707                           ;main.c: 22:     RC0 = 1;
 10708  1A10  1283               	bcf	3,5	;RP0=0, select bank0
 10709  1A11  1303               	bcf	3,6	;RP1=0, select bank0
 10710  1A12  1407               	bsf	7,0	;volatile
 10711  1A13  2A17               	goto	l58
 10712  1A14                     l57:	
 10713                           ;main.c: 23:   else
 10714                           
 10715                           
 10716                           ;main.c: 24:     RC0 = 0;
 10717  1A14  1283               	bcf	3,5	;RP0=0, select bank0
 10718  1A15  1303               	bcf	3,6	;RP1=0, select bank0
 10719  1A16  1007               	bcf	7,0	;volatile
 10720  1A17                     l58:
 10721                           
 10722                           ;main.c: 25:   if(Data & 2)
 10723  1A17  1CF0               	btfss	LCD_DATA@Data,1
 10724  1A18  2A1B               	goto	l59
 10725                           
 10726                           ;main.c: 26:     RC1 = 1;
 10727  1A19  1487               	bsf	7,1	;volatile
 10728  1A1A  2A1C               	goto	l60
 10729  1A1B                     l59:	
 10730                           ;main.c: 27:   else
 10731                           
 10732                           
 10733                           ;main.c: 28:     RC1 = 0;
 10734  1A1B  1087               	bcf	7,1	;volatile
 10735  1A1C                     l60:
 10736                           
 10737                           ;main.c: 29:   if(Data & 4)
 10738  1A1C  1D70               	btfss	LCD_DATA@Data,2
 10739  1A1D  2A20               	goto	l61
 10740                           
 10741                           ;main.c: 30:     RC2 = 1;
 10742  1A1E  1507               	bsf	7,2	;volatile
 10743  1A1F  2A21               	goto	l62
 10744  1A20                     l61:	
 10745                           ;main.c: 31:   else
 10746                           
 10747                           
 10748                           ;main.c: 32:     RC2 = 0;
 10749  1A20  1107               	bcf	7,2	;volatile
 10750  1A21                     l62:
 10751                           
 10752                           ;main.c: 33:   if(Data & 8)
 10753  1A21  1DF0               	btfss	LCD_DATA@Data,3
 10754  1A22  2A25               	goto	l63
 10755                           
 10756                           ;main.c: 34:     RC3 = 1;
 10757  1A23  1587               	bsf	7,3	;volatile
 10758  1A24  0008               	return
 10759  1A25                     l63:	
 10760                           ;main.c: 35:   else
 10761                           
 10762                           
 10763                           ;main.c: 36:     RC3 = 0;
 10764  1A25  1187               	bcf	7,3	;volatile
 10765  1A26  0008               	return
 10766  1A27                     __end_of_LCD_DATA:
 10767  007E                     btemp	set	126	;btemp
 10768  007E                     wtemp0	set	126
 10769                           
 10770                           	psect	idloc
 10771                           
 10772                           ;Config register IDLOC0 @ 0x2000
 10773                           ;	unspecified, using default values
 10774  2000                     	org	8192
 10775  2000  3FFF               	dw	16383
 10776                           
 10777                           ;Config register IDLOC1 @ 0x2001
 10778                           ;	unspecified, using default values
 10779  2001                     	org	8193
 10780  2001  3FFF               	dw	16383
 10781                           
 10782                           ;Config register IDLOC2 @ 0x2002
 10783                           ;	unspecified, using default values
 10784  2002                     	org	8194
 10785  2002  3FFF               	dw	16383
 10786                           
 10787                           ;Config register IDLOC3 @ 0x2003
 10788                           ;	unspecified, using default values
 10789  2003                     	org	8195
 10790  2003  3FFF               	dw	16383
 10791                           
 10792                           	psect	config
 10793                           
 10794                           ;Config register CONFIG @ 0x2007
 10795                           ;	Oscillator Selection bits
 10796                           ;	FOSC = XT, XT oscillator
 10797                           ;	Watchdog Timer Enable bit
 10798                           ;	WDTE = OFF, WDT disabled
 10799                           ;	Power-up Timer Enable bit
 10800                           ;	PWRTE = ON, PWRT enabled
 10801                           ;	Brown-out Reset Enable bit
 10802                           ;	BOREN = ON, BOR enabled
 10803                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
 10804                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
 10805                           ;	Data EEPROM Memory Code Protection bit
 10806                           ;	CPD = OFF, Data EEPROM code protection off
 10807                           ;	Flash Program Memory Write Enable bits
 10808                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
 10809                           ;	In-Circuit Debugger Mode bit
 10810                           ;	DEBUG = 0x1, unprogrammed default
 10811                           ;	Flash Program Memory Code Protection bit
 10812                           ;	CP = OFF, Code protection off
 10813  2007                     	org	8199
 10814  2007  3F71               	dw	16241

Data Sizes:
    Strings     40
    Constant    144
    Data        25
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     69      78
    BANK3            96      0      58
    BANK2            96      0       0

Pointer List with Targets:

    strncat@from	PTR const unsigned char  size(1) Largest target is 1
		 -> append@key(BANK1[1]), 

    strncat@to	PTR unsigned char  size(1) Largest target is 10
		 -> val_two(BANK3[10]), val_one(BANK3[10]), 

    strncat@cp	PTR unsigned char  size(1) Largest target is 10
		 -> val_two(BANK3[10]), val_one(BANK3[10]), 

    strcpy@from	PTR const unsigned char  size(1) Largest target is 10
		 -> calc@res(BANK1[10]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 10
		 -> val_one(BANK3[10]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 10
		 -> val_one(BANK3[10]), 

    memset@p1	PTR void  size(1) Largest target is 10
		 -> val_two(BANK3[10]), val_one(BANK3[10]), 

    memset@p	PTR unsigned char  size(1) Largest target is 10
		 -> val_two(BANK3[10]), val_one(BANK3[10]), 

    atof@s	PTR const unsigned char  size(1) Largest target is 10
		 -> val_two(BANK3[10]), val_one(BANK3[10]), 

    strtod@s	PTR const unsigned char  size(1) Largest target is 10
		 -> val_two(BANK3[10]), val_one(BANK3[10]), 

    strtod@res	PTR PTR const unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> calc@res(BANK1[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    sp__strncat	PTR unsigned char  size(1) Largest target is 10
		 -> val_two(BANK3[10]), val_one(BANK3[10]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 10
		 -> val_one(BANK3[10]), 

    sp__memset	PTR void  size(1) Largest target is 10
		 -> val_two(BANK3[10]), val_one(BANK3[10]), 

    LCD_Write_String@str	PTR unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[18]), STR_3(CODE[8]), STR_2(CODE[11]), calc@res(BANK1[10]), 
		 -> val_two(BANK3[10]), val_one(BANK3[10]), 


Critical Paths under _main in COMMON

    _show->_LCD_Write_String
    _LCD_Clear->_LCD_CMD
    _sprintf->___fltol
    _sprintf->___lldiv
    _sprintf->___xxtofl
    _scale->___awdiv
    ___awdiv->___awmod
    _fround->___lbdiv
    ___lbdiv->___lbmod
    ___flsub->___xxtofl
    _clr->_memset
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_DATA
    _LCD_Set_Cursor->_LCD_CMD
    _strtod->___xxtofl
    ___flmul->___awdiv
    ___flmul->___lbdiv
    _LCD_Init->_LCD_CMD
    _LCD_CMD->_LCD_DATA

Critical Paths under _main in BANK0

    _append->_calc
    _calc->___flsub
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _atof->_strtod
    _strtod->___flmul
    ___flmul->___awdiv

Critical Paths under _main in BANK1

    _main->_append
    _append->_calc
    _calc->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   63807
                                             62 BANK1      7     7      0
                          _LCD_Clear
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
                             _append
 ---------------------------------------------------------------------------------
 (1) _append                                               4     4      0   61835
                                             58 BANK1      4     4      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                   _LCD_Write_String
                               _atof
                               _calc
                                _clr
                               _show
                            _strncat
 ---------------------------------------------------------------------------------
 (2) _strncat                                              6     3      3     535
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (2) _show                                                 0     0      0    1772
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (3) _LCD_Clear                                            0     0      0     110
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _calc                                                25    16      9   46215
                                             78 BANK0      2     2      0
                                             35 BANK1     23    14      9
                     _LCD_Set_Cursor
                   _LCD_Write_String
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                                _clr
                            _sprintf
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               4     3      1     184
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             42    37      5   31884
                                              0 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                               19    15      4    7865
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) _fround                                              20    16      4    5872
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (5) ___lbmod                                              7     6      1     387
                                              0 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (5) ___lbdiv                                              5     4      1     390
                                              7 COMMON     5     4      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     457
                                             12 COMMON     2     2      0
                                             49 BANK0      9     5      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    2789
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             20    12      8    2440
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) _clr                                                  1     1      0     466
                                              7 COMMON     1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               7     3      4     466
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_String                                     7     5      2     724
                                              5 COMMON     7     5      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (3) _LCD_Set_Cursor                                       7     6      1     760
                                              3 COMMON     7     6      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _atof                                                 5     1      4   10810
                                             46 BANK0      5     1      4
                             _strtod
 ---------------------------------------------------------------------------------
 (3) _strtod                                              16    12      4   10722
                                             30 BANK0     16    12      4
                             ___bmul
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                             ___lmul
                           ___xxtofl
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (4) _isspace                                              2     2      0      90
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     197
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             26    18      8    4850
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8    1094
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fleq                                              12     4      8     546
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    1577
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     244
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     198
                                              3 COMMON     2     2      0
                            _LCD_CMD
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (4) _LCD_CMD                                              2     2      0     110
                                              1 COMMON     2     2      0
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (5) _LCD_DATA                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_CMD
       _LCD_DATA
   _LCD_Init
     _LCD_CMD
     _LCD_DATA
   _LCD_Set_Cursor
     _LCD_CMD
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_DATA
   _append
     _LCD_Clear
     _LCD_Set_Cursor
     _LCD_Write_Char
     _LCD_Write_String
     _atof
       _strtod
         ___bmul
         ___fldiv
         ___fleq
         ___flge
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
         ___flneg
         ___lmul
         ___xxtofl
         _isdigit
         _isspace
     _calc
       _LCD_Set_Cursor
       _LCD_Write_String
       ___fladd
         _fround (ARG)
           ___flmul
           ___lbdiv
           ___lbmod
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
         ___xxtofl (ARG)
       _clr
         _memset
       _sprintf
         ___awdiv
         ___fladd
         ___fleq
         ___flge
         ___flmul
         ___flneg
         ___flsub
         ___fltol
           ___flmul (ARG)
           _scale (ARG)
             ___awdiv
             ___awmod
             ___flmul
         ___lldiv
         ___llmod
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
         _scale
       _strcpy
     _clr
     _show
       _LCD_Clear
       _LCD_Set_Cursor
       _LCD_Write_Char
       _LCD_Write_String
     _strncat

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      3A       9       60.4%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     45      4E       7       97.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      E6      12        0.0%
ABS                  0      0      E6       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Jun 07 01:19:36 2022

            ___fldiv@aexp 002C              ___fldiv@bexp 002B                         _c 00E9  
                       pc 0002              ___fldiv@sign 0024            ___bmul@product 0072  
                      l60 1A1C                        l61 1A20                        l62 1A21  
                      l63 1A25                        l57 1A14                        l58 1A17  
                      l59 1A1B              ___awdiv@sign 0021                        _in 01C2  
                      fsr 0004       ___wmul@multiplicand 0072       __Umul8_16@word_mpld 0076  
                     l500 1E4E                       l309 1AA7                       l503 1EB4  
                     l263 033B                       l519 1121                       l640 091A  
                     l288 060E                       l537 1279                       l553 082B  
                     l714 1627                       l810 0AF5                       l642 08F8  
                     l490 11D0                       l811 0AB7                       l716 1635  
                     l636 0881                       l670 0A3B                       l495 1C0D  
                     l751 1AF1                       l496 1C27                       l744 0310  
                     l657 09D3                       l692 14E2                       l828 0BC0  
                     l790 1FDA                       l782 1FBA                       l678 0A53  
                     l839 0CB8                       l776 1F7A                       l789 1FD0  
                     _RC0 0038                       _RC1 0039                       _RC2 003A  
                     _RC3 003B                       _RC4 003C                       _RC5 003D  
                     _clr 1A7C                       _key 01B2                       fsr0 0004  
                     _out 01C6                       indf 0000              ___awmod@sign 0076  
            ___flmul@aexp 0032              ___flmul@bexp 0037               _sprintf$882 00AA  
            ___flmul@sign 0031              ___flmul@temp 003C              ___flmul@prod 0038  
         __end_of_LCD_CMD 19F5            _LCD_Set_Cursor 1C3B              ___fltol@exp1 007D  
                    l3000 0A06                      l3004 0A08                      l3022 0A4B  
                    l3130 027F                      l3050 004D                      l4002 0A9C  
                    l3026 0A4F                      l3140 0298                      l4020 0AFC  
                    l4004 0AA2                      l3212 1A47                      l3300 1252  
                    l3150 02CA                      l3046 0043                      l4110 0C63  
                    l4102 0C3C                      l4030 0B21                      l3310 1265  
                    l3222 1729                      l3160 02F9                      l3136 0296  
                    l3128 0262                      l3064 0068                      l3048 0045  
                    l4112 0C68                      l4040 0B26                      l4032 0B15  
                    l3320 1288                      l3312 1275                      l3410 19A4  
                    l3154 02E0                      l3066 006A                      l4106 0C42  
                    l4026 0B09                      l3330 1152                      l3250 0E44  
                    l3076 0080                      l3068 0072                      l4132 0CCF  
                    l4116 0C89                      l4060 0B79                      l3228 17C0  
                    l3244 0DBF                      l4140 137D                      l4300 1EFA  
                    l3406 199E                      l4126 0CAF                      l4038 0B1B  
                    l3326 1149                      l3262 0F50                      l3254 0E6F  
                    l4142 13B0                      l4150 1437                      ?_clr 0070  
                    l4056 0B75                      l3504 110D                      l3424 1D87  
                    l3352 11A8                      l3344 1180                      l4144 13E3  
                    l4152 144E                      l4240 12A1                      l4320 1F37  
                    l4312 1F02                      l3450 1C39                      l4082 0BC5  
                    l3514 1130                      l3506 111D                      l3434 1DBF  
                    l3426 1D97                      l3530 1D07                      l3362 11BC  
                    l3274 11F9                      l2722 1D28                      l4146 1417  
                    l4306 1EFE                      l3460 1E68                      l4084 0BEC  
                    l4068 0B88                      l3524 1CD9                      l3372 11DF  
                    l3364 11CC                      l3292 1232                      l2740 1D49  
                    l3268 0FD5       LCD_Write_String@str 0075                      l3702 1F8D  
                    l3438 1DCC                      l3526 1CE9                      l3534 1D14  
                    l3278 1202                      l2806 1AC5                      l2750 1D6A  
                    l4190 1B2D                      l4182 1B07                      l4262 130B  
                    l4238 1296                      l3624 1581                      l3464 1E8E  
                    l3392 1BBC                      l3712 1FCE                      l3704 1F9F  
                    l4088 0C0D                      l2808 1ACE                      l2728 1D33  
                    l3800 0338                      l4192 1B12                      l3650 15C0  
                    l3642 158C                      l3618 155C                      l3626 1538  
                    l3562 14B4                      l3714 1FBF                      l4098 0C33  
                    l3378 1A9F                      l2818 1ADD                      l2826 0814  
                    l2754 1D72                      l2746 1D5F                      l2738 1D3B  
                    l2770 1C97                      l4194 1B31                      l4274 133E  
                    l4282 1367                      l3644 15A9                      l3628 1586  
                    l3564 14BC                      l3396 1BD2                      l3740 19DF  
                    l2924 0903                      l2916 08C7                      l2852 084C  
                    l3484 10DD                      l2780 1CAB                      l3820 03A9  
                    l3804 033D                      l3654 15C2                      l3582 14DA  
                    l3558 14B1                      l2694 1AE9                      l3726 1FF7  
                    l2950 0949                      l2942 0928                      l2926 0905  
                    l2934 0914                      l2766 1C90                      l3910 067F  
                    l3806 0357                      l4278 134C                      l3680 1631  
                    l3664 15F4                      l3592 1501                      l3752 080C  
                    l2952 094B                      l2960 095B                      l2880 0879  
                    l2856 084F                      l3488 10E6                      l2792 1CCC  
                    l2784 1CB9                      l3904 066C                      l3578 14D7  
                    l3738 19DE                      l3762 1B3B                      l2970 09C5  
                    l2858 0857                      l2778 1C9D                      l3850 0484  
                    l4386 1440                      l3668 160D                      l3692 1F72  
                    l2876 0876                      l2788 1CC4                      l3924 06B8  
                    l3916 069B                      l3860 0501                      l3844 0465  
                    l3836 03FE                      l4388 034F                      l3598 150D  
                    l2886 088B                      l3776 1C61                      l2992 09FB  
                    l3944 07BE                      l3880 05C1                      l3864 051C  
                    l3952 0322                      l3698 1F89                      l2986 09F4  
                    l2978 09E5                      l2994 09FD                      l3938 07AD  
                    l3874 055F                      l3946 07C3                      l3954 07D3  
                    l3892 05FF                      l3990 0A8A                      l3886 05C3  
                    l3984 0A86                      l3976 0A69                      l3968 1A2C  
                    l3986 0A82                      l3978 0A7A                      l3996 0AA0  
                    l3998 0A95                      STR_1 10C5                      STR_2 10B2  
                    STR_3 10BD                      STR_4 10A0                      u4115 09E7  
                    u4061 0986                      u4053 096D                      u4045 094F  
                    u4070 099A                      u4062 0987                      u4215 0A25  
                    u4071 099B                      u4063 098C                      u4072 09A0  
                    u4064 098D                      u3505 1AF2                      u4073 09A1  
                    u4065 0992                      u5025 127E                      u4066 0993  
                    u4405 012A                      u5125 11BD                      u3615 1D4A  
                    u4505 024E                      u5065 1182                      u3625 1D56  
                    u5411 1E79                      u4515 0266                      u4435 0183  
                    u5235 1BD4                      u6035 1FE2                      u5315 1D99  
                    u5155 11D5                      u5075 1197                      u3635 1D60  
                    u3715 1CB1                      u5412 1E7A                      u5413 1E7F  
                    u4605 02B5                      u5245 1BDC                      u5325 1DAE  
                    u5085 11AA                      u3725 1CBA                      u5414 1E80  
                    u5431 1E9F                      u5415 1E85                      u4615 02D3  
                    u4535 0271                      u7007 1B94                      u5335 1DC0  
                    u5432 1EA0                      u5416 1E86                      u3920 08E7  
                    u5433 1EA5                      u4625 02EB                      u7017 1B9C  
                    u5505 110E                      u5185 1AA8                      u6305 05C6  
                    u5434 1EA6                      u3930 08E8                      u5435 1EAB  
                    u4475 0217                      u6155 1C47                      u7027 1BA8  
                    u3915 08DB                      u5195 1AAF                      u4715 1741  
                    u3595 1D3E                      u6315 05F5                      u5436 1EAC  
                    u7037 1BB0                      u4645 1B86                      u5605 1D08  
                    u4725 1783                      u4805 0DD5                      u6405 0777  
                    u7047 1DE3                      u5375 1C35                      u6175 1C6D  
                    u5535 1126                      u5295 1D8B                      u4735 17CB  
                    u3695 1CA0                      u4815 0E0F                      u6255 04BF  
                    u7057 1DE9                      u4905 0FD8                      u4825 0E47  
                    u6345 0616                      u7067 1DF6                      u5715 1541  
                    u5475 10EF                      u3795 0817                      u4675 1657  
                    u7077 1E02                      u5725 154A                      u3965 0909  
                    u4685 16A2                      u4845 0E92                      u4765 0D01  
                    u6365 0688                      u6285 04FF                      u7087 19EE  
                    u5815 159B                      u5575 1CDD                      u4935 1234  
                    u4695 16EC                      u4855 0ECC                      u4775 0D3B  
                    u6375 0695                      u6800 1377                      u5905 1618  
                    u5745 1555                      u4945 1245                      u4865 0F13  
                    u4785 0D82                      u5755 156A                      u5595 1CF7  
                    u4955 1253                      u6395 0715                      u5765 1574  
                    u4885 0F66                      u5766 1575                      u5767 157A  
                    u4895 0FA0                      u5768 157B                      u5769 1580  
                    u5795 1590                      u5955 1F96                      u4995 1266  
                    u5885 15DF                      u6925 1355                      u5895 15FD  
                    u5975 1FB2                      u6945 1F24                      u5995 1FC7  
                    u6955 1F47                      u6965 1F5A                      u6977 1EEF  
                    u6987 1F11                      u6997 132D                      _calc 136B  
       ?_LCD_Write_String 0075                      _atof 19AD                      _main 1EC7  
                    _show 0003                      btemp 007E                      start 0000  
      ??_LCD_Write_String 0077           ___fldiv@new_exp 0025         ___bmul@multiplier 0073  
        __end_of_LCD_DATA 1A27                     ??_clr 0077          __end_of_LCD_Init 1E34  
                   ?_calc 00C3             ___fltol@sign1 007C                     ?_atof 004E  
         __end_of___fladd 0A5E                     ?_main 0070           __end_of___fldiv 163D  
         __end_of___awdiv 1D77           __end_of___lbdiv 1ADF           __end_of___flneg 199C  
         __end_of___awmod 1CD1           __end_of___lbmod 0831           __end_of___flmul 031D  
                   ?_show 0070           __end_of___flsub 1A7C           __end_of___fltol 113F  
         __end_of___lldiv 1DD5           ___awdiv@divisor 0077           __end_of___llmod 1D1D  
         ___awdiv@counter 0020                     _PORTB 0006                     _TRISB 0086  
                   _TRISC 0087       ___lmul@multiplicand 0074    __end_of_LCD_Set_Cursor 1C86  
         __end_of_dpowers 10A0                     _level 00EB                     _val_1 00E5  
                   _val_2 019A                     _scale 0CD8           __end_of_isdigit 080E  
                   atof@s 0052                     main@i 00E1                     main@j 00E3  
         __end_of_isspace 19E1                     pclath 000A                     status 0003  
                   wtemp0 007E           __end_of_sprintf 07D8           __end_of_strncat 1B39  
         ___lbdiv@divisor 0077           ___lbdiv@counter 007A            _LCD_Write_Char 1B76  
         __initialization 07D8              __end_of_calc 1495              __end_of_atof 19BE  
            __end_of_main 1F5D              __end_of_show 0028                    ??_calc 006E  
                  ??_atof 007E                    ??_main 00DE                    ??_show 007C  
       __end_of_LCD_Clear 10D4                 ??_LCD_CMD 0071           ?_LCD_Set_Cursor 0073  
        ___llmod@dividend 0074                    ?_scale 003E          ___awdiv@dividend 0079  
                  _TRISC4 043C                    _TRISC5 043D          __end_of___xxtofl 2000  
  __end_of_LCD_Write_Char 1BB4          __end_of__powers_ 1044                    ___flge 1E34  
                  ___bmul 199C                    ___fleq 1BF3                    ___lmul 1BB4  
               ??___fladd 005A                    ___wmul 1A9D                 ??___fldiv 0078  
               ??___awdiv 007B                 ??___lbdiv 0078                 ??___flneg 0074  
               ??___awmod 0074                 ??___lbmod 0071                 ??___flmul 002C  
               ??___flsub 007E                 ??___fltol 0055                 ??___lldiv 0078  
               ??___llmod 0078                    _append 1291                    _memset 1A42  
                  _fround 163D          ___awdiv@quotient 0022           ___awmod@divisor 0070  
         ___awmod@counter 0075                    _strcpy 1A27                    _strtod 0A5E  
               ??_isdigit 0070                 ??_isspace 0070                 ??_sprintf 00A5  
               ??_strncat 0073          ___lbdiv@dividend 0079           LCD_Set_Cursor@c 0073  
         LCD_Set_Cursor@r 0076                ___flge@ff1 0070                ___flge@ff2 0074  
               ?_LCD_DATA 0070              ___xxtofl@arg 007A              ___xxtofl@exp 0079  
            ___xxtofl@val 0070                ___fleq@ff1 0070                ___fleq@ff2 0074  
         ___lbmod@divisor 0070   __end_of__initialization 07FC           ___lbmod@counter 0075  
               ?_LCD_Init 0070                ___flneg@f1 0070                ___fltol@f1 0051  
         ?_LCD_Write_Char 0070       ___bmul@multiplicand 0070            __pcstackCOMMON 0070  
            __pidataBANK1 10C8              __pidataBANK3 19F5             __end_of_scale 1000  
        ___lbdiv@quotient 007B                __div_to_l_ 113F           __div_to_l_@exp1 0025  
         __div_to_l_@cntr 0024                   ??_scale 0042           __div_to_l_@quot 0020  
              __pbssBANK1 00E5                __pbssBANK3 0190                ??_LCD_DATA 0070  
              ??_LCD_Init 0073             __div_to_l_@f1 0070             __div_to_l_@f2 0074  
       __end_of__Umul8_16 1B02                __pmaintext 1EC7                   ?___flge 0070  
                 ?___bmul 0070                   ?___fleq 0070                   ?___lmul 0070  
                 ?___wmul 0070                   ?_append 0070                   ?_memset 0070  
                 ?_fround 003E            ___lmul@product 0079                calc@result 00D6  
                 ?_strcpy 0070                   ?_strtod 003E                   _LCD_CMD 19E1  
               ?___xxtofl 0070                __stringtab 1000         __end_of__npowers_ 1078  
                 ___fladd 0831                   ___fldiv 1495                   ___awdiv 1D1D  
                 ___lbdiv 1ABE                   ___flneg 1993                   ___awmod 1C86  
                 ___lbmod 080E                   ___flmul 0028                   ___flsub 1A5E  
                 ___fltol 10D4                   ___lldiv 1D77                   ___llmod 1CD1  
              _fround$880 0049                _fround$879 004D                   calc@res 00CC  
        ??_LCD_Set_Cursor 0074                   __ptext1 1291                   __ptext2 1B02  
                 __ptext3 0003                   __ptext4 10C9                   __ptext5 136B  
                 __ptext6 1A27                   __ptext7 031D                   __ptext8 0CD8  
                 __ptext9 1C86               ?__div_to_l_ 0070                   _dpowers 1078  
                 _isdigit 0800                ??___xxtofl 0074          ___awmod@dividend 0072  
                 _isspace 19CF                   _val_one 01A8                   _val_two 019E  
               _LCD_Clear 10C9                   _sprintf 031D                   clrloop0 198C  
                 _strncat 1B02      end_of_initialization 07FC                   memset@c 0070  
                 memset@n 0072                   memset@p 0075           ___lldiv@divisor 0070  
         ___lldiv@counter 007D            __tdiv_to_l_@f1 0070            __tdiv_to_l_@f2 0074  
           ??__tdiv_to_l_ 0078                   strtod@s 004D                LCD_CMD@CMD 0072  
             ___fladd@grs 0065          ___lbmod@dividend 0074             ___xxtofl@sign 0078  
              ?_LCD_Clear 0070               ___fldiv@grs 0027               ___fldiv@rem 0020  
       LCD_Write_String@i 007A          ??_LCD_Write_Char 0071               ___lbmod@rem 0076  
             ___flmul@grs 0033            __end_of___flge 1EC7            __end_of___bmul 19AD  
          __end_of___fleq 1C3B            __end_of___lmul 1BF3            __end_of___wmul 1ABE  
        _LCD_Write_String 1B39            __end_of_append 136B            __end_of_memset 1A5E  
          __end_of_fround 1800            __end_of_strcpy 1A42            __end_of_strtod 0CD8  
     start_initialization 07D8       __end_of__tdiv_to_l_ 1291               __end_of_clr 1A9D  
         ___llmod@divisor 0070           ___llmod@counter 0079                  ??___flge 0078  
                ??___bmul 0071                  ??___fleq 0078                  ??___lmul 0078  
                ??___wmul 0074                init_fetch0 19BE                 __Umul8_16 1ADF  
                ??_append 00DA               __pdataBANK1 00ED               __pdataBANK3 01B2  
                ??_memset 0074                  ??_fround 0042             sprintf@tmpval 00B9  
                ??_strcpy 0071                  ??_strtod 0042                 ___fladd@a 0056  
               ___fladd@b 0052                  ?_LCD_CMD 0070                fround@prec 0051  
               ___fldiv@a 0070                 ___fldiv@b 0074                 ___flmul@a 0028  
               ___flmul@b 0024                 ___flsub@a 0066                 ___flsub@b 006A  
               ___latbits 0002             __pcstackBANK0 0020             __pcstackBANK1 00A0  
             ??_LCD_Clear 0073                 calc@F1256 0190               sprintf@flag 00AF  
             sprintf@eexp 00B7               sprintf@fval 00BE               sprintf@prec 00B1  
                ?___fladd 0052                 calc@num_1 00C3                 calc@num_2 00C7  
                ?___fldiv 0070                  ?___awdiv 0077                  ?___lbdiv 0077  
                ?___flneg 0070                  ?___awmod 0070                  ?___lbmod 0070  
                ?___flmul 0024                  ?___flsub 0066                  ?___fltol 0051  
                ?___lldiv 0070                  ?___llmod 0070                 __npowers_ 1044  
              ?__Umul8_16 0070                 __pstrings 1000               __tdiv_to_l_ 11E8  
            ??__div_to_l_ 0078                  ?_isdigit 0070                  ?_isspace 0070  
               _scale$881 004C               strncat@from 0070                  ?_sprintf 00A0  
             strncat@size 0071                  ?_strncat 0070                  _LCD_DATA 1A0D  
                _LCD_Init 1DD5            ___wmul@product 0074                 clear_ram0 198B  
      __end_of__div_to_l_ 11E8                 _operation 00ED               strtod@flags 0047  
             strtod@expon 0048                 append@key 00DD               __stringbase 100F  
       ___wmul@multiplier 0070         ___lmul@multiplier 0070             calc@operation 00CB  
__end_of_LCD_Write_String 1B76       LCD_Write_Char@High4 0073               ??__Umul8_16 0072  
      __end_of__stringtab 1010               _isdigit$666 0070                sprintf@val 00B3  
                ___xxtofl 1F5D                  __ptext10 1D1D                  __ptext11 163D  
                __ptext20 1A5E                  __ptext12 080E                  __ptext21 0831  
                __ptext13 1ABE                  __ptext30 0800                  __ptext22 1A7C  
                __ptext14 11E8                  __ptext31 1F5D                  __ptext23 1A42  
                __ptext15 113F                  __ptext40 1DD5                  __ptext32 1BB4  
                __ptext24 1B39                  __ptext16 1A9D                  __ptext41 19E1  
                __ptext33 1993                  __ptext25 1B76                  __ptext17 1CD1  
                __ptext42 1A0D                  __ptext34 0028                  __ptext26 1C3B  
                __ptext18 1D77                  __ptext35 1ADF                  __ptext27 19AD  
                __ptext19 10D4                  __ptext36 1E34                  __ptext28 0A5E  
                __ptext37 1BF3                  __ptext29 19CF                  __ptext38 1495  
                __ptext39 199C                  __powers_ 1010                strcpy@from 0070  
              strtod@eexp 0046       LCD_Set_Cursor@High4 0078               _isspace$669 0070  
      LCD_Write_Char@Data 0074        LCD_Write_Char@Low4 0072                  init_ram0 19C2  
                isdigit@c 0071                  memset@p1 0076                  scale@scl 0050  
               sprintf@ap 00AE          __tdiv_to_l_@exp1 0025          __tdiv_to_l_@cntr 0024  
               sprintf@sp 00BD          __tdiv_to_l_@quot 0020                  isspace@c 0071  
        ___lldiv@dividend 0074                 strncat@cp 0075                 strncat@to 0074  
               stringcode 100A                 strtod@res 003E        LCD_Set_Cursor@Low4 0077  
      LCD_Set_Cursor@Temp 0079              ?__tdiv_to_l_ 0070    __Umul8_16@multiplicand 0070  
                sprintf@c 00C2                  sprintf@f 00A0              LCD_DATA@Data 0070  
        ___lldiv@quotient 0079                  strcpy@cp 0073                  strcpy@to 0072  
                stringdir 100A                  stringtab 1000                  strtod@_u 0049  
           ___fladd@signs 0062              ___fladd@aexp 0063              ___fladd@bexp 0064  
    __Umul8_16@multiplier 0078         __Umul8_16@product 0074  
